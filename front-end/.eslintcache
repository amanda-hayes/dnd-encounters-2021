[{"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js":"1","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js":"2","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js":"3","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js":"4","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js":"5","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GenerateChar.js":"6","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js":"7","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js":"8","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js":"9","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js":"10"},{"size":362,"mtime":1609205093329,"results":"11","hashOfConfig":"12"},{"size":1219,"mtime":1609630900283,"results":"13","hashOfConfig":"12"},{"size":540,"mtime":1609383362658,"results":"14","hashOfConfig":"12"},{"size":4210,"mtime":1609635956755,"results":"15","hashOfConfig":"12"},{"size":4265,"mtime":1609634339562,"results":"16","hashOfConfig":"12"},{"size":1313,"mtime":1609625055356,"results":"17","hashOfConfig":"12"},{"size":1032,"mtime":1609634609815,"results":"18","hashOfConfig":"12"},{"size":3918,"mtime":1609634734898,"results":"19","hashOfConfig":"12"},{"size":665,"mtime":1609616860519,"results":"20","hashOfConfig":"12"},{"size":580,"mtime":1609632129851,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"kewybn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js",[],["49","50"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js",["51"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js",["52"],"import { useRef } from 'react';\nimport '../App.css';\nimport { useRouteMatch } from \"react-router-dom\";\n\nconst UpdateCharacterForm = (props) => {\n    const updateNameInput = useRef(null);\n    const updatePronounsInput = useRef(null);\n    const updateRaceSelect = useRef(null);\n    const updateCharacterClassSelect = useRef(null);\n    const updateHpSelect = useRef(null);\n    const updateAttackSelect = useRef(null);\n    const updateArmorClass = useRef(null);\n    const updateCatchphrasesSelect = useRef(null);\n\n    const characterDetailRouteMatch = useRouteMatch(\"/UpdateCharacterForm/:id\");\n    const charId = characterDetailRouteMatch.params.id;\n\n    const updateCharacter = async (event) => {\n        event.preventDefault()\n        const name = updateNameInput.current.value;\n        const pronouns = updatePronounsInput.current.value;\n        const race = updateRaceSelect.current.value;\n        const characterClass = updateCharacterClassSelect.current.value;\n        const hp = updateHpSelect.current.value;\n        const attack = updateAttackSelect.current.value;\n        const armorClass = updateArmorClass.current.value;\n        const catchphrases = updateCatchphrasesSelect.current.value;\n        const body = JSON.stringify({ name, pronouns, race, characterClass, hp, attack, armorClass, catchphrases });\n\n\n        event.currentTarget.reset();\n\n        try {\n            const response = await fetch(`http://localhost:7000/characters/${charId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body\n            });\n\n            props.history.push('/Characters');\n\n        } catch (error) {\n            console.error(error)\n        }\n    };\n\n    return (\n        <>\n            <h2>Update Character</h2>\n            <form onSubmit={updateCharacter}>\n                <label>Name:</label> <input type=\"text\" name=\"name\" ref={updateNameInput} />\n                <br />\n                <label>Pronouns:</label> <input type=\"text\" name=\"pronouns\" ref={updatePronounsInput} />\n                <br />\n                <label>Race:</label> \n                <select className=\"select\"ref={updateRaceSelect}>\n                    <option value=\"Human\">Human</option>\n                    <option value=\"Half Elf\">Elf</option>\n                    <option value=\"Gnome\">Gnome</option>\n                    <option value=\"Half Orc\">Half Orc</option>\n                </select>\n                <br />\n                <label>Class:</label> \n                <select className=\"select\" ref={updateCharacterClassSelect}>\n                    <option value=\"Fighter\">Fighter (Tank)</option>\n                    <option value=\"Wizard\">Wizard (DPS)</option>\n                    <option value=\"Rogue\">Rogue (stabby stabby)</option>\n                    <option value=\"Cleric\">Cleric (Healer)</option>\n                </select>   \n                <br />\n                <label> HP:</label>\n                <select className=\"select\"ref={updateHpSelect}>\n                    <option value=\"Default\">12</option>\n                </select>\n                <br />\n                <label> Attack: </label>\n                <select className=\"select\" ref={updateAttackSelect}>\n                    <option value=\"Default\">Sword Slash</option>\n                    <option value=\"Default\">Magic Missile</option>\n                    <option value=\"Default\">Shoryuken</option>\n                </select>\n                <br />\n                <label> Armor Class:</label>\n                <select className=\"select\"ref={updateArmorClass}>\n                    <option value=\"Default\">15</option>\n                </select>\n                <label> Catchphrases:</label> \n                <select className=\"select\" ref={updateCatchphrasesSelect}>\n                    <option value=\"Default\">'Let's Do This!'</option>\n                    <option value=\"Default\">'Can't we ever just have a normal field trip?'</option>\n                    <option value=\"Default\">'Screw it, we're practically Gods!'</option>\n                </select>\n                <br />\n                <input type=\"submit\" value=\"Update Character\" />\n            </form>\n        </>\n    )\n};\n\nexport default UpdateCharacterForm;","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GenerateChar.js",["53"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\n\nfunction GenerateCharComponent(props) {\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch('http://localhost:7000/randomChar');\n      const data = await response.json();\n      setRandomCharacters(data);\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    const randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    const generatedCharacter = randomCharacters[randomIndex];\n\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(generatedCharacter)\n      });\n      console.log(generatedCharacter);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  useEffect(() => { \n    fetchRandomCharacters()\n  }, []);\n\n  return (\n    <div>\n      <h2>Generate a random character for me</h2>\n      <button onClick={handleClick}\n      >Generate</button>\n    </div>\n  )\n}\nexport default GenerateCharComponent;\n\n\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js",["54","55"],"import '../App.css';\nimport { useState, useEffect } from 'react';\nimport { useRouteMatch } from \"react-router-dom\";\n\nfunction CharacterStats() {\n  const [character, setCharacter] = useState({});\n  const characterDetailRouteMatch = useRouteMatch(\"/Characters/:id\");\n\n  const fetchCharacter = async () => {\n    try {\n        const response = await fetch(`http://localhost:7000/characters/${characterDetailRouteMatch.params.id}`);\n        const data = await response.json();\n        setCharacter(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => { fetchCharacter() }, []);\n\n  return (\n    <div>\n      <h1>Character Details</h1>\n      {character.name}<br />\n      {character.race}<br />\n      {character.pronouns}<br />\n      {character.characterClass}<br />\n      {character.hp}<br />\n      {character.weapon}<br />\n      {character.attack}<br />\n      {character.armorClass}<br />\n      {character.catchphrases}<br />\n      <img src=\"./rand.jpg\" />\n    </div>\n  )\n}\n\nexport default CharacterStats;","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js",["56","57","58"],"import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction AllCharPage() {\n  const [characters, setCharacters] = useState([]);\n\n  const fetchCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\");\n      const data = await response.json();\n      setCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deleteCharacter = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:7000/characters/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      });\n\n      const data = await response.json();\n      const filteredCharacters = characters.filter(\n        (character) => character._id !== data._id\n      );\n      setCharacters(filteredCharacters);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // GENERATE A NEW CHARACTER\n\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/randomChar\");\n      const data = await response.json();\n      setRandomCharacters(data);\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    let randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    let generatedCharacter = randomCharacters[randomIndex];\n\n    try {\n      if (characters.includes(generatedCharacter._id) === false) {\n        const response = await fetch(\"http://localhost:7000/characters\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: JSON.stringify(generatedCharacter),\n        });\n\n        setRandomCharacters(randomCharacters.filter(rando => rando._id != generatedCharacter._id));\n        characters.push(generatedCharacter);\n        setCharacters(characters);\n      } else {\n        // remove from list and grab another random character\n        setRandomCharacters(randomCharacters.filter(rando => rando._id != generatedCharacter._id));\n        generateChar();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  useEffect(() => {\n    fetchCharacters();\n    fetchRandomCharacters();\n  }, []);\n\n  return (\n    <div className=\"character-background\">\n      <h1>My Characters</h1>\n      <p>View and manage all your characters, or create a new one.</p>\n      <br />\n      <div>\n        <h2 id=\"create-new\">Create a New Character</h2>\n        <Link to=\"/CreateCharacterForm\">\n          <button>Create New Character</button>\n        </Link>\n        <br />\n        <h2 id=\"create-new\">Generate a random character for me</h2>\n        <button onClick={handleClick}>Generate</button>\n      </div>\n      <div id=\"character-list\">\n        <ul>\n          <>\n            {characters.map((character) => {\n              return (\n                <li key={character._id}>\n                  {character.name} | {character.race} |{\" \"}\n                  {character.characterClass}\n                  <br />\n                  <button type=\"button\">\n                    <Link to={`characters/${character._id}`}>VIEW</Link>\n                  </button>\n                  <button>\n                    <Link to={`/UpdateCharacterForm/${character._id}`}>\n                      EDIT\n                    </Link>\n                  </button>\n                  <button\n                    onClick={(event) => {\n                      deleteCharacter(character._id);\n                    }}\n                  >\n                    DELETE{\" \"}\n                  </button>\n                </li>\n              );\n            })}\n          </>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default AllCharPage;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js",["59"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction GetRandom(props) {\n    const [randomChars, setRandomCharacters] = useState([]);\n  \n    const fetchRandomCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/randomchar');\n        const data = await response.json();\n        setRandomCharacters(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    useEffect(() => { \n        fetchRandomCharacters()\n      }, []);\n\n     \n      return (\n        <div>\n          <h1>Hey</h1>\n\n        </div>\n      )\n      \n\n    }\n\n    export default GetRandom;",["60","61"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":32,"column":19,"nodeType":"68","messageId":"69","endLine":32,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":34,"column":19,"nodeType":"68","messageId":"69","endLine":34,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":24,"column":13,"nodeType":"68","messageId":"69","endLine":24,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":19,"column":41,"nodeType":"72","endLine":19,"endColumn":43,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":33,"column":7,"nodeType":"76","endLine":33,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":58,"column":15,"nodeType":"68","messageId":"69","endLine":58,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":66,"column":72,"nodeType":"79","messageId":"80","endLine":66,"endColumn":74},{"ruleId":"77","severity":1,"message":"78","line":71,"column":72,"nodeType":"79","messageId":"80","endLine":71,"endColumn":74},{"ruleId":"66","severity":1,"message":"81","line":5,"column":12,"nodeType":"68","messageId":"69","endLine":5,"endColumn":23},{"ruleId":"62","replacedBy":"82"},{"ruleId":"64","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacter'. Either include it or remove the dependency array.","ArrayExpression",["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'randomChars' is assigned a value but never used.",["84"],["85"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [fetchCharacter]",{"range":"89","text":"90"},[602,604],"[fetchCharacter]"]