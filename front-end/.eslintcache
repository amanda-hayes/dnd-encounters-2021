[{"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js":"1","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js":"2","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js":"3","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js":"4","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js":"5","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js":"6","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js":"7","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js":"8","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js":"9","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js":"10","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js":"11","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js":"12","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js":"13","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Register.js":"14","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Login.js":"15","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogout.js":"16","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogin.js":"17","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/RefreshToken.js":"18","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UserContext.js":"19"},{"size":362,"mtime":1609205093329,"results":"20","hashOfConfig":"21"},{"size":3998,"mtime":1612205134770,"results":"22","hashOfConfig":"21"},{"size":587,"mtime":1611874847371,"results":"23","hashOfConfig":"21"},{"size":10789,"mtime":1612214696647,"results":"24","hashOfConfig":"21"},{"size":8225,"mtime":1612206133346,"results":"25","hashOfConfig":"21"},{"size":2722,"mtime":1612125147731,"results":"26","hashOfConfig":"21"},{"size":7292,"mtime":1612210750605,"results":"27","hashOfConfig":"21"},{"size":665,"mtime":1609616860519,"results":"28","hashOfConfig":"29"},{"size":8110,"mtime":1612144960942,"results":"30","hashOfConfig":"21"},{"size":557,"mtime":1611763716660,"results":"31","hashOfConfig":"21"},{"size":5859,"mtime":1611590514451,"results":"32","hashOfConfig":"21"},{"size":2086,"mtime":1610045702699,"results":"33","hashOfConfig":"21"},{"size":507,"mtime":1610044795898,"results":"34","hashOfConfig":"21"},{"size":1806,"mtime":1611725463462,"results":"35","hashOfConfig":"21"},{"size":2113,"mtime":1612070365698,"results":"36","hashOfConfig":"21"},{"size":492,"mtime":1611804926591,"results":"37","hashOfConfig":"21"},{"size":950,"mtime":1611807223477,"results":"38","hashOfConfig":"21"},{"size":503,"mtime":1611804773407,"results":"39","hashOfConfig":"21"},{"size":109,"mtime":1611872402056,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1i8oqq9",{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":6,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"kewybn",{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js",[],["89","90"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js",["91","92","93","94","95","96","97"],"import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n  Link,\n  withRouter,\n} from \"react-router-dom\";\nimport AllCharPage from \"./Components/Characters\";\nimport CharacterStats from \"./Components/CharDetails\";\nimport UpdateCharacterForm from \"./Components/UpdateCharacterForm\";\nimport CreateCharacterForm from \"./Components/CreateCharacterForm\";\nimport Tavern from \"./Components/Tavern.js\";\nimport Battle from \"./Components/Battle\";\nimport Home from \"./Components/Home\";\nimport YouWin from \"./Components/YouWin\";\nimport YouLose from \"./Components/YouLose\";\nimport Register from \"./Components/Register\";\nimport Login from \"./Components/Login\";\nimport { useState } from \"react\";\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\n\nfunction App(props) {\n  const [loggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [userId, setUserId] = useState(null);\n\n  // Get a user id\n  // const fetchUserId = async () => {\n    // try {\n    //   const response = await fetch(\"http://localhost:7000/login\");\n    //   const data = await response.json();\n    //   console.log(\"data: \" + data);\n\n    //   return data._id;\n    // } catch (error) {\n    //   console.error(error);\n    // }\n    // return null;\n  //   return \"600cdecd78275026de953dee\";\n  // };\n\n  \n\n  /*****************\n   * LOGOUT *\n   ****************/\n\n  const handleLogOut = () => {\n    localStorage.clear();\n    setIsLoggedIn(false);\n    alert(\"You have been logged out.\");\n    props.history.push(\"/Login\");\n  };\n\n  const userLogin = async (body) => {\n    try {\n      const response = await fetch(\"http://localhost:7000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body,\n      });\n\n      const data = await response.json();\n      window.localStorage.setItem(\"token\", `Bearer ${data.token}`);\n      setToken(`Bearer ${data.token}`);\n\n      setIsLoggedIn(true);\n      alert(\"Logged In!\");\n      props.history.push(\"/Characters\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  console.log(props);\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"nav-routes\" />\n        <Navbar bg='light' expand=\"lg\">\n        <Navbar.Brand href=\"/\">D&D Encounters</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\"> Home</Nav.Link>\n              <Nav.Link href=\"/Characters\"> Characters</Nav.Link>\n              <Nav.Link href=\"/Register\"> Register </Nav.Link>\n              <Nav.Link href=\"/Login\">Login</Nav.Link>\n              <Nav.Link onClick={handleLogOut}>Logout</Nav.Link>\n              <Nav.Link>{loggedIn ? \"{You are logged in}\" : \"{You are not logged in}\"}</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Characters\" exact component={AllCharPage} />\n          <Route path=\"/Characters/:id\" component={CharacterStats} />\n          <Route\n            path=\"/CreateCharacterForm\"\n            exact\n            component={CreateCharacterForm}\n          />\n          <Route\n            path=\"/UpdateCharacterForm/:id\"\n            exact\n            component={UpdateCharacterForm}\n          />\n          <Route path=\"/Tavern\" component={Tavern} />\n          <Route path=\"/Battle\" component={Battle} />\n          <Route path=\"/YouWin\" component={YouWin} />\n          <Route path=\"/YouLose\" component={YouLose} />\n          <Route path=\"/Register\" component={Register} />\n          <Route\n            path=\"/Login\"\n            render={() => (\n              <Login\n                userLogin={userLogin}\n                setToken={setToken}\n                setIsLoggedIn={setIsLoggedIn}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </>\n  );\n}\nexport default withRouter(App);\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js",["119"],"import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport { Image } from 'react-bootstrap';\n\nfunction CharacterStats() {\n  const [character, setCharacter] = useState({});\n  const characterDetailRouteMatch = useRouteMatch(\"/Characters/:id\");\n\n  const fetchCharacter = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:7000/characters/${characterDetailRouteMatch.params.id}`\n      );\n      const data = await response.json();\n      setCharacter(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCharacter();\n  }, []);\n\n  return (\n    <>\n      <div className=\"parchment-background\">\n        <br />\n        <br />\n        <br />\n        <br />\n        <h1 id=\"character-sheet-heading\">\n          {character.name}'s\n          <br />\n          Character Sheet\n        </h1>\n        <div id=\"character-container\">\n          {/* <div id=\"character-stats-image\"> */}\n            <br />\n            <br />\n            <Image src={character.image} thumbnail/>\n          </div>\n          <div id=\"stats-list\">\n            <label>Name:</label> {character.name}\n            <br />\n            <label>Race:</label> {character.race}\n            <br />\n            <label>Pronouns:</label> {character.pronouns}\n            <br />\n            <label>Class:</label> {character.characterClass}\n            <br />\n            <label>HP:</label> {character.HP}\n            <br />\n            <label>Main Weapon:</label> {character.weapon}\n            <br />\n            <label>Main Attack:</label> {character.attack}\n            <br />\n            <label>Armor Class:</label> {character.armorClass}\n            <br />\n            <label>Motto:</label>\n            <br />\"{character.catchphrases}\"\n            <br />\n            <br />\n            <label>Backstory:</label>\n            <br />\"{character.backstory}\"\n            <br />\n            <label>Strength:</label> {character.strength}\n            <br />\n            <label>Dexterity:</label> {character.dexterity}\n            <br />\n            <label>Constitution</label> {character.constitution}\n            <br />\n            <label>Intelligence:</label> {character.intelligence}\n            <br />\n            <label>Wisdom</label> {character.wisdom}\n            <br />\n            <label>Charisma:</label> {character.charisma}\n            <br />\n            <br />\n            <button>\n              <Link to={`/UpdateCharacterForm/${character._id}`}>\n                EDIT CHARACTER\n              </Link>\n            </button>\n          </div>\n        </div>\n      {/* </div> */}\n    </>\n  );\n}\n\nexport default CharacterStats;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js",["120","121","122","123","124"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js",["125"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction GetRandom(props) {\n    const [randomChars, setRandomCharacters] = useState([]);\n  \n    const fetchRandomCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/randomchar');\n        const data = await response.json();\n        setRandomCharacters(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    useEffect(() => { \n        fetchRandomCharacters()\n      }, []);\n\n     \n      return (\n        <div>\n          <h1>Hey</h1>\n\n        </div>\n      )\n      \n\n    }\n\n    export default GetRandom;",["126","127"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js",["128","129"],"import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport { Card } from \"react-bootstrap\";\nimport beholder from \"../beholder.jpeg\";\nimport d20 from \"../images/d20.png\";\nimport d20natone from \"../images/d20natone.png\";\n\nfunction Battle() {\n  const [playerCharacters, updatePlayerCharactersList] = useState([]);\n  const [open, setOpen] = useState(true);\n  const onCloseModal = () => setOpen(false);\n  const [openBattle, setOpenBattle] = useState(false);\n  const onOpenBattle = () => setOpenBattle(true);\n  const onCloseBattle = () => setOpenBattle(false);\n  const [openDiceModal, setOpenDiceModal] = useState(false);\n  const onOpenDiceRollModal = () => setOpenDiceModal(true);\n  const onCloseDiceRollModal = () => setOpenDiceModal(false);\n  const [modalContent, setModalContent] = useState([]);\n  let history = useHistory();\n\n  const fetchPlayerCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\");\n      const charactersData = await response.json();\n\n      updatePlayerCharactersList(charactersData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function rollAD20() {\n    let diceRoll = Math.floor(Math.random() * 20) + 1;\n    return diceRoll;\n  }\n\n  function attackClickHandler(event) {\n    const newPlayerCharacters = [...playerCharacters];\n    const monster = newPlayerCharacters.find(\n      (npc) => npc.characterType === \"NPC\"\n    );\n\n    if (monster._id !== event.target.value) {\n      const roll = rollAD20();\n\n      if (roll >= monster.armorClass) {\n        monster.HP -= 4;\n        alert(`It's a hit! The Beholder takes 4 damage!`);\n\n        if (monster.HP <= 0) {\n          history.push(\"/YouWin\");\n          alert(\n            `You did it! You looted the monster and retrieved the precious goldfish!`\n          );\n        }\n      } else {\n        alert(`You rolled a ${roll} . You missed!`);\n      }\n\n      const turnOverMonster = newPlayerCharacters.shift();\n      updatePlayerCharactersList([...newPlayerCharacters, turnOverMonster]);\n    } else {\n      const playableCharacters = newPlayerCharacters.filter(\n        (pc) => pc.characterType !== \"NPC\"\n      );\n\n      const mathFunc = Math.floor(Math.random() * playableCharacters.length);\n      const characterAttacked = playableCharacters[mathFunc];\n      const roll = rollAD20();\n\n      if (roll >= characterAttacked.armorClass) {\n        characterAttacked.HP -= 8;\n        alert(characterAttacked.name + ` was attacked and hit for 8 damage!`);\n      } else {\n        alert(`Monster rolled a ${roll} . It's a miss!`);\n      }\n\n      if (characterAttacked.HP <= 0) {\n        alert(`Oh no! ` + characterAttacked.name + ` passed out!`);\n\n        const nowWithNoDeadPlayers = newPlayerCharacters.filter(\n          (player) => player._id !== characterAttacked._id\n        );\n\n        const turnOver = nowWithNoDeadPlayers.shift();\n        updatePlayerCharactersList([...nowWithNoDeadPlayers, turnOver]);\n      } else {\n        const turnOverMon = newPlayerCharacters.shift();\n        updatePlayerCharactersList([...newPlayerCharacters, turnOverMon]);\n      }\n    }\n\n    if (\n      playerCharacters.length === 1 &&\n      playerCharacters[0]._id === monster._id\n    ) {\n      alert(\n        \"Oh no! Congratulations on your TPK! You lose Dungeons and Dragons and now have to create new characters and form a new party. Bummer!\"\n      );\n      history.push(\"/YouLose\");\n    }\n  }\n\n  function rollInitClickHandler(event) {\n    const newPlayerCharacters = [...playerCharacters];\n    const playersInited = newPlayerCharacters.map((player) => {\n      player.initiative = rollAD20();\n      onOpenDiceRollModal();\n\n      return player;\n    });\n\n    let modalMessage = \"\";\n\n    playersInited.map((player) => {\n      if (player.initiative === 20) {\n        modalMessage +=\n          player.name +\n          ` rolled a natural ` +\n          player.initiative +\n          `....OH YEAH.....CRIT!` +\n          \".\";\n      } else if (player.initiative === 1) {\n        modalMessage +=\n          player.name +\n          ` rolled a natural ` +\n          player.initiative +\n          `....Oh boy.....AUTOMATIC FAIL! ` +\n          \".\";\n      } else {\n        modalMessage +=\n          player.name + ` rolled a ` + player.initiative + \"        .      \";\n      }\n    });\n\n    setModalContent(modalMessage);\n\n    updatePlayerCharactersList(\n      playersInited.sort((a, b) => b.initiative - a.initiative)\n    );\n  }\n\n  function shoutClickHandler(event) {\n    alert(\n      playerCharacters\n        .find((char) => char._id === event.target.value)\n        .catchphrases.split(\".\")[0]\n    );\n  }\n\n  useEffect(() => {\n    fetchPlayerCharacters();\n    setModalContent();\n    setOpenDiceModal();\n    setOpenBattle();\n  }, []);\n\n  return (\n    <>\n      <div className=\"battle-background\">\n        <div>\n          <br />\n          <img src={d20natone} alt=\"d20natone\" className=\"D20natone-photo\" />\n          <img src={d20} alt=\"d20\" className=\"D20-photo\" />\n          <br />\n          <Modal open={open} onClose={onCloseModal} center>\n            <h2>On your way!</h2>\n            <p\n              classNames={{\n                overlay: \"tavern-overlay\",\n                modal: \"tavern-modal\",\n              }}\n            >\n              You're traveling through the forest....suddenly...you hear a\n              terrifying sound. The blood drains from your party member's faces\n              as you search for the source.\n            </p>\n            <br />\n            <button onClick={onCloseModal} id=\"tavern-button\">\n              OKAY\n            </button>\n          </Modal>\n\n          <button onClick={onOpenBattle}>WHAT'S THAT SOUND?</button>\n          <Modal\n            open={openBattle}\n            onClose={onCloseBattle}\n            center\n            className=\"battle-modal\"\n          >\n            <h2>Oh no!</h2>\n            <p>\n              A Beholder appears and it's guarding the treasure you so\n              desperately need! It's time to roll for initiative!\n            </p>\n            <img src={beholder} alt=\"beholder\" />\n            <br />\n            <button onClick={onCloseBattle} id=\"tavern-button\">\n              FIGHT\n            </button>\n          </Modal>\n        </div>\n        <button onClick={rollInitClickHandler}>ROLL INITIATIVE</button>\n        <Modal\n          open={openDiceModal}\n          onClose={onCloseDiceRollModal}\n          center\n          className=\"battle-modal\"\n        >\n          <h1>Initiative Rolls</h1>\n          <br />\n          <br />\n          <p>{modalContent}</p>\n          <button onClick={onCloseDiceRollModal}>OKAY</button>\n        </Modal>\n        <br />\n        <br />\n        <h2 id=\"battle-page-h2\">Players</h2>\n        <ul>\n          {playerCharacters.map((player) => {\n            return (\n              <li key={player._id} id=\"battle-character-list\">\n                {/* <img src={player.thumbnail} id=\"thumbnail\" />\n                {player.name} <br /> HP: {player.HP} | Armor Class:{\" \"}\n                {player.armorClass} | INIT: {player.initiative} */}\n                <Card style={{ width: \"18rem\" }}>\n                  <Card.Img variant=\"top\" src={player.thumbnail} />\n                  <Card.Body>\n                    <Card.Title>{player.name}</Card.Title>\n                    <Card.Text>\n                      {player.race} | {player.characterClass} <br />\n                      HP: {player.HP} | Armor Class: {player.armorClass} | INIT:{\" \"}\n                      {player.initiative}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n                <br />\n                <button value={player._id} onClick={shoutClickHandler}>\n                  SHOUT\n                </button>\n                <button value={player._id} onClick={attackClickHandler}>\n                  ATTACK\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Battle;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js",["130"],"import \"../App.css\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport wizardbook from \"../images/wizardbook.png\";\n\nfunction Tavern() {\n  const [open, setOpen] = useState(true);\n  const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => setOpen(false);\n\n  const [openChat, setOpenChat] = useState(false);\n  const onOpenChatModal = () => setOpenChat(true);\n  const onCloseChatModal = () => setOpenChat(false);\n\n  const [openWizChat, setOpenWizChat] = useState(false);\n  const onOpenWizChatModal = () => setOpenWizChat(true);\n  const onCloseWizChatModal = () => setOpenWizChat(false);\n\n  const [openQuestChat, setOpenQuestChat] = useState(false);\n  const onOpenQuestChat = () => setOpenQuestChat(true);\n  const onCloseQuestChat = () => setOpenQuestChat(false);\n\n  return (\n    <>\n      <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n      <div id=\"tavern-background-image\">\n        <Modal\n          open={open}\n          onClose={onCloseModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h2>So it begins...</h2>\n          <p>\n            In a land of Myth and a time of Legend there lived a group of\n            adventurers who's destinies would sculpt the future of the world. It\n            all started in a little tavern in a little village when a little\n            gnome spilled their little drink onto an abnormally large tome\n            belonging to an old Wizard....\n          </p>\n          <button onClick={onOpenChatModal}>BEGIN</button>\n        </Modal>\n\n        <Modal\n          open={openChat}\n          onClose={onCloseChatModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Party time!</h1>\n          <p>\n            Tavern music is playing loudly, the drinks are flowing and you are\n            reminiscing with your adventuring party.\n            <br />\n            <br />\n            \"Oi! Thiss Is may thissessmahsoooong!\" says a tipsy gnome as she\n            spills some ale on a Wizard's Tome.\n            <br />\n            <br />\n            The old Wizard says, \"Whoa there...watch yourself, gnome! This book\n            is THE Adventurers Registry of Legend! It's said that any adventurer\n            who signs their name in this book is to go off on a quest in which\n            the results will shape the future of the world as we know it!\"\n            <br />\n            <br />\n            \"Oowwhhh shorry shir!\" says the tipsy gnome. \"I\n            dii..diddnn...dddiddidnnn....was an axethdent. 'Tis my birthhday\n            toodayy!\" The Gnome leans closer to the Wizard and whispers \"Ohh\n            what're ye doin frienly wiz..um...wiz...\" and she promptly passes\n            out as she falls out of her chair and onto the floor.\n            <br />\n            <br />\n            The old Wizard says \"Mmm... I'm afraid it's not interested in you,\n            little one...\" They raise their gaze and lock eyes with you.\n            <br />\n            <br />\n            \"You there, on the other hand,\" they say. \" I have much to discuss\n            with you! Come, sit, enjoy an ale on me while I tell you a story\n            from a long long time ago...\"\n          </p>\n          <button onClick={onOpenWizChatModal}>GO ON....</button>\n        </Modal>\n        <br />\n\n        <Modal\n          open={openWizChat}\n          onClose={onCloseWizChatModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Pull up a chair!</h1>\n          <img src={wizardbook} id=\"wizard-book-image\" alt=\"wizard-book\" />\n          <p>\n            The old wizard tells you a tale of intrigue and courage, of magic\n            and mystery, of treasure and toil, of monsters and men. Suddenly,\n            you see a glow coming from the tome in his hands.\n            <br />\n            <br />\n            Finally, he says \"Ahhh yes, so it seems the tome finds you worthy of\n            such a quest. Well now, let's see here, where we are to send\n            you...hmm?\" He licks his index finger and turns a page. \"It says:\n            Behold, Adventurers! The quest is rather simple, however the\n            consequences are severe...I require, on the Isle of Sapphire, a\n            small goldfish... For you'll find me in the depths of Xanthar's\n            Lair. Think you're up to the task?\"\n          </p>\n          <button onClick={onOpenQuestChat}>ACCEPT QUEST</button>\n        </Modal>\n        <br />\n        <Modal\n          open={openQuestChat}\n          onClose={onCloseQuestChat}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Wonderful!</h1>\n          <p\n            classNames={{\n              modal: \"battle-modal\",\n            }}\n          >\n            \"Retrieve the item and meet me back in this tavern when you are\n            done. Now get a move on...and good luck, adventurer. You're going to\n            need it.\"\n          </p>\n          <Link to=\"./battle\">\n            <button\n              classNames={{\n                overlay: \"tavern-overlay\",\n                modal: \"tavern-modal\",\n              }}\n            >\n              LET'S GO\n            </button>\n          </Link>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default Tavern;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Register.js",["131"],"import \"../App.css\";\nimport { useRef } from \"react\";\n\nconst RegisterForm = (props) => {\n  const usernameInput = useRef(null);\n  const passwordInput = useRef(null);\n  const confirmPasswordInput = useRef(null);\n\n  const register = async (event) => {\n    event.preventDefault();\n    const body = JSON.stringify({\n      username: usernameInput.current.value,\n      password: passwordInput.current.value,\n      confirmPassword: confirmPasswordInput.current.value,\n    });\n    event.currentTarget.reset();\n    try {\n      const response = await fetch(\"http://localhost:7000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body,\n      });\n      if (passwordInput !== confirmPasswordInput) {\n        alert(\"Passwords do not match!\");\n      } else {\n        alert(\"Account created!\");\n        props.history.push(\"/Login\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <h2>Register</h2>\n        <p>\n          Please create a unique username and password to create an account. We\n          suggest passwords be at least 8 characters with letters, numbers, and\n          special characters.\n        </p>\n        <form onSubmit={register} method=\"post\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={usernameInput} />\n          <br />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={passwordInput} />\n          <br />\n          <label>Confirm Password</label>\n          <input type=\"password\" name=\"confirmpassword\" ref={confirmPasswordInput} />\n          <br />\n          <input type=\"submit\" value=\"REGISTER\" id=\"submit-btn\" />\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Login.js",["132"],"import \"../App.css\";\nimport { useEffect, useRef } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { refreshTokenSetup } from \"./RefreshToken\";\n\nconst LoginForm = (props) => {\n  const nameInput = useRef(null);\n  const passwordInput = useRef(null);\n  const clientId =\n    \"279098454783-6ifmp48rjph5516k7i7hajcsfshh8h2a.apps.googleusercontent.com\";\n\n  const login = async (event) => {\n    event.preventDefault();\n    const body = JSON.stringify({\n      username: nameInput.current.value,\n      password: passwordInput.current.value,\n    });\n    props.userLogin(body);\n  };\n\n  const onSuccess = (res) => {\n    console.log(\"[Login Success] currentUser:\", res.profileObj);\n\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = (res) => {\n    console.log(\"[Login Failed] res:\", res);\n  };\n\n  const onLogoutSuccess = () => {\n    alert(\"Logged Out Successfully\");\n  };\n\n\n\n  useEffect(() => {\n    if (window.localStorage.getItem(\"token\")) {\n      props.setToken(window.localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div>\n        <p>Welcome back, Adventurer! Please login below.</p>\n        <div>\n          <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={\"single_host_origin\"}\n            style={{ marginTop: \"100px\" }}\n            isSignedIn={true}\n          />\n        </div>\n        <form onSubmit={login} method=\"post\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={nameInput} />\n          <br />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={passwordInput} />\n          <br />\n          <input type=\"submit\" value=\"LOGIN\" id=\"submit-btn\" />\n        </form>\n      </div>\n      {<div>\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Logout with Google\"\n          onLogoutSuccess={onLogoutSuccess}\n        ></GoogleLogout>\n      </div>}\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogout.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogin.js",["133"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/RefreshToken.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UserContext.js",[],["134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":3,"column":20,"nodeType":"142","messageId":"143","endLine":3,"endColumn":26},{"ruleId":"140","severity":1,"message":"144","line":6,"column":3,"nodeType":"142","messageId":"143","endLine":6,"endColumn":13},{"ruleId":"140","severity":1,"message":"145","line":7,"column":3,"nodeType":"142","messageId":"143","endLine":7,"endColumn":7},{"ruleId":"140","severity":1,"message":"146","line":22,"column":23,"nodeType":"142","messageId":"143","endLine":22,"endColumn":29},{"ruleId":"140","severity":1,"message":"147","line":26,"column":10,"nodeType":"142","messageId":"143","endLine":26,"endColumn":15},{"ruleId":"140","severity":1,"message":"148","line":27,"column":10,"nodeType":"142","messageId":"143","endLine":27,"endColumn":16},{"ruleId":"140","severity":1,"message":"149","line":27,"column":18,"nodeType":"142","messageId":"143","endLine":27,"endColumn":27},{"ruleId":"140","severity":1,"message":"145","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":14},{"ruleId":"140","severity":1,"message":"150","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":15},{"ruleId":"140","severity":1,"message":"151","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":11},{"ruleId":"140","severity":1,"message":"152","line":8,"column":8,"nodeType":"142","messageId":"143","endLine":8,"endColumn":19},{"ruleId":"140","severity":1,"message":"153","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":15},{"ruleId":"140","severity":1,"message":"154","line":10,"column":8,"nodeType":"142","messageId":"143","endLine":10,"endColumn":11},{"ruleId":"140","severity":1,"message":"155","line":11,"column":8,"nodeType":"142","messageId":"143","endLine":11,"endColumn":14},{"ruleId":"140","severity":1,"message":"156","line":12,"column":8,"nodeType":"142","messageId":"143","endLine":12,"endColumn":13},{"ruleId":"140","severity":1,"message":"157","line":13,"column":8,"nodeType":"142","messageId":"143","endLine":13,"endColumn":16},{"ruleId":"140","severity":1,"message":"158","line":75,"column":12,"nodeType":"142","messageId":"143","endLine":75,"endColumn":18},{"ruleId":"159","severity":2,"message":"160","line":75,"column":33,"nodeType":"142","endLine":75,"endColumn":41},{"ruleId":"161","severity":1,"message":"162","line":79,"column":5,"nodeType":"142","endLine":79,"endColumn":14,"suggestions":"163"},{"ruleId":"159","severity":2,"message":"164","line":79,"column":5,"nodeType":"142","endLine":79,"endColumn":14},{"ruleId":"140","severity":1,"message":"165","line":84,"column":13,"nodeType":"142","messageId":"143","endLine":84,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":138,"column":11,"nodeType":"168","endLine":142,"endColumn":12},{"ruleId":"169","severity":2,"message":"170","line":252,"column":24,"nodeType":"142","messageId":"171","endLine":252,"endColumn":30},{"ruleId":"169","severity":2,"message":"172","line":257,"column":17,"nodeType":"142","messageId":"171","endLine":257,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":261,"column":13,"nodeType":"168","endLine":261,"endColumn":44},{"ruleId":"169","severity":2,"message":"170","line":266,"column":24,"nodeType":"142","messageId":"171","endLine":266,"endColumn":30},{"ruleId":"169","severity":2,"message":"172","line":271,"column":17,"nodeType":"142","messageId":"171","endLine":271,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":275,"column":13,"nodeType":"168","endLine":275,"endColumn":42},{"ruleId":"161","severity":1,"message":"175","line":24,"column":6,"nodeType":"176","endLine":24,"endColumn":8,"suggestions":"177"},{"ruleId":"140","severity":1,"message":"178","line":2,"column":31,"nodeType":"142","messageId":"143","endLine":2,"endColumn":41},{"ruleId":"140","severity":1,"message":"179","line":9,"column":10,"nodeType":"142","messageId":"143","endLine":9,"endColumn":20},{"ruleId":"140","severity":1,"message":"180","line":18,"column":9,"nodeType":"142","messageId":"143","endLine":18,"endColumn":19},{"ruleId":"140","severity":1,"message":"165","line":102,"column":15,"nodeType":"142","messageId":"143","endLine":102,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":164,"column":19,"nodeType":"183","messageId":"184","endLine":164,"endColumn":26},{"ruleId":"140","severity":1,"message":"185","line":5,"column":12,"nodeType":"142","messageId":"143","endLine":5,"endColumn":23},{"ruleId":"136","replacedBy":"186"},{"ruleId":"138","replacedBy":"187"},{"ruleId":"140","severity":1,"message":"145","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":118,"column":32,"nodeType":"188","messageId":"189","endLine":118,"endColumn":34},{"ruleId":"140","severity":1,"message":"190","line":11,"column":9,"nodeType":"142","messageId":"143","endLine":11,"endColumn":20},{"ruleId":"140","severity":1,"message":"165","line":18,"column":13,"nodeType":"142","messageId":"143","endLine":18,"endColumn":21},{"ruleId":"161","severity":1,"message":"191","line":42,"column":6,"nodeType":"176","endLine":42,"endColumn":8,"suggestions":"192"},{"ruleId":"140","severity":1,"message":"193","line":9,"column":10,"nodeType":"142","messageId":"143","endLine":9,"endColumn":21},{"ruleId":"136","replacedBy":"194"},{"ruleId":"138","replacedBy":"195"},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'Image' is defined but never used.","'elf' is defined but never used.","'enchantress' is defined but never used.","'fighter' is defined but never used.","'orc' is defined but never used.","'ranger' is defined but never used.","'rogue' is defined but never used.","'sorcerer' is defined but never used.","'avatar' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"createCharacter\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAvatar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["198"],"React Hook \"useEffect\" is called in function \"createCharacter\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'response' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-undef","'avatar' is not defined.","undef","'setAvatar' is not defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'fetchCharacter'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'useContext' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checkLogin' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'randomChars' is assigned a value but never used.",["196"],["197"],"ArrowFunctionExpression","expectedInside","'onOpenModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["200"],"'googleLogin' is defined but never used.",["196"],["197"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Add dependencies array: []",{"range":"207","text":"208"},"Update the dependencies array to be: [fetchCharacter]",{"range":"209","text":"210"},"Update the dependencies array to be: [props]",{"range":"211","text":"212"},[2574,2574],", []",[666,668],"[fetchCharacter]",[1077,1079],"[props]"]