[{"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js":"1","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js":"2","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js":"3","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js":"4","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js":"5","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js":"6","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js":"7","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js":"8","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js":"9","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js":"10","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js":"11","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js":"12","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js":"13","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Register.js":"14","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Login.js":"15","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogout.js":"16","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogin.js":"17","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/RefreshToken.js":"18","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UserContext.js":"19"},{"size":362,"mtime":1609205093329,"results":"20","hashOfConfig":"21"},{"size":3899,"mtime":1612119150202,"results":"22","hashOfConfig":"21"},{"size":587,"mtime":1611874847371,"results":"23","hashOfConfig":"21"},{"size":9283,"mtime":1612120486169,"results":"24","hashOfConfig":"21"},{"size":8368,"mtime":1612127873389,"results":"25","hashOfConfig":"21"},{"size":2722,"mtime":1612125147731,"results":"26","hashOfConfig":"21"},{"size":7087,"mtime":1612124231042,"results":"27","hashOfConfig":"21"},{"size":665,"mtime":1609616860519,"results":"28","hashOfConfig":"29"},{"size":7690,"mtime":1612141448886,"results":"30","hashOfConfig":"21"},{"size":557,"mtime":1611763716660,"results":"31","hashOfConfig":"21"},{"size":5859,"mtime":1611590514451,"results":"32","hashOfConfig":"21"},{"size":2086,"mtime":1610045702699,"results":"33","hashOfConfig":"21"},{"size":507,"mtime":1610044795898,"results":"34","hashOfConfig":"21"},{"size":1806,"mtime":1611725463462,"results":"35","hashOfConfig":"21"},{"size":2113,"mtime":1612070365698,"results":"36","hashOfConfig":"21"},{"size":492,"mtime":1611804926591,"results":"37","hashOfConfig":"21"},{"size":950,"mtime":1611807223477,"results":"38","hashOfConfig":"21"},{"size":503,"mtime":1611804773407,"results":"39","hashOfConfig":"21"},{"size":109,"mtime":1611872402056,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1i8oqq9",{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"kewybn",{"filePath":"65","messages":"66","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js",[],["91","92"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js",["93","94","95","96","97","98","99","100"],"import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n  Link,\n  withRouter,\n} from \"react-router-dom\";\nimport AllCharPage from \"./Components/Characters\";\nimport CharacterStats from \"./Components/CharDetails\";\nimport UpdateCharacterForm from \"./Components/UpdateCharacterForm\";\nimport CreateCharacterForm from \"./Components/CreateCharacterForm\";\nimport Tavern from \"./Components/Tavern.js\";\nimport Battle from \"./Components/Battle\";\nimport Home from \"./Components/Home\";\nimport YouWin from \"./Components/YouWin\";\nimport YouLose from \"./Components/YouLose\";\nimport Register from \"./Components/Register\";\nimport Login from \"./Components/Login\";\nimport { useState } from \"react\";\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\n\nfunction App(props) {\n  const [loggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [userId, setUserId] = useState(null);\n\n  // Get a user id\n  const fetchUserId = async () => {\n    // try {\n    //   const response = await fetch(\"http://localhost:7000/login\");\n    //   const data = await response.json();\n    //   console.log(\"data: \" + data);\n\n    //   return data._id;\n    // } catch (error) {\n    //   console.error(error);\n    // }\n    // return null;\n    return \"600cdecd78275026de953dee\";\n  };\n\n  \n\n  /*****************\n   * LOGOUT *\n   ****************/\n\n  const handleLogOut = () => {\n    localStorage.clear();\n    setIsLoggedIn(false);\n    alert(\"You have been logged out.\");\n    props.history.push(\"/Login\");\n  };\n\n  const userLogin = async (body) => {\n    try {\n      const response = await fetch(\"http://localhost:7000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body,\n      });\n\n      const data = await response.json();\n      window.localStorage.setItem(\"token\", `Bearer ${data.token}`);\n      setToken(`Bearer ${data.token}`);\n\n      setIsLoggedIn(true);\n      alert(\"Logged In!\");\n      props.history.push(\"/Characters\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  console.log(props);\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"nav-routes\" />\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\"> Home</Nav.Link>\n              <Nav.Link href=\"/Characters\"> Characters</Nav.Link>\n              <Nav.Link href=\"/Register\"> Register </Nav.Link>\n              <Nav.Link href=\"/Login\">Login</Nav.Link>\n              <button onClick={handleLogOut}>LOGOUT</button>\n              {loggedIn ? \"You are logged in\" : \"You are not logged in\"}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Characters\" exact component={AllCharPage} />\n          <Route path=\"/Characters/:id\" component={CharacterStats} />\n          <Route\n            path=\"/CreateCharacterForm\"\n            exact\n            component={CreateCharacterForm}\n          />\n          <Route\n            path=\"/UpdateCharacterForm/:id\"\n            exact\n            component={UpdateCharacterForm}\n          />\n          <Route path=\"/Tavern\" component={Tavern} />\n          <Route path=\"/Battle\" component={Battle} />\n          <Route path=\"/YouWin\" component={YouWin} />\n          <Route path=\"/YouLose\" component={YouLose} />\n          <Route path=\"/Register\" component={Register} />\n          <Route\n            path=\"/Login\"\n            render={() => (\n              <Login\n                userLogin={userLogin}\n                setToken={setToken}\n                setIsLoggedIn={setIsLoggedIn}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </>\n  );\n}\nexport default withRouter(App);\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js",["101","102","103","104","105"],"import { useEffect, useRef } from \"react\";\nimport \"../App.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nconst CreateCharacterForm = (props) => {\n  const nameInput = useRef(null);\n  const pronounsInput = useRef(null);\n  const raceSelect = useRef(null);\n  const characterClassSelect = useRef(null);\n  const hpSelect = useRef(null);\n  const attackSelect = useRef(null);\n  const armorClassSelect = useRef(null);\n  const weaponSelect = useRef(null);\n  const catchphrasesSelect = useRef(null);\n  const backstoryInput = useRef(null);\n  const strengthInput = useRef(null);\n  const dexterityInput = useRef(null);\n  const constitutionInput = useRef(null);\n  const intelligenceInput = useRef(null);\n  const wisdomInput = useRef(null);\n  const charismaInput = useRef(null);\n  const createdBy = useRef(null);\n\n  const createCharacter = async (event) => {\n    event.preventDefault();\n    const name = nameInput.current.value;\n    const pronouns = pronounsInput.current.value;\n    const race = raceSelect.current.value;\n    const characterClass = characterClassSelect.current.value;\n    const hp = 12;\n    const attack = attackSelect.current.value;\n    const armorClass = 15;\n    const weapon = weaponSelect.current.value;\n    const catchphrases = catchphrasesSelect.current.value;\n    const backstory = backstoryInput.current.value;\n    const strength = strengthInput.current.value;\n    const dexterity = dexterityInput.current.value;\n    const constitution = constitutionInput.current.value;\n    const intelligence = intelligenceInput.current.value;\n    const wisdom = wisdomInput.current.value;\n    const charisma = charismaInput.current.value;\n    const createdBy = \"600cdecd78275026de953dee\";\n\n    const body = JSON.stringify({\n      name,\n      pronouns,\n      race,\n      characterClass,\n      hp,\n      attack,\n      armorClass,\n      weapon,\n      catchphrases,\n      backstory,\n      createdBy,\n      strength,\n      dexterity,\n      constitution,\n      intelligence,\n      wisdom,\n      charisma\n    });\n\n    event.currentTarget.reset();\n\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: body\n      });\n\n      props.history.push(\"/Characters\");\n      alert(\"Character Created!\");\n    } catch (error) {\n      alert(\"Something went wrong. Please try again.\");\n      console.error(error);\n    }\n  };\n\n  /****************\n   * ROLL  2D6+6 *\n   ****************/\n\n  const rollBaseStats = () => {\n    let rolls = [];\n    for (let i = 0; i < 6; i++) {\n      let result = rollBaseD6();\n      result += rollBaseD6();\n      rolls.push(result += 6);\n    }\n    strengthInput.current.value = rolls[0];\n    dexterityInput.current.value = rolls[1];\n    constitutionInput.current.value = rolls[2];\n    intelligenceInput.current.value = rolls[3];\n    wisdomInput.current.value = rolls[4];\n    charismaInput.current.value = rolls[5];\n    console.log(rolls);\n  }\n\n  function rollBaseD6() {\n    return Math.floor(Math.random() * 6);\n  }\n\n  return (\n    <>\n      <div id=\"create-char-form\">\n        <h2 id=\"create-char-h2\">Create New Character</h2>\n        <p>\n          Feel free to play around with different characters and stats.\n          <br />\n          If you want more information on rolling a new character,{\" \"}\n          <a\n            href=\"https://www.instructables.com/Creating-a-DD-5e-Character-for-Beginners/\"\n            target=\"_blank\"\n            id=\"click-here\"\n          >\n            click here.\n          </a>\n        </p>\n        <form onSubmit={createCharacter} method=\"post\">\n          <label>Character Name:</label>\n          <input type=\"text\" name=\"name\" ref={nameInput} />\n          <br />\n          <label>Character Pronouns:</label>\n          <input type=\"text\" name=\"pronouns\" ref={pronounsInput} />\n          <br />\n          <label>Race:</label>\n          <select className=\"select\" ref={raceSelect}>\n            <option value=\"Human\">Human</option>\n            <option value=\"Half Elf\">Elf</option>\n            <option value=\"Gnome\">Gnome</option>\n            <option value=\"Half Orc\">Half Orc</option>\n            <option value=\"Tiefling\">Tiefling</option>\n            <option value=\"Aasimar\">Aasimar</option>\n            <option value=\"Dragonborn\">Dragonborn</option>\n            <option value=\"Tabaxi\">Tabaxi</option>\n            <option value=\"Centaur\">Centaur</option>\n            <option value=\"Halfling\">Halfling</option>\n            <option value=\"Halfling\">Dwarf</option>\n          </select>\n          <br />\n          <label>Class:</label>\n          <select className=\"select\" ref={characterClassSelect}>\n            <option value=\"Fighter\">Fighter (Tank)</option>\n            <option value=\"Wizard\">Wizard (DPS)</option>\n            <option value=\"Rogue\">Rogue (stabby stabby)</option>\n            <option value=\"Cleric\">Cleric (Healer)</option>\n            <option value=\"Druid\">Druid</option>\n            <option value=\"Monk\">Monk</option>\n            <option value=\"Paladin\">Paladin</option>\n            <option value=\"Ranger\">Ranger</option>\n            <option value=\"Sorcerer\">Sorcerer</option>\n            <option value=\"Sorcerer\">Warlock</option>\n          </select>\n          <br />\n          <label>HP</label>\n          <select className=\"select\" ref={hpSelect}>\n            <option value=\"Default\">12</option>\n          </select>\n          <br />\n          <label>Attack:</label>\n          <select className=\"select\" ref={attackSelect}>\n            <option value=\"Sword Slash\">Sword Slash</option>\n            <option value=\"Magic Missile\">Magic Missile</option>\n            <option value=\"Druid\">Shillelagh</option>\n            <option value=\"Monk\">Fury of Blows</option>\n            <option value=\"Eldritch Blast\">Eldritch Blast</option>\n            <option value=\"Acid Splash\">Acid Splash</option>\n          </select>\n          <br />\n          <label>Armor Class</label>\n          <select className=\"select\" ref={armorClassSelect}>\n            <option value=\"Default\">15</option>\n          </select>\n          <br />\n          <label>Weapon:</label>\n          <select className=\"select\" ref={weaponSelect}>\n            <option value=\"Greatsword\">Greatsword</option>\n            <option value=\"Wand\">Wand</option>\n            <option value=\"Dagger\">Dagger</option>\n            <option value=\"Longbow\">Longbow</option>\n            <option value=\"Rapier\">Rapier</option>\n            <option value=\"Maul\">Maul</option>\n            <option value=\"Crossbow\">Crossbow</option>\n          </select>\n          <br />\n          <label>Catchphrases:</label>\n          <select className=\"select\" ref={catchphrasesSelect}>\n            <option value=\"Nobody makes me bleed my own blood!\">\n              'Nobody makes me bleed my own blood!'\n            </option>\n            <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">\n              'LEEEEROYYYYY JENKIIIINNNNSSSS!'\n            </option>\n            <option value=\"I attack the darkness!\">\n              'I attack the darkness!'\n            </option>\n            <option value=\"Can't we ever just have a normal field trip?\">\n              'Can't we ever just have a normal field trip?'\n            </option>\n            <option value=\"Screw it, we're basically Gods!\">\n              'Screw it, we're basically Gods!'\n            </option>\n            <option value=\"I’m a lover, not a fighter\">\n              'I’m a lover, not a fighter'\n            </option>\n            <option value=\"Today is a good day to die.\">\n              'Today is a good day to die.'\n            </option>\n            <option value=\"Last name Ever, first name Greatest\">\n              'Last name Ever, first name Greatest'\n            </option>\n            <option value=\"I don't think that's such a good idea, Tommy\">\n              'I don't think that's such a good idea, Tommy'\n            </option>\n          </select>\n          <br />\n          <label>Backstory:</label>\n          <input\n            type=\"textarea\"\n            name=\"backstory\"\n            rows=\"10\"\n            cols=\"30\"\n            ref={backstoryInput}\n          />\n          <br />\n          <label>Strength:</label>\n          <br />\n          <input type=\"text\" name=\"strength\" ref={strengthInput} />\n          <br />\n          <label>Dexterity:</label>\n          <br />\n          <input type=\"text\" name=\"dexterity\" ref={dexterityInput} />\n          <br />\n          <label>Constitution</label>\n          <br />\n          <input type=\"text\" name=\"constitution\" ref={constitutionInput} />\n          <br />\n          <label>Intelligence:</label>\n          <br />\n          <input type=\"text\" name=\"intelligence\" ref={intelligenceInput} />\n          <label>Wisdom:</label>\n          <br />\n          <input type=\"text\" name=\"wisdom\" ref={wisdomInput} />\n          <br />\n          <label>Charisma:</label>\n          <br />\n          <input type=\"text\" name=\"charisma\" ref={charismaInput} />\n          <br />\n          <Button onClick={rollBaseStats}>Roll Stats</Button>\n          <br />\n          <input type=\"submit\" value=\"Create Character\" id=\"submit-btn\" />\n        </form>\n      </div>\n      <div></div>\n    </>\n  );\n};\nexport default CreateCharacterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js",["106"],"import { useRef } from \"react\";\nimport \"../App.css\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nconst UpdateCharacterForm = (props) => {\n  const updateNameInput = useRef(null);\n  const updatePronounsInput = useRef(null);\n  const updateRaceSelect = useRef(null);\n  const updateCharacterClassSelect = useRef(null);\n  const updateHPSelect = useRef(null);\n  const updateWeaponSelect = useRef(null);\n  const updateAttackSelect = useRef(null);\n  const updateArmorClass = useRef(null);\n  const updateCatchphrasesSelect = useRef(null);\n  const updateBackstory = useRef(null);\n  const strengthInput = useRef(null);\n  const dexterityInput = useRef(null);\n  const constitutionInput = useRef(null);\n  const intelligenceInput = useRef(null);\n  const wisdomInput = useRef(null);\n  const charismaInput = useRef(null);\n  const characterDetailRouteMatch = useRouteMatch(\"/UpdateCharacterForm/:id\");\n  const charId = characterDetailRouteMatch.params.id;\n  const createdBy = useRef(null);\n\n  const updateCharacter = async (event) => {\n    event.preventDefault();\n    const name = updateNameInput.current.value;\n    const race = updateRaceSelect.current.value;\n    const characterClass = updateCharacterClassSelect.current.value;\n    const pronouns = updatePronounsInput.current.value;\n    const HP = updateHPSelect.current.value;\n    const weapon = updateWeaponSelect.current.value;\n    const attack = updateAttackSelect.current.value;\n    const armorClass = updateArmorClass.current.value;\n    const catchphrases = updateCatchphrasesSelect.current.value;\n    const backstory = updateBackstory.current.value;\n    const strength = strengthInput.current.value;\n    const dexterity = dexterityInput.current.value;\n    const constitution = constitutionInput.current.value;\n    const intelligence = intelligenceInput.current.value;\n    const wisdom = wisdomInput.current.value;\n    const charisma = charismaInput.current.value;\n    const createdBy = \"600cdecd78275026de953dee\";\n    const body = JSON.stringify({\n      name,\n      race,\n      characterClass,\n      pronouns,\n      HP,\n      weapon,\n      attack,\n      armorClass,\n      catchphrases,\n      backstory,\n      strength,\n      dexterity,\n      constitution,\n      intelligence,\n      wisdom,\n      charisma,\n      createdBy\n    });\n\n    event.currentTarget.reset();\n\n    try {\n      const response = await fetch(\n        `http://localhost:7000/characters/${charId}/${createdBy}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: body\n        }\n      );\n\n      props.history.push(\"/characters\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"update-background\">\n        <div id=\"update-breadcrumbs\">\n          <Link to=\"/Characters\">Go Back</Link>\n        </div>\n        <div className=\"heading-with-form\">\n          <h2 id=\"update-char-h2\">Update Character</h2>\n          <form onSubmit={updateCharacter}>\n            <label>Character Name:</label>\n            <input type=\"text\" name=\"name\" ref={updateNameInput} />\n            <br />\n            <label>Character Pronouns:</label>\n            <input type=\"text\" name=\"pronouns\" ref={updatePronounsInput} />\n            <br />\n            <label>Race:</label>\n            <select className=\"select\" ref={updateRaceSelect}>\n              <option value=\"Human\">Human</option>\n              <option value=\"Half Elf\">Elf</option>\n              <option value=\"Gnome\">Gnome</option>\n              <option value=\"Half Orc\">Half Orc</option>\n              <option value=\"Tiefling\">Tiefling</option>\n              <option value=\"Aasimar\">Aasimar</option>\n              <option value=\"Dragonborn\">Dragonborn</option>\n              <option value=\"Tabaxi\">Tabaxi</option>\n              <option value=\"Centaur\">Centaur</option>\n              <option value=\"Halfling\">Halfling</option>\n              <option value=\"Halfling\">Dwarf</option>\n            </select>\n            <br />\n            <label>Class:</label>\n            <select className=\"select\" ref={updateCharacterClassSelect}>\n              <option value=\"Fighter\">Fighter (Tank)</option>\n              <option value=\"Wizard\">Wizard (DPS)</option>\n              <option value=\"Rogue\">Rogue (stabby stabby)</option>\n              <option value=\"Cleric\">Cleric (Healer)</option>\n              <option value=\"Druid\">Druid</option>\n              <option value=\"Monk\">Monk</option>\n              <option value=\"Paladin\">Paladin</option>\n              <option value=\"Ranger\">Ranger</option>\n              <option value=\"Sorcerer\">Sorcerer</option>\n              <option value=\"Sorcerer\">Warlock</option>\n            </select>\n            <br />\n            <label>HP</label>\n            <select className=\"select\" ref={updateHPSelect}>\n              <option value=\"Default\">12</option>\n            </select>\n            <br />\n            <label>Attack:</label>\n            <select className=\"select\" ref={updateAttackSelect}>\n              <option value=\"Sword Slash\">Sword Slash</option>\n              <option value=\"Magic Missile\">Magic Missile</option>\n              <option value=\"Druid\">Shillelagh</option>\n              <option value=\"Monk\">Fury of Blows</option>\n              <option value=\"Eldritch Blast\">Eldritch Blast</option>\n              <option value=\"Acid Splash\">Acid Splash</option>\n            </select>\n            <br />\n            <label>Armor Class</label>\n            <select className=\"select\" ref={updateArmorClass}>\n              <option value=\"Default\">15</option>\n            </select>\n            <br />\n            <label>Weapon:</label>\n            <select className=\"select\" ref={updateWeaponSelect}>\n              <option value=\"Greatsword\">Greatsword</option>\n              <option value=\"Wand\">Wand</option>\n              <option value=\"Dagger\">Dagger</option>\n              <option value=\"Longbow\">Longbow</option>\n              <option value=\"Rapier\">Rapier</option>\n              <option value=\"Maul\">Maul</option>\n              <option value=\"Crossbow\">Crossbow</option>\n            </select>\n            <br />\n            <label>Catchphrases:</label>\n            <select className=\"select\" ref={updateCatchphrasesSelect}>\n              <option value=\"Nobody makes me bleed my own blood!\">\n                'Nobody makes me bleed my own blood!'\n              </option>\n              <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">\n                'LEEEEROYYYYY JENKIIIINNNNSSSS!'\n              </option>\n              <option value=\"I attack the darkness!\">\n                'I attack the darkness!'\n              </option>\n              <option value=\"Can't we ever just have a normal field trip?\">\n                'Can't we ever just have a normal field trip?'\n              </option>\n              <option value=\"Screw it, we're basically Gods!\">\n                'Screw it, we're basically Gods!'\n              </option>\n              <option value=\"I’m a lover, not a fighter\">\n                'I’m a lover, not a fighter'\n              </option>\n              <option value=\"Today is a good day to die.\">\n                'Today is a good day to die.'\n              </option>\n              <option value=\"Last name Ever, first name Greatest\">\n                'Last name Ever, first name Greatest'\n              </option>\n              <option value=\"I don't think that's such a good idea, Tommy\">\n                'I don't think that's such a good idea, Tommy'\n              </option>\n            </select>\n            <br />\n            <label>Backstory:</label>\n            <input type=\"textarea\" name=\"backstory\" ref={updateBackstory} />\n            <br />\n            <input type=\"hidden\" name=\"createdBy\" ref={createdBy} />\n            <input type=\"hidden\" name=\"strength\" ref={strengthInput} />\n            <input type=\"hidden\" name=\"dexterity\" ref={dexterityInput} />\n            <input type=\"hidden\" name=\"constitution\" ref={constitutionInput} />\n            <input type=\"hidden\" name=\"intelligence\" ref={intelligenceInput} />\n            <input type=\"hidden\" name=\"wisdom\" ref={wisdomInput} />\n            <input type=\"hidden\" name=\"charisma\" ref={charismaInput} />\n            <input type=\"submit\" value=\"UPDATE CHARACTER\" />\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UpdateCharacterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js",["107"],"import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport { Image } from 'react-bootstrap';\n\nfunction CharacterStats() {\n  const [character, setCharacter] = useState({});\n  const characterDetailRouteMatch = useRouteMatch(\"/Characters/:id\");\n\n  const fetchCharacter = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:7000/characters/${characterDetailRouteMatch.params.id}`\n      );\n      const data = await response.json();\n      setCharacter(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCharacter();\n  }, []);\n\n  return (\n    <>\n      <div className=\"parchment-background\">\n        <br />\n        <br />\n        <br />\n        <br />\n        <h1 id=\"character-sheet-heading\">\n          {character.name}'s\n          <br />\n          Character Sheet\n        </h1>\n        <div id=\"character-container\">\n          {/* <div id=\"character-stats-image\"> */}\n            <br />\n            <br />\n            <Image src={character.image} thumbnail/>\n          </div>\n          <div id=\"stats-list\">\n            <label>Name:</label> {character.name}\n            <br />\n            <label>Race:</label> {character.race}\n            <br />\n            <label>Pronouns:</label> {character.pronouns}\n            <br />\n            <label>Class:</label> {character.characterClass}\n            <br />\n            <label>HP:</label> {character.HP}\n            <br />\n            <label>Main Weapon:</label> {character.weapon}\n            <br />\n            <label>Main Attack:</label> {character.attack}\n            <br />\n            <label>Armor Class:</label> {character.armorClass}\n            <br />\n            <label>Motto:</label>\n            <br />\"{character.catchphrases}\"\n            <br />\n            <br />\n            <label>Backstory:</label>\n            <br />\"{character.backstory}\"\n            <br />\n            <label>Strength:</label> {character.strength}\n            <br />\n            <label>Dexterity:</label> {character.dexterity}\n            <br />\n            <label>Constitution</label> {character.constitution}\n            <br />\n            <label>Intelligence:</label> {character.intelligence}\n            <br />\n            <label>Wisdom</label> {character.wisdom}\n            <br />\n            <label>Charisma:</label> {character.charisma}\n            <br />\n            <br />\n            <button>\n              <Link to={`/UpdateCharacterForm/${character._id}`}>\n                EDIT CHARACTER\n              </Link>\n            </button>\n          </div>\n        </div>\n      {/* </div> */}\n    </>\n  );\n}\n\nexport default CharacterStats;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js",["108","109","110","111","112"],"import \"../App.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\n\nfunction AllCharPage() {\n  const [characters, setCharacters] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\n  const [showModal, setShowModal] = useState([false]);\n  // let history = useHistory();\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  /*****************\n   * CHECK LOGIN *\n   ****************/\n\n  const checkLogin = (props) => {\n    if (token) {\n      setIsLoggedIn(\"LOGGED IN\");\n    } else {\n      setIsLoggedIn(\"LOGGED OUT\");\n    }\n  };\n\n\n\n  /*****************\n   * GET ALL CHARS *\n   ****************/\n\n  const fetchCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\");\n      const data = await response.json();\n      setCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /***************\n   * DELETE CHAR *\n   ****************/\n\n  const deleteCharacter = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:7000/characters/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: token,\n        },\n      });\n      if (!token) {\n        return alert(\"Please Login before deleting!\");\n      }\n      const data = await response.json();\n      const filteredCharacters = characters.filter(\n        (character) => character._id !== data._id\n      );\n      setCharacters(filteredCharacters);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*****************\n   * GENERATE CHAR *\n   ****************/\n\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/randomChar\");\n      const data = await response.json();\n\n      setRandomCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    if (randomCharacters.length === 0) {\n      return;\n    }\n    let randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    let generatedCharacter = randomCharacters[randomIndex];\n\n    console.log(\"char dupe: \" + characters.includes(generatedCharacter.name));\n    console.log(generatedCharacter.name);\n    try {\n      if (characters.includes(generatedCharacter.name)) {\n        const filterDupe = randomCharacters.filter(\n          (rando) => rando.name !== generatedCharacter.name\n        );\n        setRandomCharacters(filterDupe);\n        generateChar();\n      } else {\n        const response = await fetch(\"http://localhost:7000/characters\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: token,\n          },\n          body: JSON.stringify(generatedCharacter),\n        });\n        if (!token) {\n          return alert(\"Please Login before continuing!\");\n        }\n        const newRandomCharList = randomCharacters.filter(\n          (rando) => rando.name !== generatedCharacter.name\n        );\n        setRandomCharacters(newRandomCharList);\n        setCharacters([...characters, generatedCharacter]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  /***************\n   * USE EFFECT *\n   ****************/\n\n  useEffect(() => {\n    fetchCharacters();\n    setIsLoggedIn();\n    setShowModal();\n    fetchRandomCharacters();\n    if (window.localStorage.getItem(\"token\")) {\n      setToken(window.localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"character-background\">\n        <div className=\"header-style\">\n          <h1 className=\"my-characters-heading\">My Adventuring Party</h1>\n          <p>View and manage all your characters, or create a new one.</p>\n          <div>\n            Create a New Character\n            <br />\n            <Link to=\"/CreateCharacterForm\">\n              <Button>CREATE</Button>\n            </Link>\n            <br />\n            Generate a random character for me\n            <br />\n            <Button onClick={handleClick}>GENERATE</Button>\n          </div>\n        </div>\n        <br />\n        <br />\n        <div id=\"character-list\">\n          <ul>\n            <>\n              {characters.map((character) => {\n                if (character.characterType === \"NPC\") {\n                  return;\n                }\n                return (\n                  <li key={character._id}>\n                    <Card style={{ width: \"18rem\" }}>\n                      <Card.Img\n                        variant=\"top\"\n                        src={character.thumbnail}\n                        id=\"thumbnail\"\n                      />\n                      <Card.Body>\n                        <Card.Title>{character.name}</Card.Title>\n                        <Card.Text>\n                          {character.race} | {character.characterClass}\n                        </Card.Text>\n                        <button type=\"button\">\n                      <Link to={`/characters/${character._id}`}>VIEW</Link>\n                    </button>\n                    <button>\n                      <Link to={`/UpdateCharacterForm/${character._id}`}>\n                        EDIT\n                      </Link>\n                    </button>\n                    <Button variant=\"primary\" onClick={handleShow}>\n                      DELETE\n                    </Button>\n                    <Modal show={showModal} onHide={handleClose}>\n                      <Modal.Header>\n                        <Modal.Title>Delete Character</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        Are you sure you want to delete this character?\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                          Close\n                        </Button>\n                        <Button\n                          variant=\"primary\"\n                          onClick={() => {\n                            deleteCharacter(character._id);\n                            handleClose();\n                          }}\n                        >\n                          DELETE\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                      </Card.Body>\n                    </Card>\n                  </li>\n                );\n              })}\n            </>\n          </ul>\n        </div>\n\n        <div>\n          <br />\n          <br />\n          <br />\n          <br />\n          <h1>Ready to start adventuring?</h1>\n          <Link to=\"/Tavern\">\n            <button>Let's Go!</button>\n          </Link>\n          <br />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllCharPage;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js",["113"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction GetRandom(props) {\n    const [randomChars, setRandomCharacters] = useState([]);\n  \n    const fetchRandomCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/randomchar');\n        const data = await response.json();\n        setRandomCharacters(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    useEffect(() => { \n        fetchRandomCharacters()\n      }, []);\n\n     \n      return (\n        <div>\n          <h1>Hey</h1>\n\n        </div>\n      )\n      \n\n    }\n\n    export default GetRandom;",["114","115"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js",["116","117","118","119","120","121","122","123","124"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js",["125"],"import \"../App.css\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport wizardbook from \"../images/wizardbook.png\";\n\nfunction Tavern() {\n  const [open, setOpen] = useState(true);\n  const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => setOpen(false);\n\n  const [openChat, setOpenChat] = useState(false);\n  const onOpenChatModal = () => setOpenChat(true);\n  const onCloseChatModal = () => setOpenChat(false);\n\n  const [openWizChat, setOpenWizChat] = useState(false);\n  const onOpenWizChatModal = () => setOpenWizChat(true);\n  const onCloseWizChatModal = () => setOpenWizChat(false);\n\n  const [openQuestChat, setOpenQuestChat] = useState(false);\n  const onOpenQuestChat = () => setOpenQuestChat(true);\n  const onCloseQuestChat = () => setOpenQuestChat(false);\n\n  return (\n    <>\n      <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n      <div id=\"tavern-background-image\">\n        <Modal\n          open={open}\n          onClose={onCloseModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h2>So it begins...</h2>\n          <p>\n            In a land of Myth and a time of Legend there lived a group of\n            adventurers who's destinies would sculpt the future of the world. It\n            all started in a little tavern in a little village when a little\n            gnome spilled their little drink onto an abnormally large tome\n            belonging to an old Wizard....\n          </p>\n          <button onClick={onOpenChatModal}>BEGIN</button>\n        </Modal>\n\n        <Modal\n          open={openChat}\n          onClose={onCloseChatModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Party time!</h1>\n          <p>\n            Tavern music is playing loudly, the drinks are flowing and you are\n            reminiscing with your adventuring party.\n            <br />\n            <br />\n            \"Oi! Thiss Is may thissessmahsoooong!\" says a tipsy gnome as she\n            spills some ale on a Wizard's Tome.\n            <br />\n            <br />\n            The old Wizard says, \"Whoa there...watch yourself, gnome! This book\n            is THE Adventurers Registry of Legend! It's said that any adventurer\n            who signs their name in this book is to go off on a quest in which\n            the results will shape the future of the world as we know it!\"\n            <br />\n            <br />\n            \"Oowwhhh shorry shir!\" says the tipsy gnome. \"I\n            dii..diddnn...dddiddidnnn....was an axethdent. 'Tis my birthhday\n            toodayy!\" The Gnome leans closer to the Wizard and whispers \"Ohh\n            what're ye doin frienly wiz..um...wiz...\" and she promptly passes\n            out as she falls out of her chair and onto the floor.\n            <br />\n            <br />\n            The old Wizard says \"Mmm... I'm afraid it's not interested in you,\n            little one...\" They raise their gaze and lock eyes with you.\n            <br />\n            <br />\n            \"You there, on the other hand,\" they say. \" I have much to discuss\n            with you! Come, sit, enjoy an ale on me while I tell you a story\n            from a long long time ago...\"\n          </p>\n          <button onClick={onOpenWizChatModal}>GO ON....</button>\n        </Modal>\n        <br />\n\n        <Modal\n          open={openWizChat}\n          onClose={onCloseWizChatModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Pull up a chair!</h1>\n          <img src={wizardbook} id=\"wizard-book-image\" alt=\"wizard-book\" />\n          <p>\n            The old wizard tells you a tale of intrigue and courage, of magic\n            and mystery, of treasure and toil, of monsters and men. Suddenly,\n            you see a glow coming from the tome in his hands.\n            <br />\n            <br />\n            Finally, he says \"Ahhh yes, so it seems the tome finds you worthy of\n            such a quest. Well now, let's see here, where we are to send\n            you...hmm?\" He licks his index finger and turns a page. \"It says:\n            Behold, Adventurers! The quest is rather simple, however the\n            consequences are severe...I require, on the Isle of Sapphire, a\n            small goldfish... For you'll find me in the depths of Xanthar's\n            Lair. Think you're up to the task?\"\n          </p>\n          <button onClick={onOpenQuestChat}>ACCEPT QUEST</button>\n        </Modal>\n        <br />\n        <Modal\n          open={openQuestChat}\n          onClose={onCloseQuestChat}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Wonderful!</h1>\n          <p\n            classNames={{\n              modal: \"battle-modal\",\n            }}\n          >\n            \"Retrieve the item and meet me back in this tavern when you are\n            done. Now get a move on...and good luck, adventurer. You're going to\n            need it.\"\n          </p>\n          <Link to=\"./battle\">\n            <button\n              classNames={{\n                overlay: \"tavern-overlay\",\n                modal: \"tavern-modal\",\n              }}\n            >\n              LET'S GO\n            </button>\n          </Link>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default Tavern;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Register.js",["126"],"import \"../App.css\";\nimport { useRef } from \"react\";\n\nconst RegisterForm = (props) => {\n  const usernameInput = useRef(null);\n  const passwordInput = useRef(null);\n  const confirmPasswordInput = useRef(null);\n\n  const register = async (event) => {\n    event.preventDefault();\n    const body = JSON.stringify({\n      username: usernameInput.current.value,\n      password: passwordInput.current.value,\n      confirmPassword: confirmPasswordInput.current.value,\n    });\n    event.currentTarget.reset();\n    try {\n      const response = await fetch(\"http://localhost:7000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body,\n      });\n      if (passwordInput !== confirmPasswordInput) {\n        alert(\"Passwords do not match!\");\n      } else {\n        alert(\"Account created!\");\n        props.history.push(\"/Login\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <h2>Register</h2>\n        <p>\n          Please create a unique username and password to create an account. We\n          suggest passwords be at least 8 characters with letters, numbers, and\n          special characters.\n        </p>\n        <form onSubmit={register} method=\"post\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={usernameInput} />\n          <br />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={passwordInput} />\n          <br />\n          <label>Confirm Password</label>\n          <input type=\"password\" name=\"confirmpassword\" ref={confirmPasswordInput} />\n          <br />\n          <input type=\"submit\" value=\"REGISTER\" id=\"submit-btn\" />\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Login.js",["127"],"import \"../App.css\";\nimport { useEffect, useRef } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { refreshTokenSetup } from \"./RefreshToken\";\n\nconst LoginForm = (props) => {\n  const nameInput = useRef(null);\n  const passwordInput = useRef(null);\n  const clientId =\n    \"279098454783-6ifmp48rjph5516k7i7hajcsfshh8h2a.apps.googleusercontent.com\";\n\n  const login = async (event) => {\n    event.preventDefault();\n    const body = JSON.stringify({\n      username: nameInput.current.value,\n      password: passwordInput.current.value,\n    });\n    props.userLogin(body);\n  };\n\n  const onSuccess = (res) => {\n    console.log(\"[Login Success] currentUser:\", res.profileObj);\n\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = (res) => {\n    console.log(\"[Login Failed] res:\", res);\n  };\n\n  const onLogoutSuccess = () => {\n    alert(\"Logged Out Successfully\");\n  };\n\n\n\n  useEffect(() => {\n    if (window.localStorage.getItem(\"token\")) {\n      props.setToken(window.localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div>\n        <p>Welcome back, Adventurer! Please login below.</p>\n        <div>\n          <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={\"single_host_origin\"}\n            style={{ marginTop: \"100px\" }}\n            isSignedIn={true}\n          />\n        </div>\n        <form onSubmit={login} method=\"post\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={nameInput} />\n          <br />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={passwordInput} />\n          <br />\n          <input type=\"submit\" value=\"LOGIN\" id=\"submit-btn\" />\n        </form>\n      </div>\n      {<div>\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Logout with Google\"\n          onLogoutSuccess={onLogoutSuccess}\n        ></GoogleLogout>\n      </div>}\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogout.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogin.js",["128"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/RefreshToken.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UserContext.js",[],["129","130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":3,"column":20,"nodeType":"137","messageId":"138","endLine":3,"endColumn":26},{"ruleId":"135","severity":1,"message":"139","line":6,"column":3,"nodeType":"137","messageId":"138","endLine":6,"endColumn":13},{"ruleId":"135","severity":1,"message":"140","line":7,"column":3,"nodeType":"137","messageId":"138","endLine":7,"endColumn":7},{"ruleId":"135","severity":1,"message":"141","line":22,"column":23,"nodeType":"137","messageId":"138","endLine":22,"endColumn":29},{"ruleId":"135","severity":1,"message":"142","line":26,"column":10,"nodeType":"137","messageId":"138","endLine":26,"endColumn":15},{"ruleId":"135","severity":1,"message":"143","line":27,"column":10,"nodeType":"137","messageId":"138","endLine":27,"endColumn":16},{"ruleId":"135","severity":1,"message":"144","line":27,"column":18,"nodeType":"137","messageId":"138","endLine":27,"endColumn":27},{"ruleId":"135","severity":1,"message":"145","line":30,"column":9,"nodeType":"137","messageId":"138","endLine":30,"endColumn":20},{"ruleId":"135","severity":1,"message":"146","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":19},{"ruleId":"135","severity":1,"message":"140","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"135","severity":1,"message":"147","line":23,"column":9,"nodeType":"137","messageId":"138","endLine":23,"endColumn":18},{"ruleId":"135","severity":1,"message":"148","line":68,"column":13,"nodeType":"137","messageId":"138","endLine":68,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":116,"column":11,"nodeType":"151","endLine":120,"endColumn":12},{"ruleId":"135","severity":1,"message":"148","line":68,"column":13,"nodeType":"137","messageId":"138","endLine":68,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":24,"column":6,"nodeType":"154","endLine":24,"endColumn":8,"suggestions":"155"},{"ruleId":"135","severity":1,"message":"156","line":2,"column":31,"nodeType":"137","messageId":"138","endLine":2,"endColumn":41},{"ruleId":"135","severity":1,"message":"157","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":20},{"ruleId":"135","severity":1,"message":"158","line":20,"column":9,"nodeType":"137","messageId":"138","endLine":20,"endColumn":19},{"ruleId":"135","severity":1,"message":"148","line":104,"column":15,"nodeType":"137","messageId":"138","endLine":104,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":170,"column":19,"nodeType":"161","messageId":"162","endLine":170,"endColumn":26},{"ruleId":"135","severity":1,"message":"163","line":5,"column":12,"nodeType":"137","messageId":"138","endLine":5,"endColumn":23},{"ruleId":"131","replacedBy":"164"},{"ruleId":"133","replacedBy":"165"},{"ruleId":"135","severity":1,"message":"140","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"135","severity":1,"message":"166","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":16},{"ruleId":"135","severity":1,"message":"167","line":15,"column":10,"nodeType":"137","messageId":"138","endLine":15,"endColumn":20},{"ruleId":"135","severity":1,"message":"168","line":17,"column":9,"nodeType":"137","messageId":"138","endLine":17,"endColumn":22},{"ruleId":"135","severity":1,"message":"169","line":18,"column":10,"nodeType":"137","messageId":"138","endLine":18,"endColumn":23},{"ruleId":"135","severity":1,"message":"170","line":20,"column":9,"nodeType":"137","messageId":"138","endLine":20,"endColumn":29},{"ruleId":"135","severity":1,"message":"171","line":21,"column":10,"nodeType":"137","messageId":"138","endLine":21,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":119,"column":32,"nodeType":"172","messageId":"173","endLine":119,"endColumn":34},{"ruleId":"174","severity":1,"message":"175","line":232,"column":17,"nodeType":"151","endLine":232,"endColumn":62},{"ruleId":"135","severity":1,"message":"176","line":11,"column":9,"nodeType":"137","messageId":"138","endLine":11,"endColumn":20},{"ruleId":"135","severity":1,"message":"148","line":18,"column":13,"nodeType":"137","messageId":"138","endLine":18,"endColumn":21},{"ruleId":"152","severity":1,"message":"177","line":42,"column":6,"nodeType":"154","endLine":42,"endColumn":8,"suggestions":"178"},{"ruleId":"135","severity":1,"message":"179","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":21},{"ruleId":"131","replacedBy":"180"},{"ruleId":"133","replacedBy":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'fetchUserId' is assigned a value but never used.","'useEffect' is defined but never used.","'createdBy' is assigned a value but never used.","'response' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacter'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'useContext' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checkLogin' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'randomChars' is assigned a value but never used.",["182"],["183"],"'beholder' is defined but never used.","'openBattle' is assigned a value but never used.","'onCloseBattle' is assigned a value but never used.","'openDiceModal' is assigned a value but never used.","'onCloseDiceRollModal' is assigned a value but never used.","'modalContent' is assigned a value but never used.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'onOpenModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["185"],"'googleLogin' is defined but never used.",["182"],["183"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [fetchCharacter]",{"range":"190","text":"191"},"Update the dependencies array to be: [props]",{"range":"192","text":"193"},[666,668],"[fetchCharacter]",[1077,1079],"[props]"]