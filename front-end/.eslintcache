[{"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js":"1","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js":"2","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js":"3","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js":"4","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js":"5","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js":"6","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js":"7","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js":"8","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js":"9","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js":"10","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js":"11","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js":"12","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js":"13","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Register.js":"14","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Login.js":"15","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogout.js":"16","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogin.js":"17","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/RefreshToken.js":"18","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UserContext.js":"19"},{"size":362,"mtime":1609205093329,"results":"20","hashOfConfig":"21"},{"size":4388,"mtime":1612248847576,"results":"22","hashOfConfig":"21"},{"size":587,"mtime":1611874847371,"results":"23","hashOfConfig":"21"},{"size":10760,"mtime":1612230112461,"results":"24","hashOfConfig":"21"},{"size":8225,"mtime":1612206133346,"results":"25","hashOfConfig":"21"},{"size":2867,"mtime":1612248184382,"results":"26","hashOfConfig":"21"},{"size":7120,"mtime":1612236166409,"results":"27","hashOfConfig":"21"},{"size":665,"mtime":1609616860519,"results":"28","hashOfConfig":"29"},{"size":8563,"mtime":1612248042631,"results":"30","hashOfConfig":"21"},{"size":557,"mtime":1611763716660,"results":"31","hashOfConfig":"21"},{"size":5873,"mtime":1612238700640,"results":"32","hashOfConfig":"21"},{"size":2086,"mtime":1610045702699,"results":"33","hashOfConfig":"21"},{"size":507,"mtime":1610044795898,"results":"34","hashOfConfig":"21"},{"size":1806,"mtime":1611725463462,"results":"35","hashOfConfig":"21"},{"size":2145,"mtime":1612247657549,"results":"36","hashOfConfig":"21"},{"size":492,"mtime":1611804926591,"results":"37","hashOfConfig":"21"},{"size":950,"mtime":1611807223477,"results":"38","hashOfConfig":"21"},{"size":503,"mtime":1611804773407,"results":"39","hashOfConfig":"21"},{"size":109,"mtime":1611872402056,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1i8oqq9",{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"kewybn",{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js",[],["88","89"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js",["90","91","92","93","94","95","96"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import { useEffect, useRef, useState } from \"react\";\nimport \"../App.css\";\nimport { Link } from \"react-router-dom\";\nimport { Image, Button } from \"react-bootstrap\";\nimport aasimar from \"../images/aasimar.png\";\nimport dwarf from \"../images/dwarf.png\";\nimport elf from \"../images/elf.png\";\nimport enchantress from \"../images/enchantress.jpg\";\nimport fighter from \"../images/fighter.png\";\nimport orc from \"../images/orc.png\";\nimport ranger from \"../images/ranger.png\";\nimport rogue from \"../images/rogue.png\";\nimport sorcerer from \"../images/sorcerer.png\";\n\n\n\nconst CreateCharacterForm = (props) => {\n\n  const [avatar, setAvatar] = useState([]);\n\n  const nameInput = useRef(null);\n  const pronounsInput = useRef(null);\n  const raceSelect = useRef(null);\n  const characterClassSelect = useRef(null);\n  const hpSelect = useRef(null);\n  const attackSelect = useRef(null);\n  const armorClassSelect = useRef(null);\n  const weaponSelect = useRef(null);\n  const catchphrasesSelect = useRef(null);\n  const backstoryTextarea = useRef(null);\n  const imageInput = useRef(null);\n  const strengthInput = useRef(null);\n  const dexterityInput = useRef(null);\n  const constitutionInput = useRef(null);\n  const intelligenceInput = useRef(null);\n  const wisdomInput = useRef(null);\n  const charismaInput = useRef(null);\n\n  const createCharacter = async (event) => {\n\n    \n\n    event.preventDefault();\n    const name = nameInput.current.value;\n    const pronouns = pronounsInput.current.value;\n    const race = raceSelect.current.value;\n    const characterClass = characterClassSelect.current.value;\n    const hp = 12;\n    const attack = attackSelect.current.value;\n    const armorClass = 15;\n    const weapon = weaponSelect.current.value;\n    const catchphrases = catchphrasesSelect.current.value;\n    const backstory = backstoryTextarea.current.value;\n    const image = imageInput.current.value;\n    const strength = strengthInput.current.value;\n    const dexterity = dexterityInput.current.value;\n    const constitution = constitutionInput.current.value;\n    const intelligence = intelligenceInput.current.value;\n    const wisdom = wisdomInput.current.value;\n    const charisma = charismaInput.current.value;\n\n    const body = JSON.stringify({\n      name,\n      pronouns,\n      race,\n      characterClass,\n      hp,\n      attack,\n      armorClass,\n      weapon,\n      catchphrases,\n      backstory,\n      image,\n      strength,\n      dexterity,\n      constitution,\n      intelligence,\n      wisdom,\n      charisma,\n    });\n\n    \n\n    // event.currentTarget.reset();\n\n\n\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: body,\n      });\n\n      props.history.push(\"/Characters\");\n      alert(\"Character Created!\");\n    } catch (error) {\n      alert(\"Something went wrong. Please try again.\");\n      console.error(error);\n    }\n  };\n\n  /****************\n   * ROLL  2D6+6 *\n   ****************/\n\n  const rollBaseStats = () => {\n    let rolls = [];\n    for (let i = 0; i < 6; i++) {\n      let result = rollBaseD6();\n      result += rollBaseD6();\n      rolls.push((result += 6));\n    }\n    strengthInput.current.value = rolls[0];\n    dexterityInput.current.value = rolls[1];\n    constitutionInput.current.value = rolls[2];\n    intelligenceInput.current.value = rolls[3];\n    wisdomInput.current.value = rolls[4];\n    charismaInput.current.value = rolls[5];\n    // createdByInput.current.value = \"600cdecd78275026de953dee\";\n    console.log(rolls);\n  };\n\n  function rollBaseD6() {\n    return Math.floor(Math.random() * 6);\n  }\n\n  useEffect (() => {\n    setAvatar();\n  })\n\n\n  return (\n    \n    <>\n   \n      <div id=\"create-char-form\">\n        <h2 id=\"create-char-h2\">Create New Character</h2>\n        <p>\n          Feel free to play around with different characters and stats.\n          <br />\n          If you want more information on rolling a new character,{\" \"}\n          <a\n            href=\"https://www.instructables.com/Creating-a-DD-5e-Character-for-Beginners/\"\n            target=\"_blank\"\n            id=\"click-here\"\n          >\n            click here.\n          </a>\n        </p>\n        <form onSubmit={createCharacter} method=\"post\">\n          <label>Character Name:</label>\n          <input type=\"text\" name=\"name\" ref={nameInput} />\n          <br />\n          <label>Pronouns:</label>\n          <input type=\"text\" name=\"pronouns\" ref={pronounsInput} />\n          <br />\n          <label>Race:</label>\n          <select className=\"select\" ref={raceSelect}>\n            <option value=\"Human\">Human</option>\n            <option value=\"Half Elf\">Elf</option>\n            <option value=\"Gnome\">Gnome</option>\n            <option value=\"Half Orc\">Half Orc</option>\n            <option value=\"Tiefling\">Tiefling</option>\n            <option value=\"Aasimar\">Aasimar</option>\n            <option value=\"Dragonborn\">Dragonborn</option>\n            <option value=\"Tabaxi\">Tabaxi</option>\n            <option value=\"Centaur\">Centaur</option>\n            <option value=\"Halfling\">Halfling</option>\n            <option value=\"Halfling\">Dwarf</option>\n          </select>\n          <br />\n          <label>Class:</label>\n          <select className=\"select\" ref={characterClassSelect}>\n            <option value=\"Fighter\">Fighter (Tank)</option>\n            <option value=\"Wizard\">Wizard (DPS)</option>\n            <option value=\"Rogue\">Rogue (stabby stabby)</option>\n            <option value=\"Cleric\">Cleric (Healer)</option>\n            <option value=\"Druid\">Druid</option>\n            <option value=\"Monk\">Monk</option>\n            <option value=\"Paladin\">Paladin</option>\n            <option value=\"Ranger\">Ranger</option>\n            <option value=\"Sorcerer\">Sorcerer</option>\n            <option value=\"Sorcerer\">Warlock</option>\n          </select>\n          <br />\n          <label>HP:</label>\n          <select className=\"select\" ref={hpSelect}>\n            <option value=\"12\">12</option>\n          </select>\n          <br />\n          <label>Attack:</label>\n          <select className=\"select\" ref={attackSelect}>\n            <option value=\"Sword Slash\">Sword Slash</option>\n            <option value=\"Magic Missile\">Magic Missile</option>\n            <option value=\"Druid\">Shillelagh</option>\n            <option value=\"Monk\">Fury of Blows</option>\n            <option value=\"Eldritch Blast\">Eldritch Blast</option>\n            <option value=\"Acid Splash\">Acid Splash</option>\n          </select>\n          <br />\n          <label>Armor Class</label>\n          <select className=\"select\" ref={armorClassSelect}>\n            <option value=\"15\">15</option>\n          </select>\n          <br />\n          <label>Weapon:</label>\n          <select className=\"select\" ref={weaponSelect}>\n            <option value=\"Greatsword\">Greatsword</option>\n            <option value=\"Wand\">Wand</option>\n            <option value=\"Dagger\">Dagger</option>\n            <option value=\"Longbow\">Longbow</option>\n            <option value=\"Rapier\">Rapier</option>\n            <option value=\"Maul\">Maul</option>\n            <option value=\"Crossbow\">Crossbow</option>\n          </select>\n          <br />\n          <label>Catchphrases:</label>\n          <select className=\"select\" ref={catchphrasesSelect}>\n            <option value=\"Nobody makes me bleed my own blood!\">\n              'Nobody makes me bleed my own blood!'\n            </option>\n            <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">\n              'LEEEEROYYYYY JENKIIIINNNNSSSS!'\n            </option>\n            <option value=\"I attack the darkness!\">\n              'I attack the darkness!'\n            </option>\n            <option value=\"Can't we ever just have a normal field trip?\">\n              'Can't we ever just have a normal field trip?'\n            </option>\n            <option value=\"Screw it, we're basically Gods!\">\n              'Screw it, we're basically Gods!'\n            </option>\n            <option value=\"I’m a lover, not a fighter\">\n              'I’m a lover, not a fighter'\n            </option>\n            <option value=\"Today is a good day to die.\">\n              'Today is a good day to die.'\n            </option>\n            <option value=\"Last name Ever, first name Greatest\">\n              'Last name Ever, first name Greatest'\n            </option>\n            <option value=\"I don't think that's such a good idea, Tommy\">\n              'I don't think that's such a good idea, Tommy'\n            </option>\n          </select>\n          <br />\n          <label>Backstory:</label>\n          <textarea name=\"backstory\" cols=\"25\" rows=\"5\" ref={backstoryTextarea}></textarea>\n\n          <br />\n          <label>Avatar:</label>\n          <br />\n          <div>\n            <input\n              ref={imageInput}\n              type=\"radio\"\n              checked={avatar === \"aasimar\"}\n              value=\"aasimar\"\n              name=\"aasimar\"\n              onChange={(e) => {\n                setAvatar(e.target.value)\n              }}\n            />\n            <img src={aasimar} id=\"avatar\"></img>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              checked={avatar === \"dwarf\"}\n              value=\"dwarf\"\n              onChange={(e) => {\n                alert(\"look at me i have no wiiiings\")\n                setAvatar(e.target.value)\n              }}\n            />\n            <img src={dwarf} id=\"avatar\"></img>\n          </div>\n          <br />\n          <label>Strength:</label>\n          <br />\n          <input type=\"text\" name=\"strength\" ref={strengthInput} />\n          <br />\n          <label>Dexterity:</label>\n          <br />\n          <input type=\"text\" name=\"dexterity\" ref={dexterityInput} />\n          <br />\n          <label>Constitution</label>\n          <br />\n          <input type=\"text\" name=\"constitution\" ref={constitutionInput} />\n          <br />\n          <label>Intelligence:</label>\n          <br />\n          <input type=\"text\" name=\"intelligence\" ref={intelligenceInput} />\n          <label>Wisdom:</label>\n          <br />\n          <input type=\"text\" name=\"wisdom\" ref={wisdomInput} />\n          <br />\n          <label>Charisma:</label>\n          <br />\n          <input type=\"text\" name=\"charisma\" ref={charismaInput} />\n          <br />\n          <Button onClick={rollBaseStats} id=\"roll\" style= {{backgroundColor: \"rgb(44 90 117)\"}}>\n            Roll Stats\n          </Button>\n          <br />\n          {/* <input type=\"hidden\" name=\"createdBy\" ref={createdByInput} /> */}\n          <br />\n          <input type=\"submit\" value=\"Create Character\" id=\"submit-btn\" />\n        </form>\n      </div>\n      <div></div>\n    </>\n  );\n};\nexport default CreateCharacterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js",["111","112"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js",["113","114","115","116","117"],"import \"../App.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\n\nfunction AllCharPage() {\n  const [characters, setCharacters] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\n  const [showModal, setShowModal] = useState([false]);\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  /*****************\n   * CHECK LOGIN *\n   ****************/\n\n  const checkLogin = (props) => {\n    if (token) {\n      setIsLoggedIn(\"LOGGED IN\");\n    } else {\n      setIsLoggedIn(\"LOGGED OUT\");\n    }\n  };\n\n\n\n  /*****************\n   * GET ALL CHARS *\n   ****************/\n\n  const fetchCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\");\n      const data = await response.json();\n      setCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /***************\n   * DELETE CHAR *\n   ****************/\n\n  const deleteCharacter = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:7000/characters/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: token\n        }\n      });\n      if (!token) {\n        return alert(\"Please Login before deleting!\");\n      }\n      const data = await response.json();\n      const filteredCharacters = characters.filter(\n        (character) => character._id !== data._id\n      );\n      setCharacters(filteredCharacters);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*****************\n   * GENERATE CHAR *\n   ****************/\n\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/randomChar\");\n      const data = await response.json();\n      setRandomCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    if (randomCharacters.length === 0) {\n      return;\n    }\n    let randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    let generatedCharacter = randomCharacters[randomIndex];\n\n    try {\n      if (characters.includes(generatedCharacter.name)) {\n        const filterDupe = randomCharacters.filter(\n          (rando) => rando.name !== generatedCharacter.name\n        );\n        setRandomCharacters(filterDupe);\n        generateChar();\n      } else {\n        const response = await fetch(\"http://localhost:7000/characters\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(generatedCharacter),\n        });\n        if (!token) {\n          return alert(\"Please Login before continuing!\");\n        }\n        const newRandomCharList = randomCharacters.filter(\n          (rando) => rando.name !== generatedCharacter.name\n        );\n        setRandomCharacters(newRandomCharList);\n        setCharacters([...characters, generatedCharacter]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  /***************\n   * USE EFFECT *\n   ****************/\n\n  useEffect(() => {\n    fetchCharacters();\n    setIsLoggedIn();\n    setShowModal();\n    fetchRandomCharacters();\n    if (window.localStorage.getItem(\"token\")) {\n      setToken(window.localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"character-background\">\n        <div className=\"header-style\">\n          <h1 className=\"my-characters-heading\">My Adventuring Party</h1>\n          <p id=\"my-characters-p\">View and manage all your characters, or create a new one.</p>\n          <div>\n\n            <Link to=\"/CreateCharacterForm\">\n              <button id=\"btn\">CREATE</button>\n            </Link>\n       \n            <button onClick={handleClick} id=\"btn\" >GENERATE</button>\n            <p id=\"my-characters-p\">Create a new character, or generate a random character.</p>\n          </div>\n        </div>\n        <div id=\"character-list\">\n          <ul>\n            <>\n              {characters.map((character) => {\n                if (character.characterType === \"NPC\") {\n                  return;\n                }\n                return (\n                  <li key={character._id}>\n                    <Card style={{backgroundColor: \"rgb(44 90 117)\"}} >\n                    {/* p-2 mb-2 bg-dark text-white */}\n                      <Card.Img\n                        variant=\"top\"\n                        src={character.image}\n                        id=\"thumbnail\"\n                        className=\"rounded mx-auto d-block\"\n                      />\n                      <Card.Body>\n                        <Card.Title style={{color: \"white\"}}>{character.name}</Card.Title>\n                        <Card.Text style={{color: \"white\"}}>\n                          {character.race} | {character.characterClass}\n                        </Card.Text>\n                        <button id=\"btn\">\n                      <Link to={`/characters/${character._id}`} style={{color: \"white\"}}>VIEW</Link>\n                    </button>\n                    <Button>\n                      <div id=\"link\">\n                      <Link to={`/UpdateCharacterForm/${character._id}`} style={{color: \"white\"}}>\n                        EDIT\n                      </Link>\n                      </div>\n                    </Button>\n                    <button id=\"btn\" variant=\"primary\" onClick={handleShow}>\n                      DELETE\n                    </button>\n                    <Modal show={showModal} onHide={handleClose}>\n                      <Modal.Header>\n                        <Modal.Title>Delete Character</Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body>\n                        Are you sure you want to delete this character?\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                          Close\n                        </Button>\n                        <Button\n                          variant=\"primary\"\n                          onClick={() => {\n                            deleteCharacter(character._id);\n                            handleClose();\n                          }}\n                        >\n                          DELETE\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                      </Card.Body>\n                    </Card>\n                  \n                  </li>\n                );\n              })}\n            </>\n          </ul>\n          <h1 id=\"ready\">Ready to start adventuring?</h1>\n          <Link to=\"/Tavern\">\n            <button id=\"letsgo\">Let's Go!</button>\n          \n          </Link>\n          \n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllCharPage;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js",["118"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction GetRandom(props) {\n    const [randomChars, setRandomCharacters] = useState([]);\n  \n    const fetchRandomCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/randomchar');\n        const data = await response.json();\n        setRandomCharacters(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    useEffect(() => { \n        fetchRandomCharacters()\n      }, []);\n\n     \n      return (\n        <div>\n          <h1>Hey</h1>\n\n        </div>\n      )\n      \n\n    }\n\n    export default GetRandom;",["119","120"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js",["121","122","123"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import \"../App.css\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { useState } from \"react\";\nimport wizardbook from \"../images/wizardbook.png\";\n\nfunction Tavern() {\n  const [open, setOpen] = useState(true);\n  const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => setOpen(false);\n\n  const [openChat, setOpenChat] = useState(false);\n  const onOpenChatModal = () => setOpenChat(true);\n  const onCloseChatModal = () => setOpenChat(false);\n\n  const [openWizChat, setOpenWizChat] = useState(false);\n  const onOpenWizChatModal = () => setOpenWizChat(true);\n  const onCloseWizChatModal = () => setOpenWizChat(false);\n\n  const [openQuestChat, setOpenQuestChat] = useState(false);\n  const onOpenQuestChat = () => setOpenQuestChat(true);\n  const onCloseQuestChat = () => setOpenQuestChat(false);\n\n  return (\n    <>\n      <div>\n      <h1>Party time!</h1>\n        <p>\n            Tavern music is playing loudly, the drinks are flowing and you are\n            reminiscing with your adventuring party.</p>\n        <Button>Say something</Button>\n        {/* <Modal\n          open={open}\n          onClose={onCloseModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h2>So it begins...</h2>\n          <p>\n            In a land of Myth and a time of Legend there lived a group of\n            adventurers who's destinies would sculpt the future of the world. It\n            all started in a little tavern in a little village when a little\n            gnome spilled their little drink onto an abnormally large tome\n            belonging to an old Wizard....\n          </p>\n          <button onClick={onOpenChatModal}>BEGIN</button>\n        </Modal>\n\n        <Modal\n          open={openChat}\n          onClose={onCloseChatModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Party time!</h1>\n          <p>\n            Tavern music is playing loudly, the drinks are flowing and you are\n            reminiscing with your adventuring party.\n            <br />\n            <br />\n            \"Oi! Thiss Is may thissessmahsoooong!\" says a tipsy gnome as she\n            spills some ale on a Wizard's Tome.\n            <br />\n            <br />\n            The old Wizard says, \"Whoa there...watch yourself, gnome! This book\n            is THE Adventurers Registry of Legend! It's said that any adventurer\n            who signs their name in this book is to go off on a quest in which\n            the results will shape the future of the world as we know it!\"\n            <br />\n            <br />\n            \"Oowwhhh shorry shir!\" says the tipsy gnome. \"I\n            dii..diddnn...dddiddidnnn....was an axethdent. 'Tis my birthhday\n            toodayy!\" The Gnome leans closer to the Wizard and whispers \"Ohh\n            what're ye doin frienly wiz..um...wiz...\" and she promptly passes\n            out as she falls out of her chair and onto the floor.\n            <br />\n            <br />\n            The old Wizard says \"Mmm... I'm afraid it's not interested in you,\n            little one...\" They raise their gaze and lock eyes with you.\n            <br />\n            <br />\n            \"You there, on the other hand,\" they say. \" I have much to discuss\n            with you! Come, sit, enjoy an ale on me while I tell you a story\n            from a long long time ago...\"\n          </p>\n          <button onClick={onOpenWizChatModal}>GO ON....</button>\n        </Modal>\n        <br />\n\n        <Modal\n          open={openWizChat}\n          onClose={onCloseWizChatModal}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Pull up a chair!</h1>\n          <img src={wizardbook} id=\"wizard-book-image\" alt=\"wizard-book\" />\n          <p>\n            The old wizard tells you a tale of intrigue and courage, of magic\n            and mystery, of treasure and toil, of monsters and men. Suddenly,\n            you see a glow coming from the tome in his hands.\n            <br />\n            <br />\n            Finally, he says \"Ahhh yes, so it seems the tome finds you worthy of\n            such a quest. Well now, let's see here, where we are to send\n            you...hmm?\" He licks his index finger and turns a page. \"It says:\n            Behold, Adventurers! The quest is rather simple, however the\n            consequences are severe...I require, on the Isle of Sapphire, a\n            small goldfish... For you'll find me in the depths of Xanthar's\n            Lair. Think you're up to the task?\"\n          </p>\n          <button onClick={onOpenQuestChat}>ACCEPT QUEST</button>\n        </Modal>\n        <br />\n        <Modal\n          open={openQuestChat}\n          onClose={onCloseQuestChat}\n          center\n          classNames={{\n            overlay: \"tavern-overlay\",\n            modal: \"tavern-modal\",\n          }}\n        >\n          <h1>Wonderful!</h1>\n          <p\n            classNames={{\n              modal: \"battle-modal\",\n            }}\n          >\n            \"Retrieve the item and meet me back in this tavern when you are\n            done. Now get a move on...and good luck, adventurer. You're going to\n            need it.\"\n          </p>\n          <Link to=\"./battle\">\n            <button\n              classNames={{\n                overlay: \"tavern-overlay\",\n                modal: \"tavern-modal\",\n              }}\n            >\n              LET'S GO\n            </button>\n          </Link>\n        </Modal> */}\n      </div>\n    </>\n  );\n}\n\nexport default Tavern;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Register.js",["139"],"import \"../App.css\";\nimport { useRef } from \"react\";\n\nconst RegisterForm = (props) => {\n  const usernameInput = useRef(null);\n  const passwordInput = useRef(null);\n  const confirmPasswordInput = useRef(null);\n\n  const register = async (event) => {\n    event.preventDefault();\n    const body = JSON.stringify({\n      username: usernameInput.current.value,\n      password: passwordInput.current.value,\n      confirmPassword: confirmPasswordInput.current.value,\n    });\n    event.currentTarget.reset();\n    try {\n      const response = await fetch(\"http://localhost:7000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body,\n      });\n      if (passwordInput !== confirmPasswordInput) {\n        alert(\"Passwords do not match!\");\n      } else {\n        alert(\"Account created!\");\n        props.history.push(\"/Login\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <h2>Register</h2>\n        <p>\n          Please create a unique username and password to create an account. We\n          suggest passwords be at least 8 characters with letters, numbers, and\n          special characters.\n        </p>\n        <form onSubmit={register} method=\"post\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={usernameInput} />\n          <br />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={passwordInput} />\n          <br />\n          <label>Confirm Password</label>\n          <input type=\"password\" name=\"confirmpassword\" ref={confirmPasswordInput} />\n          <br />\n          <input type=\"submit\" value=\"REGISTER\" id=\"submit-btn\" />\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Login.js",["140"],"import \"../App.css\";\nimport { useEffect, useRef } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { refreshTokenSetup } from \"./RefreshToken\";\n\nconst LoginForm = (props) => {\n  const nameInput = useRef(null);\n  const passwordInput = useRef(null);\n  const clientId =\n    \"279098454783-6ifmp48rjph5516k7i7hajcsfshh8h2a.apps.googleusercontent.com\";\n\n  const login = async (event, username, pass) => {\n    \n    username = nameInput.current.value;\n    pass = passwordInput.current.value;\n    try {\n      props.userLogin(event, username, pass);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  \n\n  const onSuccess = (res) => {\n    console.log(\"[Login Success] currentUser:\", res.profileObj);\n\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = (res) => {\n    console.log(\"[Login Failed] res:\", res);\n  };\n\n  const onLogoutSuccess = () => {\n    alert(\"Logged Out Successfully\");\n  };\n\n\n\n  useEffect(() => {\n    if (window.localStorage.getItem(\"token\")) {\n      props.setToken(window.localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div>\n        <p>Welcome back, Adventurer! Please login below.</p>\n        <div>\n          <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={\"single_host_origin\"}\n            style={{ marginTop: \"100px\" }}\n            isSignedIn={true}\n          />\n        </div>\n        <form onSubmit={login} method=\"post\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={nameInput} />\n          <br />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={passwordInput} />\n          <br />\n          <input type=\"submit\" value=\"LOGIN\" id=\"submit-btn\" />\n        </form>\n      </div>\n      {<div>\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Logout with Google\"\n          onLogoutSuccess={onLogoutSuccess}\n        ></GoogleLogout>\n      </div>}\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogout.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GoogleLogin.js",["141"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/RefreshToken.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UserContext.js",[],["142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":3,"column":20,"nodeType":"150","messageId":"151","endLine":3,"endColumn":26},{"ruleId":"148","severity":1,"message":"152","line":6,"column":3,"nodeType":"150","messageId":"151","endLine":6,"endColumn":13},{"ruleId":"148","severity":1,"message":"153","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":7},{"ruleId":"148","severity":1,"message":"154","line":22,"column":23,"nodeType":"150","messageId":"151","endLine":22,"endColumn":29},{"ruleId":"148","severity":1,"message":"155","line":26,"column":10,"nodeType":"150","messageId":"151","endLine":26,"endColumn":15},{"ruleId":"148","severity":1,"message":"156","line":27,"column":10,"nodeType":"150","messageId":"151","endLine":27,"endColumn":16},{"ruleId":"148","severity":1,"message":"157","line":27,"column":18,"nodeType":"150","messageId":"151","endLine":27,"endColumn":27},{"ruleId":"148","severity":1,"message":"153","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"158","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":15},{"ruleId":"148","severity":1,"message":"159","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":11},{"ruleId":"148","severity":1,"message":"160","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":19},{"ruleId":"148","severity":1,"message":"161","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":15},{"ruleId":"148","severity":1,"message":"162","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":11},{"ruleId":"148","severity":1,"message":"163","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":14},{"ruleId":"148","severity":1,"message":"164","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":13},{"ruleId":"148","severity":1,"message":"165","line":13,"column":8,"nodeType":"150","messageId":"151","endLine":13,"endColumn":16},{"ruleId":"148","severity":1,"message":"166","line":89,"column":13,"nodeType":"150","messageId":"151","endLine":89,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":130,"column":3,"nodeType":"150","endLine":130,"endColumn":12,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":145,"column":11,"nodeType":"172","endLine":149,"endColumn":12},{"ruleId":"173","severity":1,"message":"174","line":268,"column":13,"nodeType":"172","endLine":268,"endColumn":44},{"ruleId":"173","severity":1,"message":"174","line":280,"column":13,"nodeType":"172","endLine":280,"endColumn":42},{"ruleId":"148","severity":1,"message":"155","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":15},{"ruleId":"167","severity":1,"message":"175","line":28,"column":6,"nodeType":"176","endLine":28,"endColumn":8,"suggestions":"177"},{"ruleId":"148","severity":1,"message":"178","line":2,"column":31,"nodeType":"150","messageId":"151","endLine":2,"endColumn":41},{"ruleId":"148","severity":1,"message":"179","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":20},{"ruleId":"148","severity":1,"message":"180","line":18,"column":9,"nodeType":"150","messageId":"151","endLine":18,"endColumn":19},{"ruleId":"148","severity":1,"message":"166","line":99,"column":15,"nodeType":"150","messageId":"151","endLine":99,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":160,"column":19,"nodeType":"183","messageId":"184","endLine":160,"endColumn":26},{"ruleId":"148","severity":1,"message":"185","line":5,"column":12,"nodeType":"150","messageId":"151","endLine":5,"endColumn":23},{"ruleId":"144","replacedBy":"186"},{"ruleId":"146","replacedBy":"187"},{"ruleId":"148","severity":1,"message":"153","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"188","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":132,"column":32,"nodeType":"189","messageId":"190","endLine":132,"endColumn":34},{"ruleId":"148","severity":1,"message":"191","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":15},{"ruleId":"148","severity":1,"message":"153","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"148","severity":1,"message":"192","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":18},{"ruleId":"148","severity":1,"message":"193","line":11,"column":10,"nodeType":"150","messageId":"151","endLine":11,"endColumn":14},{"ruleId":"148","severity":1,"message":"194","line":12,"column":9,"nodeType":"150","messageId":"151","endLine":12,"endColumn":20},{"ruleId":"148","severity":1,"message":"195","line":13,"column":9,"nodeType":"150","messageId":"151","endLine":13,"endColumn":21},{"ruleId":"148","severity":1,"message":"196","line":15,"column":10,"nodeType":"150","messageId":"151","endLine":15,"endColumn":18},{"ruleId":"148","severity":1,"message":"197","line":16,"column":9,"nodeType":"150","messageId":"151","endLine":16,"endColumn":24},{"ruleId":"148","severity":1,"message":"198","line":17,"column":9,"nodeType":"150","messageId":"151","endLine":17,"endColumn":25},{"ruleId":"148","severity":1,"message":"199","line":19,"column":10,"nodeType":"150","messageId":"151","endLine":19,"endColumn":21},{"ruleId":"148","severity":1,"message":"200","line":20,"column":9,"nodeType":"150","messageId":"151","endLine":20,"endColumn":27},{"ruleId":"148","severity":1,"message":"201","line":21,"column":9,"nodeType":"150","messageId":"151","endLine":21,"endColumn":28},{"ruleId":"148","severity":1,"message":"202","line":23,"column":10,"nodeType":"150","messageId":"151","endLine":23,"endColumn":23},{"ruleId":"148","severity":1,"message":"203","line":24,"column":9,"nodeType":"150","messageId":"151","endLine":24,"endColumn":24},{"ruleId":"148","severity":1,"message":"204","line":25,"column":9,"nodeType":"150","messageId":"151","endLine":25,"endColumn":25},{"ruleId":"148","severity":1,"message":"166","line":18,"column":13,"nodeType":"150","messageId":"151","endLine":18,"endColumn":21},{"ruleId":"167","severity":1,"message":"205","line":46,"column":6,"nodeType":"176","endLine":46,"endColumn":8,"suggestions":"206"},{"ruleId":"148","severity":1,"message":"207","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":21},{"ruleId":"144","replacedBy":"208"},{"ruleId":"146","replacedBy":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'Image' is defined but never used.","'elf' is defined but never used.","'enchantress' is defined but never used.","'fighter' is defined but never used.","'orc' is defined but never used.","'ranger' is defined but never used.","'rogue' is defined but never used.","'sorcerer' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAvatar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["212"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'fetchCharacter'. Either include it or remove the dependency array.","ArrayExpression",["213"],"'useContext' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'checkLogin' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'randomChars' is assigned a value but never used.",["210"],["211"],"'beholder' is defined but never used.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'wizardbook' is defined but never used.","'open' is assigned a value but never used.","'onOpenModal' is assigned a value but never used.","'onCloseModal' is assigned a value but never used.","'openChat' is assigned a value but never used.","'onOpenChatModal' is assigned a value but never used.","'onCloseChatModal' is assigned a value but never used.","'openWizChat' is assigned a value but never used.","'onOpenWizChatModal' is assigned a value but never used.","'onCloseWizChatModal' is assigned a value but never used.","'openQuestChat' is assigned a value but never used.","'onOpenQuestChat' is assigned a value but never used.","'onCloseQuestChat' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["214"],"'googleLogin' is defined but never used.",["210"],["211"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Add dependencies array: []",{"range":"221","text":"222"},"Update the dependencies array to be: [fetchCharacter]",{"range":"223","text":"224"},"Update the dependencies array to be: [props]",{"range":"225","text":"226"},[3686,3686],", []",[829,831],"[fetchCharacter]",[1109,1111],"[props]"]