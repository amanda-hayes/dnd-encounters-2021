[{"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js":"1","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js":"2","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js":"3","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js":"4","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js":"5","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GenerateChar.js":"6","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js":"7","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js":"8","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js":"9","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js":"10"},{"size":362,"mtime":1609205093329,"results":"11","hashOfConfig":"12"},{"size":1219,"mtime":1609630900283,"results":"13","hashOfConfig":"12"},{"size":540,"mtime":1609383362658,"results":"14","hashOfConfig":"12"},{"size":4959,"mtime":1609711336435,"results":"15","hashOfConfig":"12"},{"size":5068,"mtime":1609709884753,"results":"16","hashOfConfig":"12"},{"size":1313,"mtime":1609653791999,"results":"17","hashOfConfig":"12"},{"size":1722,"mtime":1609701495284,"results":"18","hashOfConfig":"12"},{"size":4253,"mtime":1609707647244,"results":"19","hashOfConfig":"12"},{"size":665,"mtime":1609616860519,"results":"20","hashOfConfig":"12"},{"size":2695,"mtime":1609646256897,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"kewybn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js",[],["47","48"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js",["49","50"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js",["51"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GenerateChar.js",["52"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\n\nfunction GenerateCharComponent(props) {\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch('http://localhost:7000/randomChar');\n      const data = await response.json();\n      setRandomCharacters(data);\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    const randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    const generatedCharacter = randomCharacters[randomIndex];\n\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(generatedCharacter)\n      });\n      console.log(generatedCharacter);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  useEffect(() => { \n    fetchRandomCharacters()\n  }, []);\n\n  return (\n    <div>\n      <h2>Generate a random character for me</h2>\n      <button onClick={handleClick}\n      >Generate</button>\n    </div>\n  )\n}\nexport default GenerateCharComponent;\n\n\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js",["53","54"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js",["55"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js",["56"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction GetRandom(props) {\n    const [randomChars, setRandomCharacters] = useState([]);\n  \n    const fetchRandomCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/randomchar');\n        const data = await response.json();\n        setRandomCharacters(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    useEffect(() => { \n        fetchRandomCharacters()\n      }, []);\n\n     \n      return (\n        <div>\n          <h1>Hey</h1>\n\n        </div>\n      )\n      \n\n    }\n\n    export default GetRandom;",["57","58"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js",["59","60","61"],"import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Battle() {\n    const [playerCharacters, updatePlayerCharactersList] = useState([]);\n    const [nonPlayerCharacters, updateNonPlayerCharactersList] = useState([]);\n\n    const fetchPlayerCharacters = async () => {\n        try {\n            const response = await fetch(\"http://localhost:7000/characters\");\n            const charactersData = await response.json();\n\n            updatePlayerCharactersList(charactersData);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const fetchNonPlayerCharacters = async () => {\n        try {\n            const response = await fetch(\"http://localhost:7000/monsters\");\n            const monstersData = await response.json();\n\n            updateNonPlayerCharactersList(monstersData);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchPlayerCharacters();\n        //fetchNonPlayerCharacters();\n      }, []);\n\n      function takeDamageClickHandler(event) {\n        const newPlayerCharacters = [...playerCharacters];\n        newPlayerCharacters.find(char => char._id === event.target.value).HP -= 1;\n\n        updatePlayerCharactersList(newPlayerCharacters);\n      }\n\n      function shoutClickHandler(event) {\n        const newPlayerCharacters = [...playerCharacters];\n        \n        alert(newPlayerCharacters.find(char => char._id === event.target.value).catchphrases.split(\".\")[0]);\n\n      }\n\n\n    // summon our players/monster\n    // function summon(summonType) {return monster/player}\n\n    // Make monster talk (modal or smthg)\n    // Monster.talk() {return from catchphrase list}\n\n    // Click begin to initialize\n    // Roll init for each player (random d20)\n    // var init[] that stores turn order\n    // player with highest init goes first\n\n    // modal or alert with player's roll & turn number\n\n    // Do first attack\n\n    // roll\n    \n\n\n    // create an initial state\n    // This would log the players HP, turn order, the round\n\n    // add components for players vs NPCs\n\n    return (\n    <div id=\"character-list\">\n        <ul>\n          <>\n            {playerCharacters.map((player) => {\n              return (\n                <li key={player._id}>\n                  {player.name} | {player.HP} |{\" \"}\n                  <br />\n                  <button value={ player._id } onClick={shoutClickHandler}>SHOUT</button>\n                  <button value={ player._id } onClick={takeDamageClickHandler}>PAIN</button>\n                </li>\n              );\n            })}\n          </>\n        </ul>\n    </div>\n    )\n\n}\n\nexport default Battle;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":36,"column":19,"nodeType":"68","messageId":"69","endLine":36,"endColumn":27},{"ruleId":"70","severity":1,"message":"71","line":60,"column":66,"nodeType":"72","endLine":60,"endColumn":180},{"ruleId":"66","severity":1,"message":"67","line":39,"column":19,"nodeType":"68","messageId":"69","endLine":39,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":24,"column":13,"nodeType":"68","messageId":"69","endLine":24,"endColumn":21},{"ruleId":"66","severity":1,"message":"73","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":12},{"ruleId":"74","severity":1,"message":"75","line":20,"column":41,"nodeType":"76","endLine":20,"endColumn":43,"suggestions":"77"},{"ruleId":"66","severity":1,"message":"67","line":66,"column":15,"nodeType":"68","messageId":"69","endLine":66,"endColumn":23},{"ruleId":"66","severity":1,"message":"78","line":5,"column":12,"nodeType":"68","messageId":"69","endLine":5,"endColumn":23},{"ruleId":"62","replacedBy":"79"},{"ruleId":"64","replacedBy":"80"},{"ruleId":"66","severity":1,"message":"81","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"82","line":7,"column":12,"nodeType":"68","messageId":"69","endLine":7,"endColumn":31},{"ruleId":"66","severity":1,"message":"83","line":20,"column":11,"nodeType":"68","messageId":"69","endLine":20,"endColumn":35},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'rand' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacter'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'randomChars' is assigned a value but never used.",["84"],["85"],"'Link' is defined but never used.","'nonPlayerCharacters' is assigned a value but never used.","'fetchNonPlayerCharacters' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [fetchCharacter]",{"range":"89","text":"90"},[640,642],"[fetchCharacter]"]