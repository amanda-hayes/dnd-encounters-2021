[{"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js":"1","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js":"2","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js":"3","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js":"4","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js":"5","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js":"6","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js":"7","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js":"8","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js":"9","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js":"10","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js":"11","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js":"12","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js":"13","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Register.js":"14","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Login.js":"15"},{"size":362,"mtime":1609205093329,"results":"16","hashOfConfig":"17"},{"size":1467,"mtime":1611467782055,"results":"18","hashOfConfig":"17"},{"size":540,"mtime":1609383362658,"results":"19","hashOfConfig":"17"},{"size":7138,"mtime":1611526514665,"results":"20","hashOfConfig":"17"},{"size":7334,"mtime":1611526497407,"results":"21","hashOfConfig":"17"},{"size":2382,"mtime":1611526523665,"results":"22","hashOfConfig":"17"},{"size":8657,"mtime":1611607067852,"results":"23","hashOfConfig":"17"},{"size":665,"mtime":1609616860519,"results":"24","hashOfConfig":"25"},{"size":7831,"mtime":1611526537943,"results":"26","hashOfConfig":"17"},{"size":736,"mtime":1609981226191,"results":"27","hashOfConfig":"17"},{"size":5859,"mtime":1611590514451,"results":"28","hashOfConfig":"17"},{"size":2086,"mtime":1610045702699,"results":"29","hashOfConfig":"17"},{"size":507,"mtime":1610044795898,"results":"30","hashOfConfig":"17"},{"size":2166,"mtime":1611542735916,"results":"31","hashOfConfig":"17"},{"size":2285,"mtime":1611596092373,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1qm3j26",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},"kewybn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js",[],["71","72"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js",["73","74"],"import { useRef } from \"react\";\nimport \"../App.css\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateCharacterForm = (props) => {\n  const nameInput = useRef(null);\n  const pronounsInput = useRef(null);\n  const raceSelect = useRef(null);\n  const characterClassSelect = useRef(null);\n  const hpSelect = useRef(null);\n  const attackSelect = useRef(null);\n  const armorClassSelect = useRef(null);\n  const weaponSelect = useRef(null);\n  const catchphrasesSelect = useRef(null);\n  const backstoryInput = useRef(null);\n\n  const createCharacter = async (event) => {\n    event.preventDefault();\n    const name = nameInput.current.value;\n    const pronouns = pronounsInput.current.value;\n    const race = raceSelect.current.value;\n    const characterClass = characterClassSelect.current.value;\n    const hp = 12;\n    const attack = attackSelect.current.value;\n    const armorClass = 15;\n    const weapon = weaponSelect.current.value;\n    const catchphrases = catchphrasesSelect.current.value;\n    const backstory = backstoryInput.current.value;\n\n    const body = JSON.stringify({\n      name,\n      pronouns,\n      race,\n      characterClass,\n      hp,\n      attack,\n      armorClass,\n      weapon,\n      catchphrases,\n      backstory,\n    });\n\n    event.currentTarget.reset();\n\n    try {\n      const response = await fetch(\n        \"http://localhost:7000/characters\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: body,\n        }\n      );\n\n      props.history.push(\"/Characters\");\n      alert(\"Character Created!\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n      <div id=\"create-char-form\">\n        <h2 id=\"create-char-h2\">Create New Character</h2>\n        <p>\n          Feel free to play around with different characters and stats.\n          <br />\n          If you want more information on rolling a new character,{\" \"}\n          <a\n            href=\"https://www.instructables.com/Creating-a-DD-5e-Character-for-Beginners/\"\n            target=\"_blank\"\n            id=\"click-here\"\n          >\n            click here.\n          </a>\n        </p>\n        <form onSubmit={createCharacter} method=\"post\">\n          <label>Character Name:</label>\n          <input type=\"text\" name=\"name\" ref={nameInput} />\n          <br />\n          <label>Character Pronouns:</label>\n          <input type=\"text\" name=\"pronouns\" ref={pronounsInput} />\n          <br />\n          <label>Race:</label>\n          <select className=\"select\" ref={raceSelect}>\n            <option value=\"Human\">Human</option>\n            <option value=\"Half Elf\">Elf</option>\n            <option value=\"Gnome\">Gnome</option>\n            <option value=\"Half Orc\">Half Orc</option>\n            <option value=\"Tiefling\">Tiefling</option>\n            <option value=\"Aasimar\">Aasimar</option>\n            <option value=\"Dragonborn\">Dragonborn</option>\n            <option value=\"Tabaxi\">Tabaxi</option>\n            <option value=\"Centaur\">Centaur</option>\n            <option value=\"Halfling\">Halfling</option>\n            <option value=\"Halfling\">Dwarf</option>\n          </select>\n          <br />\n          <label>Class:</label>\n          <select className=\"select\" ref={characterClassSelect}>\n            <option value=\"Fighter\">Fighter (Tank)</option>\n            <option value=\"Wizard\">Wizard (DPS)</option>\n            <option value=\"Rogue\">Rogue (stabby stabby)</option>\n            <option value=\"Cleric\">Cleric (Healer)</option>\n            <option value=\"Druid\">Druid</option>\n            <option value=\"Monk\">Monk</option>\n            <option value=\"Paladin\">Paladin</option>\n            <option value=\"Ranger\">Ranger</option>\n            <option value=\"Sorcerer\">Sorcerer</option>\n            <option value=\"Sorcerer\">Warlock</option>\n          </select>\n          <br />\n          <label>HP</label>\n          <select className=\"select\" ref={hpSelect}>\n            <option value=\"Default\">12</option>\n          </select>\n          <br />\n          <label>Attack:</label>\n          <select className=\"select\" ref={attackSelect}>\n            <option value=\"Sword Slash\">Sword Slash</option>\n            <option value=\"Magic Missile\">Magic Missile</option>\n            <option value=\"Druid\">Shillelagh</option>\n            <option value=\"Monk\">Fury of Blows</option>\n            <option value=\"Eldritch Blast\">Eldritch Blast</option>\n            <option value=\"Acid Splash\">Acid Splash</option>\n          </select>\n          <br />\n          <label>Armor Class</label>\n          <select className=\"select\" ref={armorClassSelect}>\n            <option value=\"Default\">15</option>\n          </select>\n          <br />\n          <label>Weapon:</label>\n          <select className=\"select\" ref={weaponSelect}>\n            <option value=\"Greatsword\">Greatsword</option>\n            <option value=\"Wand\">Wand</option>\n            <option value=\"Dagger\">Dagger</option>\n            <option value=\"Longbow\">Longbow</option>\n            <option value=\"Rapier\">Rapier</option>\n            <option value=\"Maul\">Maul</option>\n            <option value=\"Crossbow\">Crossbow</option>\n          </select>\n          <br />\n          <label>Catchphrases:</label>\n          <select className=\"select\" ref={catchphrasesSelect}>\n            <option value=\"Nobody makes me bleed my own blood!\">\n              'Nobody makes me bleed my own blood!'\n            </option>\n            <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">\n              'LEEEEROYYYYY JENKIIIINNNNSSSS!'\n            </option>\n            <option value=\"I attack the darkness!\">\n              'I attack the darkness!'\n            </option>\n            <option value=\"Can't we ever just have a normal field trip?\">\n              'Can't we ever just have a normal field trip?'\n            </option>\n            <option value=\"Screw it, we're basically Gods!\">\n              'Screw it, we're basically Gods!'\n            </option>\n            <option value=\"I’m a lover, not a fighter\">\n              'I’m a lover, not a fighter'\n            </option>\n            <option value=\"Today is a good day to die.\">\n              'Today is a good day to die.'\n            </option>\n            <option value=\"Last name Ever, first name Greatest\">\n              'Last name Ever, first name Greatest'\n            </option>\n            <option value=\"I don't think that's such a good idea, Tommy\">\n              'I don't think that's such a good idea, Tommy'\n            </option>\n          </select>\n          <br />\n          <label>Backstory:</label>\n          <input\n            type=\"textarea\"\n            name=\"backstory\"\n            rows=\"10\"\n            cols=\"30\"\n            ref={backstoryInput}\n          />\n          <br />\n          <input type=\"submit\" value=\"Create Character\" id=\"submit-btn\" />\n        </form>\n      </div>\n    </>\n  );\n};\nexport default CreateCharacterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js",["75"],"import { useRef } from \"react\";\nimport \"../App.css\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nconst UpdateCharacterForm = (props) => {\n  const updateNameInput = useRef(null);\n  const updatePronounsInput = useRef(null);\n  const updateRaceSelect = useRef(null);\n  const updateCharacterClassSelect = useRef(null);\n  const updateHPSelect = useRef(null);\n  const updateWeaponSelect = useRef(null);\n  const updateAttackSelect = useRef(null);\n  const updateArmorClass = useRef(null);\n  const updateCatchphrasesSelect = useRef(null);\n  const updateBackstory = useRef(null);\n  const characterDetailRouteMatch = useRouteMatch(\"/UpdateCharacterForm/:id\");\n  const charId = characterDetailRouteMatch.params.id;\n\n  const updateCharacter = async (event) => {\n    event.preventDefault();\n    const name = updateNameInput.current.value;\n    const race = updateRaceSelect.current.value;\n    const characterClass = updateCharacterClassSelect.current.value;\n    const pronouns = updatePronounsInput.current.value;\n    const HP = updateHPSelect.current.value;\n    const weapon = updateWeaponSelect.current.value;\n    const attack = updateAttackSelect.current.value;\n    const armorClass = updateArmorClass.current.value;\n    const catchphrases = updateCatchphrasesSelect.current.value;\n    const backstory = updateBackstory.current.value;\n    const body = JSON.stringify({\n      name,\n      race,\n      characterClass,\n      pronouns,\n      HP,\n      weapon,\n      attack,\n      armorClass,\n      catchphrases,\n      backstory,\n    });\n\n    event.currentTarget.reset();\n\n    try {\n      const response = await fetch(\n        `http://localhost:7000/${charId}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: body,\n        }\n      );\n\n      alert(\"Character Updated!\");\n      props.history.push(\"/characters\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n      <div className=\"update-background\">\n        <div id=\"update-breadcrumbs\">\n          <Link to=\"/Characters\">Go Back</Link>\n        </div>\n        <div className=\"heading-with-form\">\n          <h2 id=\"update-char-h2\">Update Character</h2>\n          <form onSubmit={updateCharacter}>\n            <label>Character Name:</label>\n            <input type=\"text\" name=\"name\" ref={updateNameInput} />\n            <br />\n            <label>Character Pronouns:</label>\n            <input type=\"text\" name=\"pronouns\" ref={updatePronounsInput} />\n            <br />\n            <label>Race:</label>\n            <select className=\"select\" ref={updateRaceSelect}>\n              <option value=\"Human\">Human</option>\n              <option value=\"Half Elf\">Elf</option>\n              <option value=\"Gnome\">Gnome</option>\n              <option value=\"Half Orc\">Half Orc</option>\n              <option value=\"Tiefling\">Tiefling</option>\n              <option value=\"Aasimar\">Aasimar</option>\n              <option value=\"Dragonborn\">Dragonborn</option>\n              <option value=\"Tabaxi\">Tabaxi</option>\n              <option value=\"Centaur\">Centaur</option>\n              <option value=\"Halfling\">Halfling</option>\n              <option value=\"Halfling\">Dwarf</option>\n            </select>\n            <br />\n            <label>Class:</label>\n            <select className=\"select\" ref={updateCharacterClassSelect}>\n              <option value=\"Fighter\">Fighter (Tank)</option>\n              <option value=\"Wizard\">Wizard (DPS)</option>\n              <option value=\"Rogue\">Rogue (stabby stabby)</option>\n              <option value=\"Cleric\">Cleric (Healer)</option>\n              <option value=\"Druid\">Druid</option>\n              <option value=\"Monk\">Monk</option>\n              <option value=\"Paladin\">Paladin</option>\n              <option value=\"Ranger\">Ranger</option>\n              <option value=\"Sorcerer\">Sorcerer</option>\n              <option value=\"Sorcerer\">Warlock</option>\n            </select>\n            <br />\n            <label>HP</label>\n            <select className=\"select\" ref={updateHPSelect}>\n              <option value=\"Default\">12</option>\n            </select>\n            <br />\n            <label>Attack:</label>\n            <select className=\"select\" ref={updateAttackSelect}>\n              <option value=\"Sword Slash\">Sword Slash</option>\n              <option value=\"Magic Missile\">Magic Missile</option>\n              <option value=\"Druid\">Shillelagh</option>\n              <option value=\"Monk\">Fury of Blows</option>\n              <option value=\"Eldritch Blast\">Eldritch Blast</option>\n              <option value=\"Acid Splash\">Acid Splash</option>\n            </select>\n            <br />\n            <label>Armor Class</label>\n            <select className=\"select\" ref={updateArmorClass}>\n              <option value=\"Default\">15</option>\n            </select>\n            <br />\n            <label>Weapon:</label>\n            <select className=\"select\" ref={updateWeaponSelect}>\n              <option value=\"Greatsword\">Greatsword</option>\n              <option value=\"Wand\">Wand</option>\n              <option value=\"Dagger\">Dagger</option>\n              <option value=\"Longbow\">Longbow</option>\n              <option value=\"Rapier\">Rapier</option>\n              <option value=\"Maul\">Maul</option>\n              <option value=\"Crossbow\">Crossbow</option>\n            </select>\n            <br />\n            <label>Catchphrases:</label>\n            <select className=\"select\" ref={updateCatchphrasesSelect}>\n              <option value=\"Nobody makes me bleed my own blood!\">\n                'Nobody makes me bleed my own blood!'\n              </option>\n              <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">\n                'LEEEEROYYYYY JENKIIIINNNNSSSS!'\n              </option>\n              <option value=\"I attack the darkness!\">\n                'I attack the darkness!'\n              </option>\n              <option value=\"Can't we ever just have a normal field trip?\">\n                'Can't we ever just have a normal field trip?'\n              </option>\n              <option value=\"Screw it, we're basically Gods!\">\n                'Screw it, we're basically Gods!'\n              </option>\n              <option value=\"I’m a lover, not a fighter\">\n                'I’m a lover, not a fighter'\n              </option>\n              <option value=\"Today is a good day to die.\">\n                'Today is a good day to die.'\n              </option>\n              <option value=\"Last name Ever, first name Greatest\">\n                'Last name Ever, first name Greatest'\n              </option>\n              <option value=\"I don't think that's such a good idea, Tommy\">\n                'I don't think that's such a good idea, Tommy'\n              </option>\n            </select>\n            <br />\n            <label>Backstory:</label>\n            <input type=\"textarea\" name=\"backstory\" ref={updateBackstory} />\n            <br />\n            <input type=\"submit\" value=\"UPDATE CHARACTER\" />\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UpdateCharacterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js",["76","77"],"import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nfunction CharacterStats() {\n  const [character, setCharacter] = useState({});\n  const characterDetailRouteMatch = useRouteMatch(\"/Characters/:id\");\n\n  const fetchCharacter = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:7000/characters/${characterDetailRouteMatch.params.id}`\n      );\n      const data = await response.json();\n      setCharacter(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCharacter();\n  }, []);\n\n  return (\n    <>\n      <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n      <div className=\"parchment-background\">\n        <br />\n        <br />\n        <br />\n        <br />\n        <h1 id=\"character-sheet-heading\">\n          {character.name}\n          <br />\n          Character Sheet\n        </h1>\n        <div id=\"character-container\">\n          <div id=\"character-stats-image\">\n            <br />\n            <br />\n            <img src={character.image} />\n          </div>\n          <div id=\"stats-list\">\n            <label>Name:</label> {character.name}\n            <br />\n            <label>Race:</label> {character.race}\n            <br />\n            <label>Pronouns:</label> {character.pronouns}\n            <br />\n            <label>Class:</label> {character.characterClass}\n            <br />\n            <label>HP:</label> {character.HP}\n            <br />\n            <label>Main Weapon:</label> {character.weapon}\n            <br />\n            <label>Main Attack:</label> {character.attack}\n            <br />\n            <label>Armor Class:</label> {character.armorClass}\n            <br />\n            <label>Motto:</label>\n            <br /> \"{character.catchphrases}\"\n            <br />\n            <br />\n            <label>Backstory:</label>\n            <br /> \"{character.backstory}\"\n            <br />\n            <button>\n              <Link to={`/UpdateCharacterForm/${character._id}`}>\n                EDIT CHARACTER\n              </Link>\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CharacterStats;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js",["78","79","80","81","82"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js",["83"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction GetRandom(props) {\n    const [randomChars, setRandomCharacters] = useState([]);\n  \n    const fetchRandomCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/randomchar');\n        const data = await response.json();\n        setRandomCharacters(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    useEffect(() => { \n        fetchRandomCharacters()\n      }, []);\n\n     \n      return (\n        <div>\n          <h1>Hey</h1>\n\n        </div>\n      )\n      \n\n    }\n\n    export default GetRandom;",["84","85"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js",["86","87"],"import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport beholder from \"../beholder.jpeg\";\nimport d20 from \"../images/d20.png\";\nimport d20natone from \"../images/d20natone.png\";\n\nfunction Battle() {\n  const [playerCharacters, updatePlayerCharactersList] = useState([]);\n  const [open, setOpen] = useState(true);\n  const onCloseModal = () => setOpen(false);\n  const [openBattle, setOpenBattle] = useState(false);\n  const onOpenBattle = () => setOpenBattle(true);\n  const onCloseBattle = () => setOpenBattle(false);\n  const [openDiceModal, setOpenDiceModal] = useState(false);\n  const onOpenDiceRollModal = () => setOpenDiceModal(true);\n  const onCloseDiceRollModal = () => setOpenDiceModal(false);\n  const [modalContent, setModalContent] = useState([]);\n  let history = useHistory();\n\n  const fetchPlayerCharacters = async () => {\n    try {\n      const response = await fetch(\n        \"http://localhost:7000/characters\"\n      );\n      const charactersData = await response.json();\n\n      updatePlayerCharactersList(charactersData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function rollAD20() {\n    let diceRoll = Math.floor(Math.random() * 20) + 1;\n    return diceRoll;\n  }\n\n  function attackClickHandler(event) {\n    const newPlayerCharacters = [...playerCharacters];\n    const monster = newPlayerCharacters.find(\n      (npc) => npc.characterType === \"NPC\"\n    );\n\n    if (monster._id !== event.target.value) {\n      const roll = rollAD20();\n\n      if (roll >= monster.armorClass) {\n        monster.HP -= 4;\n        alert(`It's a hit! The Beholder takes 4 damage!`);\n\n        if (monster.HP <= 0) {\n          history.push(\"/YouWin\");\n          alert(`You did it! You looted the monster and retrieved the precious goldfish!`);\n        }\n      } else {\n        alert(`You rolled a ${roll} . You missed!`);\n      }\n\n      const turnOverMonster = newPlayerCharacters.shift();\n      updatePlayerCharactersList([...newPlayerCharacters, turnOverMonster]);\n    } else {\n      const playableCharacters = newPlayerCharacters.filter(\n        (pc) => pc.characterType !== \"NPC\"\n      );\n\n      const mathFunc = Math.floor(Math.random() * playableCharacters.length);\n      const characterAttacked = playableCharacters[mathFunc];\n      const roll = rollAD20();\n\n      if (roll >= characterAttacked.armorClass) {\n        characterAttacked.HP -= 8;\n        alert(characterAttacked.name + ` was attacked and hit for 8 damage!`);\n      } else {\n        alert(`Monster rolled a ${roll} . It's a miss!`);\n      }\n      \n\n      if (characterAttacked.HP <= 0) {\n        alert(`Oh no! ` + characterAttacked.name + ` passed out!`);\n\n        const nowWithNoDeadPlayers = newPlayerCharacters.filter(\n          (player) => player._id !== characterAttacked._id\n        );\n\n        const turnOver = nowWithNoDeadPlayers.shift();\n        updatePlayerCharactersList([...nowWithNoDeadPlayers, turnOver]);\n      } else {\n        const turnOverMon = newPlayerCharacters.shift();\n        updatePlayerCharactersList([...newPlayerCharacters, turnOverMon]);\n      }\n    }\n\n    if (\n      playerCharacters.length === 1 &&\n      playerCharacters[0]._id === monster._id\n    ) {\n      alert(\n        \"Oh no! Congratulations on your TPK! You lose Dungeons and Dragons and now have to create new characters and form a new party. Bummer!\"\n      );\n      history.push(\"/YouLose\");\n    }\n  }\n\n  function rollInitClickHandler(event) {\n    const newPlayerCharacters = [...playerCharacters];\n    const playersInited = newPlayerCharacters.map((player) => {\n      player.initiative = rollAD20();\n      onOpenDiceRollModal();\n\n      return player;\n    });\n\n    let modalMessage = \"\";\n\n    playersInited.map((player) => {\n      if (player.initiative === 20) {\n        modalMessage +=\n          player.name +\n          ` rolled a natural ` +\n          player.initiative +\n          `....OH YEAH.....CRIT!` +\n          \".\";\n      } else if (player.initiative === 1) {\n        modalMessage +=\n          player.name +\n          ` rolled a natural ` +\n          player.initiative +\n          `....Oh boy.....AUTOMATIC FAIL! ` +\n          \".\";\n      } else {\n        modalMessage +=\n          player.name + ` rolled a ` + player.initiative + \"        .      \";\n      }\n    });\n\n    setModalContent(modalMessage);\n\n    updatePlayerCharactersList(\n      playersInited.sort((a, b) => b.initiative - a.initiative)\n    );\n  }\n\n  function shoutClickHandler(event) {\n    alert(\n      playerCharacters\n        .find((char) => char._id === event.target.value)\n        .catchphrases.split(\".\")[0]\n    );\n  }\n\n \n\n  useEffect(() => {\n    fetchPlayerCharacters();\n    setModalContent();\n    setOpenDiceModal();\n    setOpenBattle();\n  }, []);\n\n  return (\n    <>\n      <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/tavern\">ADVENTURE</Link>\n      </nav>\n      <div className=\"battle-background\">\n        <div>\n          <br />\n          <img src={d20natone} alt=\"d20natone\" className=\"D20natone-photo\" />\n          <img src={d20} alt=\"d20\" className=\"D20-photo\" />\n          <br />\n          <Modal open={open} onClose={onCloseModal} center>\n            <h2>On your way!</h2>\n            <p\n              classNames={{\n                overlay: \"tavern-overlay\",\n                modal: \"tavern-modal\",\n              }}\n            >\n              You're traveling through the forest....suddenly...you hear a\n              terrifying sound. The blood drains from your party member's faces\n              as you search for the source.\n            </p>\n            <br />\n            <button onClick={onCloseModal} id=\"tavern-button\">\n              OKAY\n            </button>\n          </Modal>\n\n          <button onClick={onOpenBattle}>WHAT'S THAT SOUND?</button>\n          <Modal\n            open={openBattle}\n            onClose={onCloseBattle}\n            center\n            className=\"battle-modal p\"\n          >\n            <h2>Oh no!</h2>\n            <p>\n              A Beholder appears and it's guarding the treasure you so\n              desperately need! There's no getting out of this without a fight.\n              It's time to roll for initiative!\n            </p>\n            <img src={beholder} alt=\"beholder\" />\n            <br />\n            <button onClick={onCloseBattle} id=\"tavern-button\">\n              FIGHT\n            </button>\n          </Modal>\n        </div>\n        <button onClick={rollInitClickHandler}>ROLL INITIATIVE</button>\n        <Modal\n          open={openDiceModal}\n          onClose={onCloseDiceRollModal}\n          center\n          className=\"battle-modal\"\n        >\n          <h1>Initiative Rolls</h1>\n          <br />\n          <br />\n          <p>{modalContent}</p>\n          <button onClick={onCloseDiceRollModal}>OKAY</button>\n        </Modal>\n        <br />\n        <br />\n        <h2 id=\"battle-page-h2\">Characters</h2>\n        <ul>\n          {playerCharacters.map((player) => {\n            return (\n              <li key={player._id} id=\"battle-character-list\">\n                <img src={player.thumbnail} id=\"thumbnail\" />\n                {player.name} <br /> HP: {player.HP} | Armor Class:{\" \"}\n                {player.armorClass} | INIT: {player.initiative}\n                <br />\n                <button value={player._id} onClick={shoutClickHandler}>\n                  SHOUT\n                </button>\n                <button value={player._id} onClick={attackClickHandler}>\n                  ATTACK\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Battle;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js",["88"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Register.js",["89"],"import \"../App.css\";\nimport { Link } from \"react-router-dom\";\nimport { useRef } from 'react';\n\nconst RegisterForm = (props) => {\n    const usernameInput = useRef(null);\n    const passwordInput = useRef(null);\n\n    const registerUser = async (event) => {\n        event.preventDefault();\n        const username = usernameInput.current.value;\n        const password = passwordInput.current.value;\n\n        const body = JSON.stringify({\n            username,\n            password\n        });\n\n        event.currentTarget.reset();\n\n        try {\n            const response = await fetch(\n                \"http://localhost:7000/register\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-type\": \"application/json\"\n                    },\n                    body: body,\n                }\n            );\n            alert('Account created!');\n            props.history.push('/Characters');\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <>\n        <nav className=\"topnav\">\n            <Link to=\"/\">HOME</Link>\n            <Link to=\"/characters\">CHARACTERS</Link>\n            <Link to=\"/createcharacterform\">CREATE</Link>\n            <Link to=\"/battle\">BATTLE</Link>\n            <Link to=\"/login\">LOGIN</Link>\n            <Link to=\"/register\">REGISTER</Link>\n        </nav>\n\n        <div>\n            <h2>Register</h2>\n            <p>\n                Please create a unique username and password to create an account.\n                We suggest passwords be at least 8 characters with letters,\n                numbers, and special characters.\n            </p>\n            <form onSubmit={registerUser} method=\"post\">\n                <label>Username</label>\n                <input type=\"text\" name=\"username\" ref={usernameInput} />\n                <br />\n                <label>Password</label>\n                <input type=\"password\" name=\"password\" ref={passwordInput} />\n                <br />\n                <input type=\"submit\" value=\"REGISTER\" id=\"submit-btn\" />\n            </form>\n        </div>\n        </>\n    );\n};\n\nexport default RegisterForm;","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Login.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":46,"column":13,"nodeType":"96","messageId":"97","endLine":46,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":78,"column":11,"nodeType":"100","endLine":82,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":47,"column":13,"nodeType":"96","messageId":"97","endLine":47,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":23,"column":6,"nodeType":"103","endLine":23,"endColumn":8,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":47,"column":13,"nodeType":"100","endLine":47,"endColumn":42},{"ruleId":"94","severity":1,"message":"95","line":23,"column":15,"nodeType":"96","messageId":"97","endLine":23,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":169,"column":15,"nodeType":"96","messageId":"97","endLine":169,"endColumn":23},{"ruleId":"94","severity":1,"message":"107","line":183,"column":15,"nodeType":"96","messageId":"97","endLine":183,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":267,"column":19,"nodeType":"110","messageId":"111","endLine":267,"endColumn":26},{"ruleId":"105","severity":1,"message":"106","line":271,"column":21,"nodeType":"100","endLine":271,"endColumn":69},{"ruleId":"94","severity":1,"message":"112","line":5,"column":12,"nodeType":"96","messageId":"97","endLine":5,"endColumn":23},{"ruleId":"90","replacedBy":"113"},{"ruleId":"92","replacedBy":"114"},{"ruleId":"108","severity":1,"message":"109","line":118,"column":32,"nodeType":"115","messageId":"116","endLine":118,"endColumn":34},{"ruleId":"105","severity":1,"message":"106","line":235,"column":17,"nodeType":"100","endLine":235,"endColumn":62},{"ruleId":"94","severity":1,"message":"117","line":11,"column":9,"nodeType":"96","messageId":"97","endLine":11,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":22,"column":19,"nodeType":"96","messageId":"97","endLine":22,"endColumn":27},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacter'. Either include it or remove the dependency array.","ArrayExpression",["120"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'okREALLYnoDUPES' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'randomChars' is assigned a value but never used.",["118"],["119"],"ArrowFunctionExpression","expectedInside","'onOpenModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [fetchCharacter]",{"range":"123","text":"124"},[625,627],"[fetchCharacter]"]