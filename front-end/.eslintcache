[{"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js":"1","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js":"2","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js":"3","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js":"4","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js":"5","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GenerateChar.js":"6","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js":"7","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js":"8","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js":"9","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js":"10","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js":"11","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js":"12"},{"size":362,"mtime":1609205093329,"results":"13","hashOfConfig":"14"},{"size":1076,"mtime":1609883460025,"results":"15","hashOfConfig":"14"},{"size":540,"mtime":1609383362658,"results":"16","hashOfConfig":"14"},{"size":7059,"mtime":1609867207840,"results":"17","hashOfConfig":"14"},{"size":7246,"mtime":1609867160878,"results":"18","hashOfConfig":"14"},{"size":1313,"mtime":1609653791999,"results":"19","hashOfConfig":"14"},{"size":2095,"mtime":1609794821032,"results":"20","hashOfConfig":"14"},{"size":4805,"mtime":1609895310259,"results":"21","hashOfConfig":"14"},{"size":665,"mtime":1609616860519,"results":"22","hashOfConfig":"14"},{"size":6398,"mtime":1609899958270,"results":"23","hashOfConfig":"14"},{"size":860,"mtime":1609721182209,"results":"24","hashOfConfig":"14"},{"size":4453,"mtime":1609895652279,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kewybn",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js",[],["59","60"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js",["61","62"],"import { useRef } from 'react';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\n\nconst CreateCharacterForm = (props) => {\n    const nameInput = useRef(null);\n    const pronounsInput = useRef(null);\n    const raceSelect = useRef(null);\n    const characterClassSelect = useRef(null);\n    const hpSelect = useRef(null);\n    const attackSelect = useRef(null);\n    const armorClassSelect = useRef(null);\n    const weaponSelect = useRef(null);\n    const catchphrasesSelect = useRef(null);\n    const backstoryInput = useRef(null);\n\n\n    const createCharacter = async (event) => {\n        event.preventDefault()\n        const name = nameInput.current.value;\n        const pronouns = pronounsInput.current.value;\n        const race = raceSelect.current.value;\n        const characterClass = characterClassSelect.current.value;\n        const hp = 12;\n        const attack = attackSelect.current.value;\n        const armorClass = 15;\n        const weapon = weaponSelect.current.value;\n        const catchphrases = catchphrasesSelect.current.value;\n        const backstory = backstoryInput.current.value;\n\n\n        const body = JSON.stringify({ name, pronouns, race, characterClass, hp, attack, \n            armorClass, weapon, catchphrases, backstory });\n\n        event.currentTarget.reset();\n\n        try {\n            const response = await fetch('http://localhost:7000/characters', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body\n            });\n\n            props.history.push('/Characters');\n            alert(\"Character Created!\")\n        } catch (error) {\n            console.error(error)\n        };\n    }\n\n    return (\n        <>\n        <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n        <div id=\"create-char-form\">\n        <h2 id=\"create-char-h2\">Create New Character</h2>\n        <p>Feel free to play around with different characters and stats.\n        <br />\n        If you want more information on rolling a new character, <a href=\"https://www.instructables.com/Creating-a-DD-5e-Character-for-Beginners/\" target='_blank' id=\"click-here\">click here.</a> \n        </p>\n        <form onSubmit={createCharacter} method=\"post\">\n            <label>Character Name:</label>\n            <input type=\"text\" name=\"name\" ref={nameInput} />\n            <br />\n            <label>Character Pronouns:</label>\n            <input type=\"text\" name=\"pronouns\" ref={pronounsInput} />\n            <br />\n            <label>Race:</label> \n            <select className=\"select\" ref={raceSelect}>\n                <option value=\"Human\">Human</option>\n                <option value=\"Half Elf\">Elf</option>\n                <option value=\"Gnome\">Gnome</option>\n                <option value=\"Half Orc\">Half Orc</option>\n                <option value=\"Tiefling\">Tiefling</option>\n                <option value=\"Aasimar\">Aasimar</option>\n                <option value=\"Dragonborn\">Dragonborn</option>\n                <option value=\"Tabaxi\">Tabaxi</option>\n                <option value=\"Centaur\">Centaur</option>\n                <option value=\"Halfling\">Halfling</option>\n                <option value=\"Halfling\">Dwarf</option>\n            </select>\n            <br />\n            <label>Class:</label>\n             <select className=\"select\" ref={characterClassSelect}>\n                <option value=\"Fighter\">Fighter (Tank)</option>\n                <option value=\"Wizard\">Wizard (DPS)</option>\n                <option value=\"Rogue\">Rogue (stabby stabby)</option>\n                <option value=\"Cleric\">Cleric (Healer)</option>\n                <option value=\"Druid\">Druid</option>\n                <option value=\"Monk\">Monk</option>\n                <option value=\"Paladin\">Paladin</option>\n                <option value=\"Ranger\">Ranger</option>\n                <option value=\"Sorcerer\">Sorcerer</option>\n                <option value=\"Sorcerer\">Warlock</option>\n            </select>\n            <br />\n            <label>HP</label> \n            <select className=\"select\" ref={hpSelect}>\n                <option value=\"Default\">12</option>\n            </select>\n            <br />\n            <label>Attack:</label> \n            <select className=\"select\" ref={attackSelect}>\n                <option value=\"Sword Slash\">Sword Slash</option>\n                <option value=\"Magic Missile\">Magic Missile</option>\n                <option value=\"Druid\">Shillelagh</option>\n                <option value=\"Monk\">Fury of Blows</option>\n                <option value=\"Eldritch Blast\">Eldritch Blast</option>\n                <option value=\"Acid Splash\">Acid Splash</option>\n            </select>\n            <br />\n            <label>Armor Class</label> \n            <select className=\"select\" ref={armorClassSelect}>\n                <option value=\"Default\">15</option>\n            </select>\n            <br />\n            <label>Weapon:</label> \n            <select className=\"select\" ref={weaponSelect}>\n                <option value=\"Greatsword\">Greatsword</option>\n                <option value=\"Wand\">Wand</option>\n                <option value=\"Dagger\">Dagger</option>\n                <option value=\"Longbow\">Longbow</option>\n                <option value=\"Rapier\">Rapier</option>\n                <option value=\"Maul\">Maul</option>\n                <option value=\"Crossbow\">Crossbow</option>\n            </select>\n            <br />\n            <label>Catchphrases:</label> \n            <select className=\"select\" ref={catchphrasesSelect}>\n            <option value=\"Nobody makes me bleed my own blood!\">'Nobody makes me bleed my own blood!'</option>\n                <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">'LEEEEROYYYYY JENKIIIINNNNSSSS!'</option>\n                <option value=\"I attack the darkness!\">'I attack the darkness!'</option>\n                <option value=\"Can't we ever just have a normal field trip?\">'Can't we ever just have a normal field trip?'</option>\n                <option value=\"Screw it, we're basically Gods!\">'Screw it, we're basically Gods!'</option>\n                <option value=\"I’m a lover, not a fighter\">'I’m a lover, not a fighter'</option>\n                <option value=\"Today is a good day to die.\">'Today is a good day to die.'</option>\n                <option value=\"Last name Ever, first name Greatest\">'Last name Ever, first name Greatest'</option>\n                <option value=\"I don't think that's such a good idea, Tommy\">'I don't think that's such a good idea, Tommy'</option>\n            </select>\n            <br />\n            <label>Backstory:</label>\n            <input type=\"textarea\" name=\"backstory\" rows=\"10\" cols=\"30\" ref={backstoryInput} />\n            <br />\n            <input type=\"submit\" value=\"Create Character\" id=\"submit-btn\"/>\n        </form>\n        </div>\n        </>\n    )\n};\nexport default CreateCharacterForm;","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js",["63"],"import { useRef } from 'react';\nimport '../App.css';\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nconst UpdateCharacterForm = (props) => {\n    const updateNameInput = useRef(null);\n    const updatePronounsInput = useRef(null);\n    const updateRaceSelect = useRef(null);\n    const updateCharacterClassSelect = useRef(null);\n    const updateHpSelect = useRef(null);\n    const updateWeaponSelect = useRef(null);\n    const updateAttackSelect = useRef(null);\n    const updateArmorClass = useRef(null);\n    const updateCatchphrasesSelect = useRef(null);\n    const updateBackstory = useRef(null);\n    const characterDetailRouteMatch = useRouteMatch(\"/UpdateCharacterForm/:id\");\n    const charId = characterDetailRouteMatch.params.id;\n\n    const updateCharacter = async (event) => {\n        event.preventDefault()\n        const name = updateNameInput.current.value;\n        const pronouns = updatePronounsInput.current.value;\n        const race = updateRaceSelect.current.value;\n        const characterClass = updateCharacterClassSelect.current.value;\n        const hp = updateHpSelect.current.value;\n        const weapon = updateWeaponSelect.current.value;\n        const attack = updateAttackSelect.current.value;\n        const armorClass = updateArmorClass.current.value;\n        const catchphrases = updateCatchphrasesSelect.current.value;\n        const backstory = updateBackstory.current.value;\n        const body = JSON.stringify({ name, pronouns, race, characterClass, hp, weapon, attack, \n            armorClass, catchphrases, backstory });\n\n\n        event.currentTarget.reset();\n\n        try {\n            const response = await fetch(`http://localhost:7000/characters/${charId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body\n            });\n\n            props.history.push('/Characters');\n\n        } catch (error) {\n            console.error(error)\n        }\n    };\n\n    return (\n        <>\n        <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n            <div className=\"update-background\">\n                <div id=\"update-breadcrumbs\">\n                    <Link to=\"/Characters\">Go Back</Link>\n                </div>\n        <div className=\"heading-with-form\">\n            <h2 id=\"update-char-h2\">Update Character</h2>\n            <form onSubmit={updateCharacter} method=\"post\">\n            <label>Character Name:</label>\n            <input type=\"text\" name=\"name\" ref={updateNameInput} />\n            <br />\n            <label>Character Pronouns:</label>\n            <input type=\"text\" name=\"pronouns\" ref={updatePronounsInput} />\n            <br />\n            <label>Race:</label> \n            <select className=\"select\" ref={updateRaceSelect}>\n                <option value=\"Human\">Human</option>\n                <option value=\"Half Elf\">Elf</option>\n                <option value=\"Gnome\">Gnome</option>\n                <option value=\"Half Orc\">Half Orc</option>\n                <option value=\"Tiefling\">Tiefling</option>\n                <option value=\"Aasimar\">Aasimar</option>\n                <option value=\"Dragonborn\">Dragonborn</option>\n                <option value=\"Tabaxi\">Tabaxi</option>\n                <option value=\"Centaur\">Centaur</option>\n                <option value=\"Halfling\">Halfling</option>\n                <option value=\"Halfling\">Dwarf</option>\n            </select>\n            <br />\n            <label>Class:</label>\n             <select className=\"select\" ref={updateCharacterClassSelect}>\n                <option value=\"Fighter\">Fighter (Tank)</option>\n                <option value=\"Wizard\">Wizard (DPS)</option>\n                <option value=\"Rogue\">Rogue (stabby stabby)</option>\n                <option value=\"Cleric\">Cleric (Healer)</option>\n                <option value=\"Druid\">Druid</option>\n                <option value=\"Monk\">Monk</option>\n                <option value=\"Paladin\">Paladin</option>\n                <option value=\"Ranger\">Ranger</option>\n                <option value=\"Sorcerer\">Sorcerer</option>\n                <option value=\"Sorcerer\">Warlock</option>\n            </select>\n            <br />\n            <label>HP</label> \n            <select className=\"select\" ref={updateHpSelect}>\n                <option value=\"Default\">12</option>\n            </select>\n            <br />\n            <label>Attack:</label> \n            <select className=\"select\" ref={updateAttackSelect}>\n            <option value=\"Sword Slash\">Sword Slash</option>\n                <option value=\"Magic Missile\">Magic Missile</option>\n                <option value=\"Druid\">Shillelagh</option>\n                <option value=\"Monk\">Fury of Blows</option>\n                <option value=\"Eldritch Blast\">Eldritch Blast</option>\n                <option value=\"Acid Splash\">Acid Splash</option>\n            </select>\n            <br />\n            <label>Armor Class</label> \n            <select className=\"select\" ref={updateArmorClass}>\n                <option value=\"Default\">15</option>\n            </select>\n            <br />\n            <label>Weapon:</label> \n            <select className=\"select\" ref={updateWeaponSelect}>\n            <option value=\"Greatsword\">Greatsword</option>\n                <option value=\"Wand\">Wand</option>\n                <option value=\"Dagger\">Dagger</option>\n                <option value=\"Longbow\">Longbow</option>\n                <option value=\"Rapier\">Rapier</option>\n                <option value=\"Maul\">Maul</option>\n                <option value=\"Crossbow\">Crossbow</option>\n            </select>\n            <br />\n            <label>Catchphrases:</label> \n            <select className=\"select\" ref={updateCatchphrasesSelect}>\n                <option value=\"Nobody makes me bleed my own blood!\">'Nobody makes me bleed my own blood!'</option>\n                <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">'LEEEEROYYYYY JENKIIIINNNNSSSS!'</option>\n                <option value=\"I attack the darkness!\">'I attack the darkness!'</option>\n                <option value=\"Can't we ever just have a normal field trip?\">'Can't we ever just have a normal field trip?'</option>\n                <option value=\"Screw it, we're basically Gods!\">'Screw it, we're basically Gods!'</option>\n                <option value=\"I’m a lover, not a fighter\">'I’m a lover, not a fighter'</option>\n                <option value=\"Today is a good day to die.\">'Today is a good day to die.'</option>\n                <option value=\"Last name Ever, first name Greatest\">'Last name Ever, first name Greatest'</option>\n                <option value=\"I don't think that's such a good idea, Tommy\">'I don't think that's such a good idea, Tommy'</option>\n            </select>\n            <br />\n            <label>Backstory:</label>\n            <input type=\"textarea\" name=\"backstory\" ref={updateBackstory} />\n            <br />\n            <input type=\"submit\" value=\"Create Character\" />\n        </form>\n            </div>\n         </div>\n        </>\n    )\n};\n\nexport default UpdateCharacterForm;","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GenerateChar.js",["64"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\n\nfunction GenerateCharComponent(props) {\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch('http://localhost:7000/randomChar');\n      const data = await response.json();\n      setRandomCharacters(data);\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    const randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    const generatedCharacter = randomCharacters[randomIndex];\n\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(generatedCharacter)\n      });\n      console.log(generatedCharacter);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  useEffect(() => { \n    fetchRandomCharacters()\n  }, []);\n\n  return (\n    <div>\n      <h2>Generate a random character for me</h2>\n      <button onClick={handleClick}\n      >Generate</button>\n    </div>\n  )\n}\nexport default GenerateCharComponent;\n\n\n",["65","66"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js",["67","68"],"import '../App.css';\nimport { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nfunction CharacterStats() {\n  const [character, setCharacter] = useState({});\n  const characterDetailRouteMatch = useRouteMatch(\"/Characters/:id\");\n\n  const fetchCharacter = async () => {\n    try {\n        const response = await fetch(`http://localhost:7000/characters/${characterDetailRouteMatch.params.id}`);\n        const data = await response.json();\n        setCharacter(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => { fetchCharacter() }, []);\n\n  return (\n    <>\n    <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n    <div className=\"parchment-background\">\n      <br />\n      <br />\n      <br />\n      <br />\n      <h1 id=\"character-sheet-heading\">{character.name}<br />Character Sheet</h1>\n      <div id=\"character-container\">\n        \n        <div id=\"character-stats-image\">\n        <br />\n        <br />\n        <img src={character.image} />\n        </div>\n      <div id=\"stats-list\">\n        <label>Name:</label> {character.name}\n      <br />\n        <label>Race:</label> {character.race}\n      <br />\n        <label>Pronouns:</label> {character.pronouns}\n      <br />\n        <label>Class:</label> {character.characterClass}\n      <br />\n        <label>HP:</label> {character.HP}\n      <br />\n        <label>Main Weapon:</label> {character.weapon}\n      <br />\n        <label>Main Attack:</label> {character.attack}\n      <br />\n        <label>Armor Class:</label> {character.armorClass}\n      <br />\n        <label>Motto:</label><br /> \"{character.catchphrases}\"\n      <br />\n      <br />\n        <label>Backstory:</label><br /> \"{character.backstory}\"\n        <br />\n      <button>\n      <Link to={`/UpdateCharacterForm/${character._id}`}>EDIT CHARACTER</Link></button>\n      </div>\n    </div>\n    </div>\n    </>\n  )\n}\n\nexport default CharacterStats;","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js",["69","70","71","72"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js",["73"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction GetRandom(props) {\n    const [randomChars, setRandomCharacters] = useState([]);\n  \n    const fetchRandomCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/randomchar');\n        const data = await response.json();\n        setRandomCharacters(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    useEffect(() => { \n        fetchRandomCharacters()\n      }, []);\n\n     \n      return (\n        <div>\n          <h1>Hey</h1>\n\n        </div>\n      )\n      \n\n    }\n\n    export default GetRandom;",["74","75"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js",["76","77","78","79"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js",["80","81","82"],"import '../App.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nfunction Home() {\n    return (\n            <>\n              <nav className=\"topnav\">\n                <Link to=\"/\">HOME</Link>\n                <Link to=\"/characters\">CHARACTERS</Link>\n                <Link to=\"/createcharacterform\">CREATE</Link>\n                <Link to=\"/battle\">BATTLE</Link>\n              </nav>\n            <div className=\"homepage\">\n                    <div id=\"homepage-content\">\n                    <h1 id=\"home-heading\"> Welcome to D&D Encounters</h1>\n                        <p>Create your characters, form your party and get ready for an adventure!</p>\n                            <Link to=\"/characters\"><button>GET STARTED</button></Link>\n                </div>\n            </div>\n            </>\n    )\n}\n\nexport default Home;\n\n\n\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js",["83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":38,"column":19,"nodeType":"90","messageId":"91","endLine":38,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":65,"column":66,"nodeType":"94","endLine":65,"endColumn":180},{"ruleId":"88","severity":1,"message":"89","line":38,"column":19,"nodeType":"90","messageId":"91","endLine":38,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":24,"column":13,"nodeType":"90","messageId":"91","endLine":24,"endColumn":21},{"ruleId":"84","replacedBy":"95"},{"ruleId":"86","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":19,"column":41,"nodeType":"99","endLine":19,"endColumn":43,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":40,"column":9,"nodeType":"94","endLine":40,"endColumn":38},{"ruleId":"88","severity":1,"message":"89","line":68,"column":15,"nodeType":"90","messageId":"91","endLine":68,"endColumn":23},{"ruleId":"88","severity":1,"message":"103","line":78,"column":15,"nodeType":"90","messageId":"91","endLine":78,"endColumn":30},{"ruleId":"104","severity":1,"message":"105","line":126,"column":55,"nodeType":"106","messageId":"107","endLine":126,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":129,"column":19,"nodeType":"94","endLine":129,"endColumn":67},{"ruleId":"88","severity":1,"message":"108","line":5,"column":12,"nodeType":"90","messageId":"91","endLine":5,"endColumn":23},{"ruleId":"84","replacedBy":"109"},{"ruleId":"86","replacedBy":"110"},{"ruleId":"88","severity":1,"message":"111","line":12,"column":12,"nodeType":"90","messageId":"91","endLine":12,"endColumn":22},{"ruleId":"88","severity":1,"message":"112","line":16,"column":11,"nodeType":"90","messageId":"91","endLine":16,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":86,"column":36,"nodeType":"113","messageId":"114","endLine":86,"endColumn":38},{"ruleId":"101","severity":1,"message":"102","line":166,"column":19,"nodeType":"94","endLine":166,"endColumn":64},{"ruleId":"88","severity":1,"message":"115","line":2,"column":27,"nodeType":"90","messageId":"91","endLine":2,"endColumn":33},{"ruleId":"88","severity":1,"message":"116","line":2,"column":35,"nodeType":"90","messageId":"91","endLine":2,"endColumn":40},{"ruleId":"88","severity":1,"message":"117","line":2,"column":42,"nodeType":"90","messageId":"91","endLine":2,"endColumn":48},{"ruleId":"88","severity":1,"message":"112","line":10,"column":11,"nodeType":"90","messageId":"91","endLine":10,"endColumn":22},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["118"],["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacter'. Either include it or remove the dependency array.","ArrayExpression",["120"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'okREALLYnoDUPES' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'randomChars' is assigned a value but never used.",["118"],["119"],"'playerRoll' is assigned a value but never used.","'onOpenModal' is assigned a value but never used.","ArrowFunctionExpression","expectedInside","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [fetchCharacter]",{"range":"123","text":"124"},[608,610],"[fetchCharacter]"]