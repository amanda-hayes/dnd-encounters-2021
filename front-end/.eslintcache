[{"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js":"1","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js":"2","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js":"3","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js":"4","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js":"5","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GenerateChar.js":"6","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js":"7","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js":"8","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js":"9","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js":"10","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js":"11","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js":"12","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js":"13","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js":"14"},{"size":362,"mtime":1609205093329,"results":"15","hashOfConfig":"16"},{"size":1269,"mtime":1609911799974,"results":"17","hashOfConfig":"16"},{"size":540,"mtime":1609383362658,"results":"18","hashOfConfig":"16"},{"size":7102,"mtime":1609903302890,"results":"19","hashOfConfig":"16"},{"size":7246,"mtime":1609867160878,"results":"20","hashOfConfig":"16"},{"size":1313,"mtime":1609653791999,"results":"21","hashOfConfig":"22"},{"size":2095,"mtime":1609794821032,"results":"23","hashOfConfig":"16"},{"size":4805,"mtime":1609895310259,"results":"24","hashOfConfig":"16"},{"size":665,"mtime":1609616860519,"results":"25","hashOfConfig":"22"},{"size":7475,"mtime":1609960676127,"results":"26","hashOfConfig":"16"},{"size":820,"mtime":1609916763586,"results":"27","hashOfConfig":"16"},{"size":6052,"mtime":1609959662558,"results":"28","hashOfConfig":"16"},{"size":1700,"mtime":1609912626618,"results":"29","hashOfConfig":"16"},{"size":245,"mtime":1609911941605,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1qm3j26",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"kewybn",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/reportWebVitals.js",[],["68","69"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/App.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/index.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CreateCharacterForm.js",["70","71"],"import { useRef } from \"react\";\nimport \"../App.css\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateCharacterForm = (props) => {\n  const nameInput = useRef(null);\n  const pronounsInput = useRef(null);\n  const raceSelect = useRef(null);\n  const characterClassSelect = useRef(null);\n  const hpSelect = useRef(null);\n  const attackSelect = useRef(null);\n  const armorClassSelect = useRef(null);\n  const weaponSelect = useRef(null);\n  const catchphrasesSelect = useRef(null);\n  const backstoryInput = useRef(null);\n\n  const createCharacter = async (event) => {\n    event.preventDefault();\n    const name = nameInput.current.value;\n    const pronouns = pronounsInput.current.value;\n    const race = raceSelect.current.value;\n    const characterClass = characterClassSelect.current.value;\n    const hp = 12;\n    const attack = attackSelect.current.value;\n    const armorClass = 15;\n    const weapon = weaponSelect.current.value;\n    const catchphrases = catchphrasesSelect.current.value;\n    const backstory = backstoryInput.current.value;\n\n    const body = JSON.stringify({\n      name,\n      pronouns,\n      race,\n      characterClass,\n      hp,\n      attack,\n      armorClass,\n      weapon,\n      catchphrases,\n      backstory,\n    });\n\n    event.currentTarget.reset();\n\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: body,\n      });\n\n      props.history.push(\"/Characters\");\n      alert(\"Character Created!\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n      <div id=\"create-char-form\">\n        <h2 id=\"create-char-h2\">Create New Character</h2>\n        <p>\n          Feel free to play around with different characters and stats.\n          <br />\n          If you want more information on rolling a new character,{\" \"}\n          <a\n            href=\"https://www.instructables.com/Creating-a-DD-5e-Character-for-Beginners/\"\n            target=\"_blank\"\n            id=\"click-here\"\n          >\n            click here.\n          </a>\n        </p>\n        <form onSubmit={createCharacter} method=\"post\">\n          <label>Character Name:</label>\n          <input type=\"text\" name=\"name\" ref={nameInput} />\n          <br />\n          <label>Character Pronouns:</label>\n          <input type=\"text\" name=\"pronouns\" ref={pronounsInput} />\n          <br />\n          <label>Race:</label>\n          <select className=\"select\" ref={raceSelect}>\n            <option value=\"Human\">Human</option>\n            <option value=\"Half Elf\">Elf</option>\n            <option value=\"Gnome\">Gnome</option>\n            <option value=\"Half Orc\">Half Orc</option>\n            <option value=\"Tiefling\">Tiefling</option>\n            <option value=\"Aasimar\">Aasimar</option>\n            <option value=\"Dragonborn\">Dragonborn</option>\n            <option value=\"Tabaxi\">Tabaxi</option>\n            <option value=\"Centaur\">Centaur</option>\n            <option value=\"Halfling\">Halfling</option>\n            <option value=\"Halfling\">Dwarf</option>\n          </select>\n          <br />\n          <label>Class:</label>\n          <select className=\"select\" ref={characterClassSelect}>\n            <option value=\"Fighter\">Fighter (Tank)</option>\n            <option value=\"Wizard\">Wizard (DPS)</option>\n            <option value=\"Rogue\">Rogue (stabby stabby)</option>\n            <option value=\"Cleric\">Cleric (Healer)</option>\n            <option value=\"Druid\">Druid</option>\n            <option value=\"Monk\">Monk</option>\n            <option value=\"Paladin\">Paladin</option>\n            <option value=\"Ranger\">Ranger</option>\n            <option value=\"Sorcerer\">Sorcerer</option>\n            <option value=\"Sorcerer\">Warlock</option>\n          </select>\n          <br />\n          <label>HP</label>\n          <select className=\"select\" ref={hpSelect}>\n            <option value=\"Default\">12</option>\n          </select>\n          <br />\n          <label>Attack:</label>\n          <select className=\"select\" ref={attackSelect}>\n            <option value=\"Sword Slash\">Sword Slash</option>\n            <option value=\"Magic Missile\">Magic Missile</option>\n            <option value=\"Druid\">Shillelagh</option>\n            <option value=\"Monk\">Fury of Blows</option>\n            <option value=\"Eldritch Blast\">Eldritch Blast</option>\n            <option value=\"Acid Splash\">Acid Splash</option>\n          </select>\n          <br />\n          <label>Armor Class</label>\n          <select className=\"select\" ref={armorClassSelect}>\n            <option value=\"Default\">15</option>\n          </select>\n          <br />\n          <label>Weapon:</label>\n          <select className=\"select\" ref={weaponSelect}>\n            <option value=\"Greatsword\">Greatsword</option>\n            <option value=\"Wand\">Wand</option>\n            <option value=\"Dagger\">Dagger</option>\n            <option value=\"Longbow\">Longbow</option>\n            <option value=\"Rapier\">Rapier</option>\n            <option value=\"Maul\">Maul</option>\n            <option value=\"Crossbow\">Crossbow</option>\n          </select>\n          <br />\n          <label>Catchphrases:</label>\n          <select className=\"select\" ref={catchphrasesSelect}>\n            <option value=\"Nobody makes me bleed my own blood!\">\n              'Nobody makes me bleed my own blood!'\n            </option>\n            <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">\n              'LEEEEROYYYYY JENKIIIINNNNSSSS!'\n            </option>\n            <option value=\"I attack the darkness!\">\n              'I attack the darkness!'\n            </option>\n            <option value=\"Can't we ever just have a normal field trip?\">\n              'Can't we ever just have a normal field trip?'\n            </option>\n            <option value=\"Screw it, we're basically Gods!\">\n              'Screw it, we're basically Gods!'\n            </option>\n            <option value=\"I’m a lover, not a fighter\">\n              'I’m a lover, not a fighter'\n            </option>\n            <option value=\"Today is a good day to die.\">\n              'Today is a good day to die.'\n            </option>\n            <option value=\"Last name Ever, first name Greatest\">\n              'Last name Ever, first name Greatest'\n            </option>\n            <option value=\"I don't think that's such a good idea, Tommy\">\n              'I don't think that's such a good idea, Tommy'\n            </option>\n          </select>\n          <br />\n          <label>Backstory:</label>\n          <input\n            type=\"textarea\"\n            name=\"backstory\"\n            rows=\"10\"\n            cols=\"30\"\n            ref={backstoryInput}\n          />\n          <br />\n          <input type=\"submit\" value=\"Create Character\" id=\"submit-btn\" />\n        </form>\n      </div>\n    </>\n  );\n};\nexport default CreateCharacterForm;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/UpdateCharacterForm.js",["72"],"import { useRef } from 'react';\nimport '../App.css';\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nconst UpdateCharacterForm = (props) => {\n    const updateNameInput = useRef(null);\n    const updatePronounsInput = useRef(null);\n    const updateRaceSelect = useRef(null);\n    const updateCharacterClassSelect = useRef(null);\n    const updateHpSelect = useRef(null);\n    const updateWeaponSelect = useRef(null);\n    const updateAttackSelect = useRef(null);\n    const updateArmorClass = useRef(null);\n    const updateCatchphrasesSelect = useRef(null);\n    const updateBackstory = useRef(null);\n    const characterDetailRouteMatch = useRouteMatch(\"/UpdateCharacterForm/:id\");\n    const charId = characterDetailRouteMatch.params.id;\n\n    const updateCharacter = async (event) => {\n        event.preventDefault()\n        const name = updateNameInput.current.value;\n        const pronouns = updatePronounsInput.current.value;\n        const race = updateRaceSelect.current.value;\n        const characterClass = updateCharacterClassSelect.current.value;\n        const hp = updateHpSelect.current.value;\n        const weapon = updateWeaponSelect.current.value;\n        const attack = updateAttackSelect.current.value;\n        const armorClass = updateArmorClass.current.value;\n        const catchphrases = updateCatchphrasesSelect.current.value;\n        const backstory = updateBackstory.current.value;\n        const body = JSON.stringify({ name, pronouns, race, characterClass, hp, weapon, attack, \n            armorClass, catchphrases, backstory });\n\n\n        event.currentTarget.reset();\n\n        try {\n            const response = await fetch(`http://localhost:7000/characters/${charId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: body\n            });\n\n            props.history.push('/Characters');\n\n        } catch (error) {\n            console.error(error)\n        }\n    };\n\n    return (\n        <>\n        <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n            <div className=\"update-background\">\n                <div id=\"update-breadcrumbs\">\n                    <Link to=\"/Characters\">Go Back</Link>\n                </div>\n        <div className=\"heading-with-form\">\n            <h2 id=\"update-char-h2\">Update Character</h2>\n            <form onSubmit={updateCharacter} method=\"post\">\n            <label>Character Name:</label>\n            <input type=\"text\" name=\"name\" ref={updateNameInput} />\n            <br />\n            <label>Character Pronouns:</label>\n            <input type=\"text\" name=\"pronouns\" ref={updatePronounsInput} />\n            <br />\n            <label>Race:</label> \n            <select className=\"select\" ref={updateRaceSelect}>\n                <option value=\"Human\">Human</option>\n                <option value=\"Half Elf\">Elf</option>\n                <option value=\"Gnome\">Gnome</option>\n                <option value=\"Half Orc\">Half Orc</option>\n                <option value=\"Tiefling\">Tiefling</option>\n                <option value=\"Aasimar\">Aasimar</option>\n                <option value=\"Dragonborn\">Dragonborn</option>\n                <option value=\"Tabaxi\">Tabaxi</option>\n                <option value=\"Centaur\">Centaur</option>\n                <option value=\"Halfling\">Halfling</option>\n                <option value=\"Halfling\">Dwarf</option>\n            </select>\n            <br />\n            <label>Class:</label>\n             <select className=\"select\" ref={updateCharacterClassSelect}>\n                <option value=\"Fighter\">Fighter (Tank)</option>\n                <option value=\"Wizard\">Wizard (DPS)</option>\n                <option value=\"Rogue\">Rogue (stabby stabby)</option>\n                <option value=\"Cleric\">Cleric (Healer)</option>\n                <option value=\"Druid\">Druid</option>\n                <option value=\"Monk\">Monk</option>\n                <option value=\"Paladin\">Paladin</option>\n                <option value=\"Ranger\">Ranger</option>\n                <option value=\"Sorcerer\">Sorcerer</option>\n                <option value=\"Sorcerer\">Warlock</option>\n            </select>\n            <br />\n            <label>HP</label> \n            <select className=\"select\" ref={updateHpSelect}>\n                <option value=\"Default\">12</option>\n            </select>\n            <br />\n            <label>Attack:</label> \n            <select className=\"select\" ref={updateAttackSelect}>\n            <option value=\"Sword Slash\">Sword Slash</option>\n                <option value=\"Magic Missile\">Magic Missile</option>\n                <option value=\"Druid\">Shillelagh</option>\n                <option value=\"Monk\">Fury of Blows</option>\n                <option value=\"Eldritch Blast\">Eldritch Blast</option>\n                <option value=\"Acid Splash\">Acid Splash</option>\n            </select>\n            <br />\n            <label>Armor Class</label> \n            <select className=\"select\" ref={updateArmorClass}>\n                <option value=\"Default\">15</option>\n            </select>\n            <br />\n            <label>Weapon:</label> \n            <select className=\"select\" ref={updateWeaponSelect}>\n            <option value=\"Greatsword\">Greatsword</option>\n                <option value=\"Wand\">Wand</option>\n                <option value=\"Dagger\">Dagger</option>\n                <option value=\"Longbow\">Longbow</option>\n                <option value=\"Rapier\">Rapier</option>\n                <option value=\"Maul\">Maul</option>\n                <option value=\"Crossbow\">Crossbow</option>\n            </select>\n            <br />\n            <label>Catchphrases:</label> \n            <select className=\"select\" ref={updateCatchphrasesSelect}>\n                <option value=\"Nobody makes me bleed my own blood!\">'Nobody makes me bleed my own blood!'</option>\n                <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">'LEEEEROYYYYY JENKIIIINNNNSSSS!'</option>\n                <option value=\"I attack the darkness!\">'I attack the darkness!'</option>\n                <option value=\"Can't we ever just have a normal field trip?\">'Can't we ever just have a normal field trip?'</option>\n                <option value=\"Screw it, we're basically Gods!\">'Screw it, we're basically Gods!'</option>\n                <option value=\"I’m a lover, not a fighter\">'I’m a lover, not a fighter'</option>\n                <option value=\"Today is a good day to die.\">'Today is a good day to die.'</option>\n                <option value=\"Last name Ever, first name Greatest\">'Last name Ever, first name Greatest'</option>\n                <option value=\"I don't think that's such a good idea, Tommy\">'I don't think that's such a good idea, Tommy'</option>\n            </select>\n            <br />\n            <label>Backstory:</label>\n            <input type=\"textarea\" name=\"backstory\" ref={updateBackstory} />\n            <br />\n            <input type=\"submit\" value=\"Create Character\" />\n        </form>\n            </div>\n         </div>\n        </>\n    )\n};\n\nexport default UpdateCharacterForm;","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GenerateChar.js",["73"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\n\nfunction GenerateCharComponent(props) {\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch('http://localhost:7000/randomChar');\n      const data = await response.json();\n      setRandomCharacters(data);\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    const randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    const generatedCharacter = randomCharacters[randomIndex];\n\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(generatedCharacter)\n      });\n      console.log(generatedCharacter);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  useEffect(() => { \n    fetchRandomCharacters()\n  }, []);\n\n  return (\n    <div>\n      <h2>Generate a random character for me</h2>\n      <button onClick={handleClick}\n      >Generate</button>\n    </div>\n  )\n}\nexport default GenerateCharComponent;\n\n\n",["74","75"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/CharDetails.js",["76","77"],"import '../App.css';\nimport { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nfunction CharacterStats() {\n  const [character, setCharacter] = useState({});\n  const characterDetailRouteMatch = useRouteMatch(\"/Characters/:id\");\n\n  const fetchCharacter = async () => {\n    try {\n        const response = await fetch(`http://localhost:7000/characters/${characterDetailRouteMatch.params.id}`);\n        const data = await response.json();\n        setCharacter(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => { fetchCharacter() }, []);\n\n  return (\n    <>\n    <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n    <div className=\"parchment-background\">\n      <br />\n      <br />\n      <br />\n      <br />\n      <h1 id=\"character-sheet-heading\">{character.name}<br />Character Sheet</h1>\n      <div id=\"character-container\">\n        \n        <div id=\"character-stats-image\">\n        <br />\n        <br />\n        <img src={character.image} />\n        </div>\n      <div id=\"stats-list\">\n        <label>Name:</label> {character.name}\n      <br />\n        <label>Race:</label> {character.race}\n      <br />\n        <label>Pronouns:</label> {character.pronouns}\n      <br />\n        <label>Class:</label> {character.characterClass}\n      <br />\n        <label>HP:</label> {character.HP}\n      <br />\n        <label>Main Weapon:</label> {character.weapon}\n      <br />\n        <label>Main Attack:</label> {character.attack}\n      <br />\n        <label>Armor Class:</label> {character.armorClass}\n      <br />\n        <label>Motto:</label><br /> \"{character.catchphrases}\"\n      <br />\n      <br />\n        <label>Backstory:</label><br /> \"{character.backstory}\"\n        <br />\n      <button>\n      <Link to={`/UpdateCharacterForm/${character._id}`}>EDIT CHARACTER</Link></button>\n      </div>\n    </div>\n    </div>\n    </>\n  )\n}\n\nexport default CharacterStats;","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Characters.js",["78","79","80","81"],"import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction AllCharPage() {\n  const [characters, setCharacters] = useState([]);\n\n  const fetchCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/characters\");\n      const data = await response.json();\n      setCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const deleteCharacter = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:7000/characters/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      });\n\n      const data = await response.json();\n      const filteredCharacters = characters.filter(\n        (character) => character._id !== data._id\n      );\n      setCharacters(filteredCharacters);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // GENERATE A NEW CHARACTER\n\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:7000/randomChar\");\n      const data = await response.json();\n\n      setRandomCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    if (randomCharacters.length === 0) {\n      return;\n    }\n    let randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    let generatedCharacter = randomCharacters[randomIndex];\n\n    console.log(\"char dupe: \" + characters.includes(generatedCharacter.name));\n    console.log(generatedCharacter.name);\n    try {\n      if (characters.includes(generatedCharacter.name)) {\n        const filterDupe = randomCharacters.filter(rando => rando.name !== generatedCharacter.name);\n\n        setRandomCharacters(filterDupe);\n        generateChar();\n      } else {\n        const response = await fetch(\"http://localhost:7000/characters\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: JSON.stringify(generatedCharacter),\n        });\n\n        const newRandomCharList = randomCharacters.filter(rando => rando.name !== generatedCharacter.name);\n        setRandomCharacters(newRandomCharList);\n        const okREALLYnoDUPES = [...characters]; \n\n        setCharacters([...characters, generatedCharacter]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  useEffect(() => {\n    fetchCharacters();\n    fetchRandomCharacters();\n  }, []);\n\n  return (\n    <>\n    <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n    <div className=\"character-background\">\n      <div className=\"header-style\">\n      <h1 className=\"my-characters-heading\">My Adventuring Party</h1>\n      <p>View and manage all your characters, or create a new one.</p>\n      <div>\n        Create a New Character\n\n        <Link to=\"/CreateCharacterForm\">\n          <button>CREATE</button>\n        </Link>\n\n        Generate a random character for me\n        <button onClick={handleClick}>GENERATE</button>\n      </div>\n      </div>\n      <br />\n      <br />\n      <div id=\"character-list\">\n        <ul>\n          <>\n            {characters.map((character) => {\n              if (character.characterType === \"NPC\"){ return; }\n              return (\n                <li key={character._id}>\n                  <img src={character.thumbnail} id=\"thumbnail\" />\n                  {character.name} <br />{character.race} |{\" \"}\n                  {character.characterClass}\n                  <br />\n                  <button type=\"button\">\n                    <Link to={`/characters/${character._id}`}>VIEW</Link>\n                  </button>\n                  <button>\n                    <Link to={`/UpdateCharacterForm/${character._id}`}>\n                      EDIT\n                    </Link>\n                  </button>\n                  <button\n                    onClick={(event) => {\n                      deleteCharacter(character._id);\n                    }}\n                  >\n                    DELETE{\" \"}\n                  </button>\n                </li>\n              );\n            })}\n          </>\n        </ul>\n        </div>\n            <div>\n              <br />\n              <br />\n              <br />\n              <br />\n              <h1>Ready to start adventuring?</h1>\n              <Link to=\"/Tavern\">\n                <button>Let's Go!</button>\n              </Link>\n            </div>\n    </div>\n    </>\n  );\n}\n\nexport default AllCharPage;\n","/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/GetRandom.js",["82"],"import { useState, useEffect } from 'react';\nimport '../App.css';\n\nfunction GetRandom(props) {\n    const [randomChars, setRandomCharacters] = useState([]);\n  \n    const fetchRandomCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/randomchar');\n        const data = await response.json();\n        setRandomCharacters(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    useEffect(() => { \n        fetchRandomCharacters()\n      }, []);\n\n     \n      return (\n        <div>\n          <h1>Hey</h1>\n\n        </div>\n      )\n      \n\n    }\n\n    export default GetRandom;",["83","84"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Battle.js",["85","86"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Home.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/Tavern.js",["87","88"],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouWin.js",[],"/Users/amandahayes/SEIR/dnd-encounters-2021/front-end/src/Components/YouLose.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":46,"column":13,"nodeType":"95","messageId":"96","endLine":46,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":75,"column":11,"nodeType":"99","endLine":79,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":38,"column":19,"nodeType":"95","messageId":"96","endLine":38,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":24,"column":13,"nodeType":"95","messageId":"96","endLine":24,"endColumn":21},{"ruleId":"89","replacedBy":"100"},{"ruleId":"91","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":19,"column":41,"nodeType":"104","endLine":19,"endColumn":43,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":40,"column":9,"nodeType":"99","endLine":40,"endColumn":38},{"ruleId":"93","severity":1,"message":"94","line":68,"column":15,"nodeType":"95","messageId":"96","endLine":68,"endColumn":23},{"ruleId":"93","severity":1,"message":"108","line":78,"column":15,"nodeType":"95","messageId":"96","endLine":78,"endColumn":30},{"ruleId":"109","severity":1,"message":"110","line":126,"column":55,"nodeType":"111","messageId":"112","endLine":126,"endColumn":62},{"ruleId":"106","severity":1,"message":"107","line":129,"column":19,"nodeType":"99","endLine":129,"endColumn":67},{"ruleId":"93","severity":1,"message":"113","line":5,"column":12,"nodeType":"95","messageId":"96","endLine":5,"endColumn":23},{"ruleId":"89","replacedBy":"114"},{"ruleId":"91","replacedBy":"115"},{"ruleId":"109","severity":1,"message":"110","line":107,"column":32,"nodeType":"116","messageId":"117","endLine":107,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":221,"column":17,"nodeType":"99","endLine":221,"endColumn":62},{"ruleId":"93","severity":1,"message":"118","line":13,"column":11,"nodeType":"95","messageId":"96","endLine":13,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":95,"column":13,"nodeType":"99","endLine":95,"endColumn":60},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["119"],["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacter'. Either include it or remove the dependency array.","ArrayExpression",["121"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'okREALLYnoDUPES' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'randomChars' is assigned a value but never used.",["119"],["120"],"ArrowFunctionExpression","expectedInside","'onOpenModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [fetchCharacter]",{"range":"124","text":"125"},[608,610],"[fetchCharacter]"]