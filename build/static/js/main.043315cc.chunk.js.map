{"version":3,"sources":["Components/Characters.js","Components/CharDetails.js","Components/UpdateCharacterForm.js","images/aasimar.png","images/assassin.png","images/dwarf.png","images/elf.png","images/fighter.png","images/orc.png","images/ranger.png","images/rogue.png","images/sorcerer.png","Components/CreateCharacterForm.js","images/wizardbook.png","Components/Tavern.js","images/d20.png","beholder.jpeg","images/d20natone.png","Components/Battle.js","Components/Home.js","images/wizard.png","Components/YouWin.js","Components/YouLose.js","Components/Register.js","Components/Login.js","Components/RefreshToken.js","App.js","reportWebVitals.js","index.js"],"names":["AllCharPage","useState","characters","setCharacters","token","setToken","setIsLoggedIn","showModal","setShowModal","handleClose","handleShow","fetchCharacters","a","fetch","response","json","data","console","error","deleteCharacter","id","method","headers","Authorization","alert","filteredCharacters","filter","character","_id","log","randomCharacters","setRandomCharacters","fetchRandomCharacters","generateChar","length","randomIndex","Math","round","random","generatedCharacter","includes","name","filterDupe","rando","body","JSON","stringify","newRandomCharList","useEffect","window","localStorage","getItem","className","to","Button","style","backgroundColor","borderColor","onClick","e","preventDefault","map","characterType","Card","Img","variant","src","image","Body","Title","color","Text","race","characterClass","Modal","show","onHide","Header","Footer","CharacterStats","props","setCharacter","characterDetailRouteMatch","useRouteMatch","fetchCharacter","params","Image","thumbnail","pronouns","HP","weapon","attack","armorClass","catchphrases","backstory","strength","dexterity","constitution","intelligence","wisdom","charisma","UpdateCharacterForm","updateNameInput","useRef","updatePronounsInput","updateRaceSelect","updateCharacterClassSelect","updateHPSelect","updateWeaponSelect","updateAttackSelect","updateArmorClass","updateCatchphrasesSelect","updateBackstory","strengthInput","dexterityInput","constitutionInput","intelligenceInput","wisdomInput","charismaInput","charId","updateCharacter","event","current","value","createdBy","history","push","onSubmit","type","ref","CreateCharacterForm","avatarImage","setAvatar","nameInput","pronounsInput","raceSelect","characterClassSelect","hpSelect","attackSelect","armorClassSelect","weaponSelect","catchphrasesSelect","backstoryTextarea","createCharacter","setImagePath","imageName","hp","rollBaseD6","floor","href","target","cols","rows","checked","onChange","aasimar","alt","dwarf","elf","fighter","rogue","orc","sorcerer","ranger","assassin","rolls","i","result","Tavern","openAccept","setOpenAccept","onOpenAcceptModal","openWizChat","setOpenWizChat","openQuestChat","setOpenQuestChat","onOpenQuestChat","ModalHeader","ModalTitle","ModalBody","ModalFooter","wizardbook","Battle","playerCharacters","updatePlayerCharactersList","open","setOpen","openBattle","setOpenBattle","openDiceModal","setOpenDiceModal","modalContent","setModalContent","onCloseModal","onCloseBattle","onCloseDiceRollModal","useHistory","chooseOneMonster","monsters","mon","monstaaaaa","fetchPlayerCharacters","charactersData","rollAD20","attackClickHandler","newPlayerCharacters","monster","find","npc","generatedMonster","roll","turnOverMonster","shift","playableCharacters","pc","characterAttacked","nowWithNoDeadPlayers","player","turnOver","turnOverMon","shoutClickHandler","char","split","d20natone","d20","onClose","center","playersInited","initiative","modalMessage","sort","b","width","Home","YouWin","wizard","YouLose","RegisterForm","usernameInput","passwordInput","confirmPasswordInput","register","username","password","confirmPassword","currentTarget","reset","Form","LoginForm","clientId","login","userLogin","buttonText","onSuccess","res","profileObj","refreshTiming","tokenObj","expires_in","refreshToken","reloadAuthResponse","newAuthRes","id_token","setTimeout","refreshTokenSetup","onFailure","cookiePolicy","marginTop","isSignedIn","onLogoutSuccess","withRouter","loggedIn","setUsername","pass","setItem","Navbar","bg","expand","paddingLeft","Brand","Toggle","aria-controls","Collapse","Nav","Link","clear","path","exact","component","Register","render","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"+RA0SeA,MArSf,WAAwB,IAAD,EACeC,mBAAS,IADxB,mBACdC,EADc,KACFC,EADE,OAEKF,mBAAS,IAFd,mBAEdG,EAFc,KAEPC,EAFO,OAGeJ,mBAAS,IAHxB,mBAGFK,GAHE,aAIaL,mBAAS,EAAC,IAJvB,mBAIdM,EAJc,KAIHC,EAJG,KAKfC,EAAc,kBAAMD,GAAa,IACjCE,EAAa,kBAAMF,GAAa,IAuBhCG,EAAe,uCAAG,8BAAAC,EAAA,+EAEGC,MACrB,4DAHkB,cAEdC,EAFc,gBAKDA,EAASC,OALR,OAKdC,EALc,OAMpBb,EAAca,GANM,kDAQpBC,QAAQC,MAAR,MARoB,0DAAH,qDAgBfC,EAAe,uCAAG,WAAOC,GAAP,mBAAAR,EAAA,+EAEGC,MAAM,4DAAD,OACkCO,GAC5D,CACEC,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAenB,KARD,UAEdU,EAFc,OAYfV,EAZe,yCAaXoB,MAAM,kCAbK,uBAeDV,EAASC,OAfR,OAedC,EAfc,OAgBdS,EAAqBvB,EAAWwB,QACpC,SAACC,GAAD,OAAeA,EAAUC,MAAQZ,EAAKY,OAExCzB,EAAcsB,GAnBM,kDAqBpBR,QAAQY,IAAR,MArBoB,0DAAH,sDA7CA,EA0E2B5B,mBAAS,IA1EpC,mBA0Ed6B,EA1Ec,KA0EIC,EA1EJ,KA4EfC,EAAqB,uCAAG,8BAAApB,EAAA,+EAEHC,MACrB,4DAHwB,cAEpBC,EAFoB,gBAKPA,EAASC,OALF,OAKpBC,EALoB,OAO1Be,EAAoBf,GAPM,kDAS1BC,QAAQC,MAAR,MAT0B,0DAAH,qDAarBe,EAAY,uCAAG,kCAAArB,EAAA,yDACa,IAA5BkB,EAAiBI,OADF,oDAIfC,EAAcC,KAAKC,MAAMD,KAAKE,UAAYR,EAAiBI,OAAS,IACpEK,EAAqBT,EAAiBK,GAE1ClB,QAAQY,IAAI,cAAgB3B,EAAWsC,SAASD,EAAmBE,OACnExB,QAAQY,IAAIU,EAAmBE,MARZ,UAUbvC,EAAWsC,SAASD,EAAmBE,MAV1B,iBAWTC,EAAaZ,EAAiBJ,QAClC,SAACiB,GAAD,OAAWA,EAAMF,OAASF,EAAmBE,QAE/CV,EAAoBW,GACpBT,IAfe,yCAiBQpB,MACrB,2DACA,CACEQ,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAenB,GAEjBwC,KAAMC,KAAKC,UAAUP,KAzBV,kBA4BVnC,EA5BU,0CA6BNoB,MAAM,oCA7BA,QA+BTuB,EAAoBjB,EAAiBJ,QACzC,SAACiB,GAAD,OAAWA,EAAMF,OAASF,EAAmBE,QAE/CV,EAAoBgB,GACpB5C,EAAc,GAAD,mBAAKD,GAAL,CAAiBqC,KAnCf,0DAsCjBtB,QAAQY,IAAR,MAtCiB,0DAAH,qDA6DlB,OAVAmB,qBAAU,WACRrC,IACAL,IACAE,IACAwB,IACIiB,OAAOC,aAAaC,QAAQ,UAC9B9C,EAAS4C,OAAOC,aAAaC,QAAQ,YAEtC,IAGD,mCACE,sBAAKC,UAAU,uBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,wBAAd,kCACA,mBAAGhC,GAAG,kBAAN,uEAGA,sBAAKA,GAAG,eAAR,UACE,cAAC,IAAD,CAAMiC,GAAG,uBAAT,SACE,cAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBAHjB,sBAUF,cAACH,EAAA,EAAD,CACEI,QAxCZ,SAAqBC,GACnBA,EAAEC,iBACF3B,KAuCUsB,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBAJjB,sBASA,mBAAGrC,GAAG,kBAAN,2EAKJ,sBAAKA,GAAG,iBAAR,UACE,6BACE,mCACGlB,EAAW2D,KAAI,SAAClC,GACf,GAAgC,QAA5BA,EAAUmC,cAGd,OACE,6BACE,eAACC,EAAA,EAAD,CAAMR,MAAO,CAAEC,gBAAiB,kBAAhC,UACE,cAACO,EAAA,EAAKC,IAAN,CACEC,QAAQ,MACRC,IAAKvC,EAAUwC,MACf/C,GAAG,YACHgC,UAAU,4BAEZ,eAACW,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,CAAYd,MAAO,CAAEe,MAAO,SAA5B,SACG3C,EAAUc,OAEb,eAACsB,EAAA,EAAKQ,KAAN,CAAWhB,MAAO,CAAEe,MAAO,SAA3B,UACG3C,EAAU6C,KADb,MACsB7C,EAAU8C,kBAEhC,cAACnB,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBAHjB,SAME,cAAC,IAAD,CACEJ,GAAE,sBAAiB1B,EAAUC,KAC7B2B,MAAO,CAAEe,MAAO,SAFlB,oBAOF,cAAChB,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBAHjB,SAME,qBAAKrC,GAAG,OAAR,SACE,cAAC,IAAD,CACEiC,GAAE,+BAA0B1B,EAAUC,KACtC2B,MAAO,CAAEe,MAAO,SAFlB,sBAQJ,cAAChB,EAAA,EAAD,CACEW,QAAQ,UACRV,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBAEfC,QAAShD,EANX,oBAUA,eAACgE,EAAA,EAAD,CAAOC,KAAMpE,EAAWqE,OAAQnE,EAAhC,UACE,cAACiE,EAAA,EAAMG,OAAP,UACE,cAACH,EAAA,EAAML,MAAP,iCAEF,cAACK,EAAA,EAAMN,KAAP,8DAGA,eAACM,EAAA,EAAMI,OAAP,WACE,cAACxB,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASjD,EAArC,mBAGA,cAAC6C,EAAA,EAAD,CACEW,QAAQ,UACRP,QAAS,WACPvC,EAAgBQ,EAAUC,KAC1BnB,KAJJ,iCAhEDkB,EAAUC,YAkF3B,oBAAIR,GAAG,QAAP,yCACA,eAAC,IAAD,CAAMiC,GAAG,UAAT,UACE,cAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBAHjB,uBAQA,uBACA,mC,QClMGsB,MA3Ff,SAAwBC,GAAQ,IAAD,EACK/E,mBAAS,IADd,mBACtB0B,EADsB,KACXsD,EADW,KAEvBC,EAA4BC,YAAc,mBAFnB,EAGHlF,mBAAS,IAHN,mBAGfI,GAHe,WAKvB+E,EAAc,uCAAG,8BAAAxE,EAAA,+EAEIC,MAAM,4DAAD,OACkCqE,EAA0BG,OAAOjE,KAH5E,cAEbN,EAFa,gBAKAA,EAASC,OALT,OAKbC,EALa,OAMnBiE,EAAajE,GANM,kDAQnBC,QAAQC,MAAR,MARmB,0DAAH,qDAmBpB,OAPA8B,qBAAU,WACRoC,IACInC,OAAOC,aAAaC,QAAQ,UAC9B9C,EAAS4C,OAAOC,aAAaC,QAAQ,YAEtC,IAGD,mCACE,sBAAKC,UAAU,uBAAf,UACE,uBACA,qBAAIhC,GAAG,kBAAP,UACGO,EAAUc,KADb,KAEE,uBAFF,qBAKA,sBAAKrB,GAAG,sBAAR,UACE,uBACA,qBAAKA,GAAG,mBAAR,SACE,cAACkE,EAAA,EAAD,CAAOpB,IAAKvC,EAAUwC,MAAOoB,WAAS,SAG1C,uBACA,sBAAKnE,GAAG,aAAR,UACE,0CADF,IACwBO,EAAUc,KAChC,uBACA,0CAHF,IAGwBd,EAAU6C,KAChC,uBACA,8CALF,IAK4B7C,EAAU6D,SACpC,uBACA,2CAPF,IAOyB7D,EAAU8C,eACjC,uBACA,wCATF,IASsB9C,EAAU8D,GAC9B,uBACA,iDAXF,IAW+B9D,EAAU+D,OACvC,uBACA,iDAbF,IAa+B/D,EAAUgE,OACvC,uBACA,iDAfF,IAe+BhE,EAAUiE,WACvC,uBACA,2CACA,uBAlBF,IAkBUjE,EAAUkE,aAlBpB,IAmBE,uBACA,uBACA,+CACA,uBAtBF,IAsBUlE,EAAUmE,UAtBpB,IAuBE,uBACA,8CAxBF,IAwB4BnE,EAAUoE,SACpC,uBACA,+CA1BF,IA0B6BpE,EAAUqE,UACrC,uBACA,iDA5BF,IA4B+BrE,EAAUsE,aACvC,uBACA,kDA9BF,IA8BgCtE,EAAUuE,aACxC,uBACA,2CAhCF,IAgCyBvE,EAAUwE,OACjC,uBACA,8CAlCF,IAkC4BxE,EAAUyE,SACpC,uBACA,uBACA,cAAC9C,EAAA,EAAD,CAAQC,MAAO,CAAEC,gBAAiB,kBAAlC,SACE,cAAC,IAAD,CACEH,GAAE,+BAA0B1B,EAAUC,KACtC2B,MAAO,CAAEe,MAAO,SAFlB,uCC6HG+B,EA5Ma,SAACrB,GAC3B,IAAMsB,EAAkBC,iBAAO,MACzBC,EAAsBD,iBAAO,MAC7BE,EAAmBF,iBAAO,MAC1BG,EAA6BH,iBAAO,MACpCI,EAAiBJ,iBAAO,MACxBK,EAAqBL,iBAAO,MAC5BM,EAAqBN,iBAAO,MAC5BO,EAAmBP,iBAAO,MAC1BQ,EAA2BR,iBAAO,MAClCS,EAAkBT,iBAAO,MACzBU,EAAgBV,iBAAO,MACvBW,EAAiBX,iBAAO,MACxBY,EAAoBZ,iBAAO,MAC3Ba,EAAoBb,iBAAO,MAC3Bc,EAAcd,iBAAO,MACrBe,EAAgBf,iBAAO,MAEvBgB,EAD4BpC,YAAc,4BACPE,OAAOjE,GAI1CoG,EAAe,uCAAG,WAAOC,GAAP,qDAAA7G,EAAA,6DACtB6G,EAAM7D,iBACAnB,EAAO6D,EAAgBoB,QAAQC,MAC/BnD,EAAOiC,EAAiBiB,QAAQC,MAChClD,EAAiBiC,EAA2BgB,QAAQC,MACpDnC,EAAWgB,EAAoBkB,QAAQC,MACvClC,EAAKkB,EAAee,QAAQC,MAC5BjC,EAASkB,EAAmBc,QAAQC,MACpChC,EAASkB,EAAmBa,QAAQC,MACpC/B,EAAakB,EAAiBY,QAAQC,MACtC9B,EAAekB,EAAyBW,QAAQC,MAChD7B,EAAYkB,EAAgBU,QAAQC,MACpC5B,EAAWkB,EAAcS,QAAQC,MACjC3B,EAAYkB,EAAeQ,QAAQC,MACnC1B,EAAekB,EAAkBO,QAAQC,MACzCzB,EAAekB,EAAkBM,QAAQC,MACzCxB,EAASkB,EAAYK,QAAQC,MAC7BvB,EAAWkB,EAAcI,QAAQC,MACjCC,EAAY3E,OAAOC,aAAaC,QAAQ,mBAExCP,EAAOC,KAAKC,UAAU,CAC1BL,OACA+B,OACAC,iBACAe,WACAC,KACAC,SACAC,SACAC,aACAC,eACAC,YACAC,WACAC,YACAC,eACAC,eACAC,SACAC,WACAwB,cAEF3G,QAAQY,IAAIe,GAvCU,oBA2CG/B,MAAM,4DAAD,OACkC0G,GAC5D,CACElG,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBsB,KAAMA,IAlDU,eA2Cd9B,EA3Cc,iBAqDDA,EAASC,OArDR,QAqDdC,EArDc,OAsDpBC,QAAQY,IAAIb,GACZgE,EAAM6C,QAAQC,KAAK,eAvDC,mDAyDpB7G,QAAQC,MAAR,MAzDoB,2DAAH,sDA6DrB,OACE,mCACE,sBAAKkC,UAAU,oBAAf,UACE,cAAC,IAAD,CAAMC,GAAG,cAAT,qBACA,sBAAKD,UAAU,oBAAf,UACE,oBAAIhC,GAAG,iBAAP,8BACA,uBAAM2G,SAAUP,EAAhB,UACE,oDACA,uBAAOQ,KAAK,OAAOvF,KAAK,OAAOwF,IAAK3B,IACpC,uBACA,wDACA,uBAAO0B,KAAK,OAAOvF,KAAK,WAAWwF,IAAKzB,IACxC,uBACA,0CACA,yBAAQpD,UAAU,SAAS6E,IAAKxB,EAAhC,UACE,wBAAQkB,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBAEF,uBACA,2CACA,yBAAQvE,UAAU,SAAS6E,IAAKvB,EAAhC,UACE,wBAAQiB,MAAM,UAAd,4BACA,wBAAQA,MAAM,SAAd,0BACA,wBAAQA,MAAM,QAAd,mCACA,wBAAQA,MAAM,SAAd,6BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,wBAEF,uBACA,uCACA,wBAAQvE,UAAU,SAAS6E,IAAKtB,EAAhC,SACE,wBAAQgB,MAAM,KAAd,kBAEF,uBACA,4CACA,yBAAQvE,UAAU,SAAS6E,IAAKpB,EAAhC,UACE,wBAAQc,MAAM,cAAd,yBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,QAAd,wBACA,wBAAQA,MAAM,OAAd,2BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,cAAd,4BAEF,uBACA,gDACA,wBAAQvE,UAAU,SAAS6E,IAAKnB,EAAhC,SACE,wBAAQa,MAAM,KAAd,kBAEF,uBACA,4CACA,yBAAQvE,UAAU,SAAS6E,IAAKrB,EAAhC,UACE,wBAAQe,MAAM,aAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,yBAEF,uBACA,kDACA,yBAAQvE,UAAU,SAAS6E,IAAKlB,EAAhC,UACE,wBAAQY,MAAM,sCAAd,mDAGA,wBAAQA,MAAM,iCAAd,8CAGA,wBAAQA,MAAM,yBAAd,sCAGA,wBAAQA,MAAM,+CAAd,4DAGA,wBAAQA,MAAM,kCAAd,+CAGA,wBAAQA,MAAM,kCAAd,+CAGA,wBAAQA,MAAM,8BAAd,2CAGA,wBAAQA,MAAM,sCAAd,mDAGA,wBAAQA,MAAM,+CAAd,+DAIF,uBACA,+CACA,uBAAOK,KAAK,WAAWvF,KAAK,YAAYwF,IAAKjB,IAC7C,uBACA,uBAAOgB,KAAK,SAASvF,KAAK,WAAWwF,IAAKhB,IAC1C,uBAAOe,KAAK,SAASvF,KAAK,YAAYwF,IAAKf,IAC3C,uBAAOc,KAAK,SAASvF,KAAK,eAAewF,IAAKd,IAC9C,uBAAOa,KAAK,SAASvF,KAAK,eAAewF,IAAKb,IAC9C,uBAAOY,KAAK,SAASvF,KAAK,SAASwF,IAAKZ,IACxC,uBAAOW,KAAK,SAASvF,KAAK,WAAWwF,IAAKX,IAC1C,uBAAOU,KAAK,SAASL,MAAM,iCCxMxB,MAA0B,oCCA1B,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,gCCA1B,MAA0B,oCCA1B,MAA0B,gCCA1B,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,qCCkd1BO,EArca,SAAClD,GAAW,IAAD,EACJ/E,mBAAS,IADL,mBAC9BkI,EAD8B,KACjBC,EADiB,KAG/BC,EAAY9B,iBAAO,MACnB+B,EAAgB/B,iBAAO,MACvBgC,EAAahC,iBAAO,MACpBiC,EAAuBjC,iBAAO,MAC9BkC,EAAWlC,iBAAO,MAClBmC,EAAenC,iBAAO,MACtBoC,EAAmBpC,iBAAO,MAC1BqC,EAAerC,iBAAO,MACtBsC,EAAqBtC,iBAAO,MAC5BuC,EAAoBvC,iBAAO,MAC3BU,EAAgBV,iBAAO,MACvBW,EAAiBX,iBAAO,MACxBY,EAAoBZ,iBAAO,MAC3Ba,EAAoBb,iBAAO,MAC3Bc,EAAcd,iBAAO,MACrBe,EAAgBf,iBAAO,MAEvBwC,EAAe,uCAAG,WAAOtB,GAAP,oCAqBbuB,EArBa,WAAApI,EAAA,6DAqBboI,EArBa,SAqBAC,GACpB,OAAQA,GACN,IAAK,UACHA,EACE,mFACF,MAEF,IAAK,QACHA,EACE,iFACF,MAEF,IAAK,WACHA,EACE,oFACF,MAEF,IAAK,MACHA,EACE,+EACF,MAEF,IAAK,QACHA,EACE,iFACF,MAEF,IAAK,SACHA,EACE,kFACF,MAEF,IAAK,WACHA,EACE,oFACF,MAEF,IAAK,UACHA,EACE,mFACF,MAEF,IAAK,MACHA,EACE,+EACF,MAEF,QACEA,EACE,0FAIN,OAAOA,GAzETxB,EAAM7D,iBACAnB,EAAO4F,EAAUX,QAAQC,MACzBnC,EAAW8C,EAAcZ,QAAQC,MACjCnD,EAAO+D,EAAWb,QAAQC,MAC1BlD,EAAiB+D,EAAqBd,QAAQC,MACzC,GACLhC,EAAS+C,EAAahB,QAAQC,MACjB,GACbjC,EAASkD,EAAalB,QAAQC,MAC9B9B,EAAegD,EAAmBnB,QAAQC,MAC1C7B,EAAYgD,EAAkBpB,QAAQC,MACtCxD,EAAQ6E,EAAab,GACrBpC,EAAWkB,EAAcS,QAAQC,MACjC3B,EAAYkB,EAAeQ,QAAQC,MACnC1B,EAAekB,EAAkBO,QAAQC,MACzCzB,EAAekB,EAAkBM,QAAQC,MACzCxB,EAASkB,EAAYK,QAAQC,MAC7BvB,EAAWkB,EAAcI,QAAQC,MACjCC,EAAY3E,OAAOC,aAAaC,QAAQ,mBA0DxCP,EAAOC,KAAKC,UAAU,CAC1BL,OACA+C,WACAhB,OACAC,iBACAyE,GA5ES,GA6ETvD,SACAC,WA5EiB,GA6EjBF,SACAG,eACAC,YACA3B,QACA4B,WACAC,YACAC,eACAC,eACAC,SACAC,WACAwB,YACA9D,cAAe,OAhGK,oBAoGGjD,MACrB,2DACA,CACEQ,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBsB,KAAMA,IA3GU,eA+GpBoC,EAAM6C,QAAQC,KAAK,eA/GC,mDAiHpBtG,MAAM,2CACNP,QAAQC,MAAR,MAlHoB,2DAAH,sDA0IrB,SAASiI,IACP,OAAO/G,KAAKgH,MAAsB,EAAhBhH,KAAKE,UAKzB,OAFAU,qBAAU,eAGR,qCACE,sBAAK5B,GAAG,6BAAR,UACE,uBACA,sDACA,uJAEoD,IAClD,mBACEiI,KAAK,0EACLC,OAAO,SACPlI,GAAG,aAHL,4BAQF,qBAAKA,GAAG,cAAR,SACE,uBAAM2G,SAAUgB,EAAiB1H,OAAO,OAAxC,UACE,oDACA,uBACA,uBAAO2G,KAAK,OAAOvF,KAAK,OAAOwF,IAAKI,IACpC,uBACA,8CACA,uBACA,uBAAOL,KAAK,OAAOvF,KAAK,WAAWwF,IAAKK,IACxC,uBACA,0CACA,uBACA,yBAAQlF,UAAU,SAAS6E,IAAKM,EAAhC,UACE,wBAAQZ,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,sBAEF,uBACA,2CACA,uBACA,yBAAQvE,UAAU,SAAS6E,IAAKO,EAAhC,UACE,wBAAQb,MAAM,UAAd,4BACA,wBAAQA,MAAM,SAAd,0BACA,wBAAQA,MAAM,QAAd,mCACA,wBAAQA,MAAM,SAAd,6BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,wBAEF,uBACA,wCACA,uBACA,wBAAQvE,UAAU,SAAS6E,IAAKQ,EAAhC,SACE,wBAAQd,MAAM,KAAd,kBAEF,uBACA,4CACA,uBACA,yBAAQvE,UAAU,SAAS6E,IAAKS,EAAhC,UACE,wBAAQf,MAAM,cAAd,yBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,QAAd,wBACA,wBAAQA,MAAM,OAAd,2BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,cAAd,4BAEF,uBACA,gDACA,uBACA,wBAAQvE,UAAU,SAAS6E,IAAKU,EAAhC,SACE,wBAAQhB,MAAM,KAAd,kBAEF,uBACA,4CACA,uBACA,yBAAQvE,UAAU,SAAS6E,IAAKW,EAAhC,UACE,wBAAQjB,MAAM,aAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,yBAEF,uBACA,kDACA,uBACA,yBAAQvE,UAAU,SAAS6E,IAAKY,EAAhC,UACE,wBAAQlB,MAAM,sCAAd,mDAGA,wBAAQA,MAAM,iCAAd,8CAGA,wBAAQA,MAAM,yBAAd,sCAGA,wBAAQA,MAAM,+CAAd,4DAGA,wBAAQA,MAAM,kCAAd,+CAGA,wBAAQA,MAAM,kCAAd,+CAGA,wBAAQA,MAAM,8BAAd,2CAGA,wBAAQA,MAAM,sCAAd,mDAGA,wBAAQA,MAAM,+CAAd,+DAIF,uBACA,+CACA,uBACA,0BACElF,KAAK,YACL8G,KAAK,KACLC,KAAK,IACLvB,IAAKa,IAGP,uBACA,4CACA,uBAEA,gCACE,uBACEd,KAAK,QACLL,MAAM,UACNlF,KAAK,UACLW,UAAU,eACVqG,QAAyB,YAAhBtB,EACTuB,SAAU,SAAC/F,GACTyE,EAAU,cAGd,qBAAKlE,IAAKyF,EAASvG,UAAU,SAASwG,IAAI,eAE5C,gCACE,uBACE5B,KAAK,QACLL,MAAM,QACNlF,KAAK,UACLgH,QAAyB,UAAhBtB,EACTzE,QAAS,SAACC,GACRyE,EAAU,YAGd,qBAAKlE,IAAK2F,EAAOzG,UAAU,SAASwG,IAAI,aAE1C,gCACE,uBACE5B,KAAK,QACLL,MAAM,MACNlF,KAAK,UACLgH,QAAyB,QAAhBtB,EACTuB,SAAU,SAAC/F,GACTyE,EAAU,UAGd,qBAAKlE,IAAK4F,EAAK1G,UAAU,SAASwG,IAAI,WAExC,gCACE,uBACE5B,KAAK,QACLL,MAAM,UACNlF,KAAK,UACLgH,QAAyB,YAAhBtB,EACTuB,SAAU,SAAC/F,GACTyE,EAAU,cAGd,qBAAKlE,IAAK6F,EAAS3G,UAAU,SAASwG,IAAI,eAE5C,gCACE,uBACE5B,KAAK,QACLL,MAAM,QACNlF,KAAK,UACLgH,QAAyB,UAAhBtB,EACTuB,SAAU,SAAC/F,GACTyE,EAAU,YAGd,qBAAKlE,IAAK8F,EAAO5G,UAAU,SAASwG,IAAI,aAE1C,gCACE,uBACE5B,KAAK,QACLL,MAAM,MACNlF,KAAK,UACLgH,QAAyB,QAAhBtB,EACTuB,SAAU,SAAC/F,GACTyE,EAAU,UAGd,qBAAKlE,IAAK+F,EAAK7G,UAAU,SAASwG,IAAI,WAExC,gCACE,uBACE5B,KAAK,QACLL,MAAM,WACNlF,KAAK,UACLgH,QAAyB,aAAhBtB,EACTuB,SAAU,SAAC/F,GACTyE,EAAU,eAGd,qBAAKlE,IAAKgG,EAAU9G,UAAU,SAASwG,IAAI,gBAE7C,gCACE,uBACE5B,KAAK,QACLL,MAAM,SACNlF,KAAK,UACLgH,QAAyB,WAAhBtB,EACTuB,SAAU,SAAC/F,GACTyE,EAAU,aAGd,qBAAKlE,IAAKiG,EAAQ/G,UAAU,SAASwG,IAAI,cAE3C,gCACE,uBACE5B,KAAK,QACLL,MAAM,WACNlF,KAAK,UACLgH,QAAyB,aAAhBtB,EACTuB,SAAU,SAAC/F,GACTyE,EAAU,eAGd,qBAAKlE,IAAKkG,EAAUhH,UAAU,SAASwG,IAAI,gBAG7C,uBACA,8CACA,uBACA,uBAAO5B,KAAK,OAAOvF,KAAK,WAAWwF,IAAKhB,IACxC,uBACA,+CACA,uBACA,uBAAOe,KAAK,OAAOvF,KAAK,YAAYwF,IAAKf,IACzC,uBACA,iDACA,uBACA,uBAAOc,KAAK,OAAOvF,KAAK,eAAewF,IAAKd,IAC5C,uBACA,kDACA,uBACA,uBAAOa,KAAK,OAAOvF,KAAK,eAAewF,IAAKb,IAC5C,uBACA,4CACA,uBACA,uBAAOY,KAAK,OAAOvF,KAAK,SAASwF,IAAKZ,IACtC,uBACA,8CACA,uBACA,uBAAOW,KAAK,OAAOvF,KAAK,WAAWwF,IAAKX,IACxC,uBACA,uBACA,cAAChE,EAAA,EAAD,CACEI,QAxSU,WAEpB,IADA,IAAI2G,EAAQ,GACHC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAASpB,IACboB,GAAUpB,IACVkB,EAAMvC,KAAMyC,GAAU,GAExBtD,EAAcS,QAAQC,MAAQ0C,EAAM,GACpCnD,EAAeQ,QAAQC,MAAQ0C,EAAM,GACrClD,EAAkBO,QAAQC,MAAQ0C,EAAM,GACxCjD,EAAkBM,QAAQC,MAAQ0C,EAAM,GACxChD,EAAYK,QAAQC,MAAQ0C,EAAM,GAClC/C,EAAcI,QAAQC,MAAQ0C,EAAM,GACpCpJ,QAAQY,IAAIwI,IA4RFjJ,GAAG,OACHmC,MAAO,CAAEC,gBAAiB,kBAH5B,wBAOA,uBACA,uBAAOwE,KAAK,SAASL,MAAM,mBAAmBvG,GAAG,uBAIvD,4B,gCC9cS,MAA0B,uC,QCwL1BoJ,MAvKf,WAAmB,IAAD,EACkBvK,mBAAS,EAAC,IAD5B,mBACTM,EADS,KACEC,EADF,KAEVC,EAAc,kBAAMD,GAAa,IAFvB,EAKoBP,oBAAS,GAL7B,mBAKTwK,EALS,KAKGC,EALH,KAMVC,EAAoB,kBAAMD,GAAc,IAN9B,EASsBzK,oBAAS,GAT/B,mBAST2K,EATS,KASIC,EATJ,OAa0B5K,oBAAS,GAbnC,mBAaT6K,EAbS,KAaMC,EAbN,KAcVC,EAAkB,kBAAMD,GAAiB,IAU/C,OAPA/H,qBAAU,WACRxC,IACAqK,IACAE,IACAL,MACC,IAGD,mCACE,sBAAKtJ,GAAG,0BAAR,UACE,uBACA,uBACA,sBAAKA,GAAG,iBAAR,UACE,oBAAIA,GAAG,YAAP,yBACA,mBAAGA,GAAG,WAAN,uLAOF,cAACkC,EAAA,EAAD,CACEW,QAAQ,UACRP,QArCW,kBAAMlD,GAAa,IAsC9B+C,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBALjB,2BAUA,eAACiB,EAAA,EAAD,CAAOC,KAAMpE,EAAWqE,OAAQnE,EAAhC,UACE,cAACwK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,wBAEF,eAACC,EAAA,EAAD,sEAEE,uBAFF,0DAIE,uBAJF,qBAOA,eAACC,EAAA,EAAD,WACE,cAAC9H,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASjD,EAArC,qBAGA,cAAC6C,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASjD,EAArC,0BAGA,cAAC6C,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASjD,EAArC,+BAKJ,uBACA,uBACA,cAAC6C,EAAA,EAAD,CACEW,QAAQ,UACRP,QAjEmB,kBAAMmH,GAAe,IAkExCtH,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBALjB,gCAUA,eAACiB,EAAA,EAAD,CAAOC,KAAMiG,EAAahG,OAxEJ,kBAAMiG,GAAe,IAwE3C,UACE,cAACI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,8EAIF,eAACC,EAAA,EAAD,uEAEE,uBAFF,+JAMA,eAACC,EAAA,EAAD,4BAEE,cAAC9H,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASsH,EAArC,uBAGA,cAAC1H,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASsH,EAArC,sBAGA,cAAC1H,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASsH,EAArC,0CAKJ,eAACtG,EAAA,EAAD,CAAOC,KAAMmG,EAAelG,OA7FT,kBAAMmG,GAAiB,IA6F1C,UACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,oCAEF,eAACC,EAAA,EAAD,mMAIE,uBACA,uBALF,8aAcA,eAACC,EAAA,EAAD,WACE,cAAC9H,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASiH,EAArC,qCAGA,cAACrH,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASiH,EAArC,mCAGA,cAACrH,EAAA,EAAD,CAAQW,QAAQ,YAAYP,QAASiH,EAArC,wCAKJ,eAACjG,EAAA,EAAD,CAAOC,KAAM8F,EAAY7F,OAnIJ,kBAAM8F,GAAc,IAmIzC,UACE,cAACO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,qCAEF,eAACC,EAAA,EAAD,qCAEE,uBACA,uBAHF,sNAQE,cAAC7F,EAAA,EAAD,CACEpB,IAAKmH,EACLjK,GAAG,oBACHwI,IAAI,mBAGR,cAACwB,EAAA,EAAD,UACE,cAAC,IAAD,CAAM/H,GAAG,WAAT,SACE,cAACC,EAAA,EAAD,CAAQW,QAAQ,YAAhB,uC,QC/KC,GCAA,IDAA,IAA0B,iCEA1B,MAA0B,sCC2T1BqH,MA3Sf,WAAmB,IAAD,EACuCrL,mBAAS,IADhD,mBACTsL,EADS,KACSC,EADT,OAEQvL,oBAAS,GAFjB,mBAETwL,EAFS,KAEHC,EAFG,OAGoBzL,oBAAS,GAH7B,mBAGT0L,EAHS,KAGGC,EAHH,OAI0B3L,oBAAS,GAJnC,mBAIT4L,EAJS,KAIMC,EAJN,OAKwB7L,mBAAS,IALjC,mBAKT8L,EALS,KAKKC,EALL,KAOVC,EAAe,kBAAMP,GAAQ,IAE7BQ,EAAgB,kBAAMN,GAAc,IAEpCO,EAAuB,kBAAML,GAAiB,IAEhDjE,EAAUuE,cAEd,SAASC,EAAiBnM,GACxB,IAAMoM,EAAWpM,EAAWwB,QAAO,SAAC6K,GAAD,MAA+B,OAAtBA,EAAIzI,iBAEhD,GAAIwI,EAASpK,OAAS,EAAG,CACvB,IACIsK,EAAaF,EADClK,KAAKC,MAAMD,KAAKE,UAAYgK,EAASpK,OAAS,KAOhE,OAJmBhC,EAAWwB,QAC5B,SAAC6K,GAAD,MAA+B,QAAtBA,EAAIzI,eAA2ByI,EAAI9J,OAAS+J,EAAW/J,QAMpE,OAAOvC,EAGT,IAAMuM,EAAqB,uCAAG,8BAAA7L,EAAA,+EAEHC,MACrB,4DAHwB,cAEpBC,EAFoB,gBAKGA,EAASC,OALZ,OAKpB2L,EALoB,OAO1BlB,EAA2Ba,EAAiBK,IAPlB,kDAS1BzL,QAAQC,MAAR,MAT0B,0DAAH,qDAa3B,SAASyL,IAEP,OADevK,KAAKgH,MAAsB,GAAhBhH,KAAKE,UAAiB,EAIlD,SAASsK,EAAmBnF,GAC1B,IAAMoF,EAAmB,YAAOtB,GAC1BuB,EAAUD,EAAoBE,MAClC,SAACC,GAAD,MAA+B,QAAtBA,EAAIlJ,iBAIXmJ,EAAmBH,EADL1K,KAAKC,MAAMD,KAAKE,UAAYwK,EAAQ5K,OAAS,KAG/D,GAAI+K,EAAiBrL,MAAQ6F,EAAM6B,OAAO3B,MAAO,CAC/C,IAAMuF,EAAOP,IAETO,GAAQD,EAAiBrH,YAC3BqH,EAAiBxH,IAAM,EACvBjE,MAAM,4CAEFyL,EAAiBxH,IAAM,IACzBoC,EAAQC,KAAK,WACbtG,MAAM,6EAKRA,MAAM,gBAAD,OAAiB0L,EAAjB,mBAGP,IAAMC,EAAkBN,EAAoBO,QAC5C5B,EAA2B,GAAD,mBAAKqB,GAAL,CAA0BM,SAC/C,CACL,IAAME,EAAqBR,EAAoBnL,QAC7C,SAAC4L,GAAD,MAA6B,QAArBA,EAAGxJ,iBAIPyJ,EAAoBF,EADTjL,KAAKgH,MAAMhH,KAAKE,SAAW+K,EAAmBnL,SAEzDgL,EAAOP,IASb,GAPIO,GAAQK,EAAkB3H,YAC5B2H,EAAkB9H,IAAM,EACxBjE,MAAM+L,EAAkB9K,KAAlB,wCAENjB,MAAM,oBAAD,OAAqB0L,EAArB,oBAGHK,EAAkB9H,IAAM,EAAG,CAC7BjE,MAAM,UAAY+L,EAAkB9K,KAA9B,gBAEN,IAAM+K,EAAuBX,EAAoBnL,QAC/C,SAAC+L,GAAD,OAAYA,EAAO7L,MAAQ2L,EAAkB3L,OAGzC8L,EAAWF,EAAqBJ,QACtC5B,EAA2B,GAAD,mBAAKgC,GAAL,CAA2BE,SAChD,CACL,IAAMC,EAAcd,EAAoBO,QACxC5B,EAA2B,GAAD,mBAAKqB,GAAL,CAA0Bc,MAK1B,IAA5BpC,EAAiBrJ,QACjBqJ,EAAiB,GAAG3J,MAAQkL,EAAQlL,MAEpCJ,MACE,yIAEFqG,EAAQC,KAAK,aA2CjB,SAAS8F,EAAkBnG,GACzBjG,MACE+J,EACGwB,MAAK,SAACc,GAAD,OAAUA,EAAKjM,MAAQ6F,EAAM6B,OAAO3B,SACzC9B,aAAaiI,MAAM,KAAK,IAW/B,OAPA9K,qBAAU,WACRyJ,IACAT,IACAF,IACAF,MACC,IAGD,mCACE,sBAAKxI,UAAU,oBAAf,UACE,gCACE,iDACA,qBAAKc,IAAK6J,EAAWnE,IAAI,YAAYxG,UAAU,oBAC/C,qBAAKc,IAAK8J,EAAKpE,IAAI,MAAMxG,UAAU,cACnC,uBACA,eAAC,IAAD,CAAOqI,KAAMA,EAAMwC,QAAShC,EAAciC,QAAM,EAAhD,UACE,8CACA,6LAKA,uBACA,wBAAQxK,QAASuI,EAAc7K,GAAG,gBAAlC,qBAKF,cAACkC,EAAA,EAAD,CACEI,QA5LW,kBAAMkI,GAAc,IA6L/BrI,MAAO,CACLC,gBAAiB,UACjBC,YAAa,SAJjB,gCASA,eAAC,IAAD,CACEgI,KAAME,EACNsC,QAAS/B,EACTgC,QAAM,EACN9K,UAAU,eAJZ,UAME,wCACA,4IAIA,uBACA,wBAAQM,QAASwI,EAAe9K,GAAG,gBAAnC,yBAKJ,uBACA,cAACkC,EAAA,EAAD,CACEI,QAvGR,SAA8B+D,GAC5B,IACM0G,EADmB,YAAO5C,GACU1H,KAAI,SAAC4J,GAI7C,OAHAA,EAAOW,WAAazB,IAjHUb,GAAiB,GAoHxC2B,KAGLY,EAAe,GAEnBF,EAActK,KAAI,SAAC4J,GACS,KAAtBA,EAAOW,WACTC,GACEZ,EAAOhL,KAAP,qBAEAgL,EAAOW,WAFPX,yBAK6B,IAAtBA,EAAOW,WAChBC,GACEZ,EAAOhL,KAAP,qBAEAgL,EAAOW,WAFPX,mCAMFY,GACEZ,EAAOhL,KAAP,aAA6BgL,EAAOW,WAAa,qBAIvDpC,EAAgBqC,GAEhB7C,EACE2C,EAAcG,MAAK,SAAC1N,EAAG2N,GAAJ,OAAUA,EAAEH,WAAaxN,EAAEwN,gBAqE1C7K,MAAO,CACLC,gBAAiB,UACjBC,YAAa,SAJjB,6BASA,eAAC,IAAD,CACEgI,KAAMI,EACNoC,QAAS9B,EACT+B,QAAM,EACN9K,UAAU,eAJZ,UAME,kDACA,uBACA,uBACA,4BAAI2I,IACJ,wBAAQrI,QAASyI,EAAjB,qBAEF,uBACA,uBACA,oBAAG/K,GAAG,WAAN,qBAEE,uBAFF,qCAIE,uBAJF,mGAQA,6BACGmK,EAAiB1H,KAAI,SAAC4J,GACrB,OACE,qBAAqBrM,GAAG,wBAAxB,UACE,eAAC2C,EAAA,EAAD,CAAMR,MAAO,CAAEiL,MAAO,SAAtB,UACE,cAACzK,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKuJ,EAAOtJ,QACpC,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAaoJ,EAAOhL,OACpB,eAACsB,EAAA,EAAKQ,KAAN,WACGkJ,EAAOjJ,KADV,MACmBiJ,EAAOhJ,eAD1B,IAC0C,uBAD1C,OAEOgJ,EAAOhI,GAFd,mBAEkCgI,EAAO7H,WAFzC,WAE6D,IAC1D6H,EAAOW,oBAId,uBACA,cAAC9K,EAAA,EAAD,CACEqE,MAAO8F,EAAO7L,IACd8B,QAASkK,EACTrK,MAAO,CACLC,gBAAiB,UACjBC,YAAa,SALjB,mBAbF,KAwBE,cAACH,EAAA,EAAD,CACEqE,MAAO8F,EAAO7L,IACd8B,QAASkJ,EACTrJ,MAAO,CACLC,gBAAiB,UACjBC,YAAa,SALjB,sBAxBOgK,EAAO7L,gBC7Of6M,MA/Bf,WACE,OACE,mCACE,qBAAKrL,UAAU,WAAf,SACE,sBAAKhC,GAAG,mBAAR,UACE,oBAAIA,GAAG,eAAP,wCACA,wGAIA,0OAKA,cAAC,IAAD,CAAMiC,GAAG,SAAT,SACE,cAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,iBACjBC,YAAa,kBAHjB,mCCpBG,MAA0B,mCCwD1BiL,MApDf,WACE,OACE,qCACE,sBAAKtL,UAAU,SAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,cAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,uBAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,uBAEF,sBAAKjC,GAAG,eAAR,UACE,oBAAIA,GAAG,aAAP,8BACA,qBAAK8C,IAAKyK,EAAQ/E,IAAI,WACtB,sBAAKxI,GAAG,mBAAR,UACE,wXAQA,gLAKA,4DACA,qJAIA,4FAEE,uBACA,uBAHF,uEAKE,uBACA,uBANF,kIASE,uBACA,uBAVF,uHAcA,oBAAIA,GAAG,aAAP,+BC7BKwN,MAjBf,WACE,OACE,qCACA,sBAAKxL,UAAU,SAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,cAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,uBAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,uBAEF,qGAGA,sE,QCsDSwL,EAjEM,SAAC7J,GACpB,IAAM8J,EAAgBvI,iBAAO,MACvBwI,EAAgBxI,iBAAO,MACvByI,EAAuBzI,iBAAO,MAE9B0I,EAAQ,uCAAG,WAAOxH,GAAP,eAAA7G,EAAA,6DACf6G,EAAM7D,iBACAhB,EAAOC,KAAKC,UAAU,CAC1BoM,SAAUJ,EAAcpH,QAAQC,MAChCwH,SAAUJ,EAAcrH,QAAQC,MAChCyH,gBAAiBJ,EAAqBtH,QAAQC,QAEhDF,EAAM4H,cAAcC,QAPL,kBASUzO,MACrB,qDACA,CACEQ,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBsB,SAhBS,cAmBTmM,IAAkBC,EACpBxN,MAAM,4BAENA,MAAM,oBACNwD,EAAM6C,QAAQC,KAAK,WAvBR,kDA0Bb7G,QAAQC,MAAR,MA1Ba,0DAAH,sDA8Bd,OACE,mCACE,gCACE,0CACA,gMAKA,eAACqO,EAAA,EAAD,CAAMxH,SAAUkH,EAAU5N,OAAO,OAAjC,UACE,6CACA,uBAAO2G,KAAK,OAAOvF,KAAK,WAAWwF,IAAK6G,IACxC,uBACA,6CACA,uBAAO9G,KAAK,WAAWvF,KAAK,WAAWwF,IAAK8G,IAC5C,uBACA,qDACA,uBACE/G,KAAK,WACLvF,KAAK,kBACLwF,IAAK+G,IAEP,uBACA,uBAAOhH,KAAK,SAASL,MAAM,WAAWvG,GAAG,wB,QCkBpCoO,EA1EG,SAACxK,GACjB,IAAMqD,EAAY9B,iBAAO,MACnBwI,EAAgBxI,iBAAO,MACvBkJ,EACJ,2EAEIC,EAAK,uCAAG,WAAOjI,GAAP,SAAA7G,EAAA,sDACZ,IACEoE,EAAM2K,UAAUlI,EAAOY,EAAUX,QAAQC,MAAOoH,EAAcrH,QAAQC,OACtE,MAAOzG,GACPD,QAAQY,IAAIX,GAJF,2CAAH,sDAgCX,OANA8B,qBAAU,WACJC,OAAOC,aAAaC,QAAQ,UAC9B6B,EAAM3E,SAAS4C,OAAOC,aAAaC,QAAQ,YAE5C,IAGD,qCACE,gCACE,8EACA,8BACE,cAAC,cAAD,CACEsM,SAAUA,EACVG,WAAW,oBACXC,UA9BQ,SAACC,GACjB7O,QAAQY,IAAI,+BAAgCiO,EAAIC,YCvBnB,SAACD,GAC9B,IAAIE,EAA6D,KAA5CF,EAAIG,SAASC,YAAc,MAE1CC,EAAY,uCAAG,4BAAAvP,EAAA,sEACQkP,EAAIM,qBADZ,OACXC,EADW,OAEjBL,EAA2D,KAA1CK,EAAWH,YAAc,MAC1CjP,QAAQY,IAAI,cAAewO,GAC3BpP,QAAQY,IAAI,iBAAkBwO,EAAWC,UACzCC,WAAWJ,EAAcH,GALR,2CAAH,qDAQlBO,WAAWJ,EAAcH,GDczBQ,CAAkBV,IA4BVW,UAzBQ,SAACX,GACjB7O,QAAQY,IAAI,sBAAuBiO,IAyB3BY,aAAc,qBACdnN,MAAO,CAAEoN,UAAW,SACpBC,YAAY,MAGhB,uBAAM7I,SAAU2H,EAAOrO,OAAO,OAA9B,UACE,6CACA,uBAAO2G,KAAK,OAAOvF,KAAK,WAAWwF,IAAKI,IACxC,uBACA,6CACA,uBAAOL,KAAK,WAAWvF,KAAK,WAAWwF,IAAK8G,IAC5C,uBACA,uBAAO/G,KAAK,SAASL,MAAM,QAAQvG,GAAG,qBAGzC,8BACC,cAAC,eAAD,CACEqO,SAAUA,EACVG,WAAW,qBACXiB,gBAzCgB,WACtBrP,MAAM,oC,gBE2HKsP,mBA/Hf,SAAa9L,GAAQ,IAAD,EACgB/E,oBAAS,GADzB,mBACX8Q,EADW,KACDzQ,EADC,OAEQL,mBAAS,IAFjB,mBAEJI,GAFI,aAGiBJ,mBAAS,MAH1B,mBAGE+Q,GAHF,WAoBZrB,EAAS,uCAAG,WAAOlI,EAAOyH,EAAU+B,GAAxB,mBAAArQ,EAAA,6DAChB6G,EAAM7D,iBACAhB,EAAOC,KAAKC,UAAU,CAC1BoM,SAAUA,EACVC,SAAU8B,IAJI,kBAOSpQ,MAAM,kDAE3B,CACEQ,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBsB,SAdU,cAOR9B,EAPQ,gBAkBKA,EAASC,OAlBd,OAkBRC,EAlBQ,OAmBdC,QAAQY,IAAIf,GAEZmC,OAAOC,aAAagO,QAAQ,QAA5B,iBAA+ClQ,EAAKZ,QACpDC,EAAS,UAAD,OAAWW,EAAKZ,QACxB6C,OAAOC,aAAagO,QAAQ,kBAAmBhC,GAC/C8B,EAAY9B,GAEZ5O,GAAc,GACdkB,MAAM,oCACNwD,EAAM6C,QAAQC,KAAK,eA5BL,kDA8BdxH,GAAc,GACdW,QAAQY,IAAR,MA/Bc,0DAAH,0DA2Cf,OARAmB,qBAAU,WACJC,OAAOC,aAAaC,QAAQ,WAC9B9C,EAAS4C,OAAOC,aAAaC,QAAQ,UACrC6N,EAAY/N,OAAOC,aAAaC,QAAQ,oBACxC7C,GAAc,MAEf,IAGD,mCACE,qBAAK8C,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,eAAC+N,EAAA,EAAD,CACEC,GAAG,OACHnN,QAAQ,OACRoN,OAAO,KACP9N,MAAO,CAAE+N,YAAa,QAJxB,UAME,cAACH,EAAA,EAAOI,MAAR,CAAclI,KAAK,IAAnB,4BACA,cAAC8H,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBtQ,GAAG,mBAApB,SACE,eAACuQ,EAAA,EAAD,CAAKvO,UAAU,UAAf,UACE,cAACuO,EAAA,EAAIC,KAAL,CAAUvI,KAAK,IAAf,mBACA,cAACsI,EAAA,EAAIC,KAAL,CAAUvI,KAAK,cAAf,yBACA,cAACsI,EAAA,EAAIC,KAAL,CAAUvI,KAAK,YAAf,wBACA,cAACsI,EAAA,EAAIC,KAAL,CAAUvI,KAAK,SAAf,mBACA,cAACsI,EAAA,EAAIC,KAAL,CAAUlO,QA1EL,WACnBR,aAAa2O,QACbvR,GAAc,GACdkB,MAAM,6BACNwD,EAAM6C,QAAQC,KAAK,WAsEL,oBACA,cAAC6J,EAAA,EAAIC,KAAL,UACGb,EACG,sBACA,oCAKZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,KAAK,IAAIC,OAAK,EAACC,UAAWvD,IACjC,cAAC,IAAD,CAAOqD,KAAK,cAAcC,OAAK,EAACC,UAAWhS,IAC3C,cAAC,IAAD,CAAO8R,KAAK,kBAAkBE,UAAWjN,IACzC,cAAC,IAAD,CACE+M,KAAK,uBACLC,OAAK,EACLC,UAAW9J,IAEb,cAAC,IAAD,CACE4J,KAAK,2BACLC,OAAK,EACLC,UAAW3L,IAEb,cAAC,IAAD,CAAOyL,KAAK,UAAUE,UAAWxH,IACjC,cAAC,IAAD,CAAOsH,KAAK,UAAUE,UAAW1G,IACjC,cAAC,IAAD,CAAOwG,KAAK,UAAUE,UAAWtD,IACjC,cAAC,IAAD,CAAOoD,KAAK,WAAWE,UAAWpD,IAClC,cAAC,IAAD,CAAOkD,KAAK,YAAYE,UAAWC,IACnC,cAAC,IAAD,CACEH,KAAK,SACLI,OAAQ,kBACN,cAACC,EAAD,CACExC,UAAWA,EACXtP,SAAUA,EACVC,cAAeA,sBCrIpB8R,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASX,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFY,SAASC,eAAe,SAM1BX,M","file":"static/js/main.043315cc.chunk.js","sourcesContent":["import \"../App.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Button, Card } from \"react-bootstrap\";\n\nfunction AllCharPage() {\n  const [characters, setCharacters] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\n  const [showModal, setShowModal] = useState([false]);\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  function handleDeleteClick(characterId) {\n    deleteCharacter(characterId);\n    handleClose();\n  }\n\n  /*****************\n   * CHECK LOGIN *\n   ****************/\n\n  const checkLogin = (props) => {\n    if (token) {\n      setIsLoggedIn(\"LOGGED IN\");\n    } else {\n      setIsLoggedIn(\"LOGGED OUT\");\n    }\n  };\n\n  /*****************\n   * GET ALL CHARS *\n   ****************/\n\n  const fetchCharacters = async () => {\n    try {\n      const response = await fetch(\n        \"https://dnd-encounters-2021.herokuapp.com/api/characters\"\n      );\n      const data = await response.json();\n      setCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /***************\n   * DELETE CHAR *\n   ****************/\n\n  const deleteCharacter = async (id) => {\n    try {\n      const response = await fetch(\n        `https://dnd-encounters-2021.herokuapp.com/api/characters/${id}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: token,\n          },\n        }\n      );\n      if (!token) {\n        return alert(\"Please Login before deleting!\");\n      }\n      const data = await response.json();\n      const filteredCharacters = characters.filter(\n        (character) => character._id !== data._id\n      );\n      setCharacters(filteredCharacters);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*****************\n   * GENERATE CHAR *\n   ****************/\n\n  const [randomCharacters, setRandomCharacters] = useState([]);\n\n  const fetchRandomCharacters = async () => {\n    try {\n      const response = await fetch(\n        \"https://dnd-encounters-2021.herokuapp.com/api/characters\"\n      );\n      const data = await response.json();\n\n      setRandomCharacters(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const generateChar = async () => {\n    if (randomCharacters.length === 0) {\n      return;\n    }\n    let randomIndex = Math.round(Math.random() * (randomCharacters.length - 1));\n    let generatedCharacter = randomCharacters[randomIndex];\n\n    console.log(\"char dupe: \" + characters.includes(generatedCharacter.name));\n    console.log(generatedCharacter.name);\n    try {\n      if (characters.includes(generatedCharacter.name)) {\n        const filterDupe = randomCharacters.filter(\n          (rando) => rando.name !== generatedCharacter.name\n        );\n        setRandomCharacters(filterDupe);\n        generateChar();\n      } else {\n        const response = await fetch(\n          \"https://dnd-encounters-2021.herokuapp.com/api/characters\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-type\": \"application/json\",\n              Authorization: token,\n            },\n            body: JSON.stringify(generatedCharacter),\n          }\n        );\n        if (!token) {\n          return alert(\"Please Login before continuing!\");\n        }\n        const newRandomCharList = randomCharacters.filter(\n          (rando) => rando.name !== generatedCharacter.name\n        );\n        setRandomCharacters(newRandomCharList);\n        setCharacters([...characters, generatedCharacter]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    generateChar();\n  }\n\n  /***************\n   * USE EFFECT *\n   ****************/\n\n  useEffect(() => {\n    fetchCharacters();\n    setIsLoggedIn();\n    setShowModal();\n    fetchRandomCharacters();\n    if (window.localStorage.getItem(\"token\")) {\n      setToken(window.localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"character-background\">\n        <div className=\"header-style\">\n          <h1 className=\"my-characters-heading\">My Adventuring Party</h1>\n          <p id=\"my-characters-p\">\n            View and manage all your characters, or create a new one.\n          </p>\n          <div id=\"char-buttons\">\n            <Link to=\"/CreateCharacterForm\">\n              <Button\n                style={{\n                  backgroundColor: \"rgb(44 90 117)\",\n                  borderColor: \"rgb(44 90 117)\",\n                }}\n              >\n                CREATE\n              </Button>\n            </Link>\n\n            <Button\n              onClick={handleClick}\n              style={{\n                backgroundColor: \"rgb(44 90 117)\",\n                borderColor: \"rgb(44 90 117)\",\n              }}\n            >\n              GENERATE\n            </Button>\n            <p id=\"my-characters-p\">\n              Create a new character, or generate a random character.\n            </p>\n          </div>\n        </div>\n        <div id=\"character-list\">\n          <ul>\n            <>\n              {characters.map((character) => {\n                if (character.characterType === \"NPC\") {\n                  return;\n                }\n                return (\n                  <li key={character._id}>\n                    <Card style={{ backgroundColor: \"rgb(44 90 117)\" }}>\n                      <Card.Img\n                        variant=\"top\"\n                        src={character.image}\n                        id=\"thumbnail\"\n                        className=\"rounded mx-auto d-block\"\n                      />\n                      <Card.Body>\n                        <Card.Title style={{ color: \"white\" }}>\n                          {character.name}\n                        </Card.Title>\n                        <Card.Text style={{ color: \"white\" }}>\n                          {character.race} | {character.characterClass}\n                        </Card.Text>\n                        <Button\n                          style={{\n                            backgroundColor: \"rgb(44 90 117)\",\n                            borderColor: \"rgb(44 90 117)\",\n                          }}\n                        >\n                          <Link\n                            to={`/characters/${character._id}`}\n                            style={{ color: \"white\" }}\n                          >\n                            VIEW\n                          </Link>\n                        </Button>\n                        <Button\n                          style={{\n                            backgroundColor: \"rgb(44 90 117)\",\n                            borderColor: \"rgb(44 90 117)\",\n                          }}\n                        >\n                          <div id=\"link\">\n                            <Link\n                              to={`/UpdateCharacterForm/${character._id}`}\n                              style={{ color: \"white\" }}\n                            >\n                              EDIT\n                            </Link>\n                          </div>\n                        </Button>\n                        <Button\n                          variant=\"primary\"\n                          style={{\n                            backgroundColor: \"rgb(44 90 117)\",\n                            borderColor: \"rgb(44 90 117)\",\n                          }}\n                          onClick={handleShow}\n                        >\n                          DELETE\n                        </Button>\n                        <Modal show={showModal} onHide={handleClose}>\n                          <Modal.Header>\n                            <Modal.Title>Delete Character</Modal.Title>\n                          </Modal.Header>\n                          <Modal.Body>\n                            Are you sure you want to delete this character?\n                          </Modal.Body>\n                          <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                              Close\n                            </Button>\n                            <Button\n                              variant=\"primary\"\n                              onClick={() => {\n                                deleteCharacter(character._id);\n                                handleClose();\n                              }}\n                            >\n                              DELETE\n                            </Button>\n                          </Modal.Footer>\n                        </Modal>\n                      </Card.Body>\n                    </Card>\n                  </li>\n                );\n              })}\n            </>\n          </ul>\n          <h1 id=\"ready\">Ready to start adventuring?</h1>\n          <Link to=\"/Tavern\">\n            <Button\n              style={{\n                backgroundColor: \"rgb(44 90 117)\",\n                borderColor: \"rgb(44 90 117)\",\n              }}\n            >\n              Let's Go!\n            </Button>\n            <br />\n            <br />\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AllCharPage;\n","import \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport { Image, Button } from \"react-bootstrap\";\n\nfunction CharacterStats(props) {\n  const [character, setCharacter] = useState({});\n  const characterDetailRouteMatch = useRouteMatch(\"/Characters/:id\");\n  const [token, setToken] = useState(\"\");\n\n  const fetchCharacter = async () => {\n    try {\n      const response = await fetch(\n        `https://dnd-encounters-2021.herokuapp.com/api/characters/${characterDetailRouteMatch.params.id}`\n      );\n      const data = await response.json();\n      setCharacter(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCharacter();\n    if (window.localStorage.getItem(\"token\")) {\n      setToken(window.localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"parchment-background\">\n        <br />\n        <h1 id=\"char-details-h1\">\n          {character.name}'s\n          <br />\n          Character Sheet\n        </h1>\n        <div id=\"character-container\">\n          <br />\n          <div id=\"char-details-img\">\n            <Image src={character.image} thumbnail />\n          </div>\n        </div>\n        <br />\n        <div id=\"stats-list\">\n          <label>Name:</label> {character.name}\n          <br />\n          <label>Race:</label> {character.race}\n          <br />\n          <label>Pronouns:</label> {character.pronouns}\n          <br />\n          <label>Class:</label> {character.characterClass}\n          <br />\n          <label>HP:</label> {character.HP}\n          <br />\n          <label>Main Weapon:</label> {character.weapon}\n          <br />\n          <label>Main Attack:</label> {character.attack}\n          <br />\n          <label>Armor Class:</label> {character.armorClass}\n          <br />\n          <label>Motto:</label>\n          <br />\"{character.catchphrases}\"\n          <br />\n          <br />\n          <label>Backstory:</label>\n          <br />\"{character.backstory}\"\n          <br />\n          <label>Strength:</label> {character.strength}\n          <br />\n          <label>Dexterity:</label> {character.dexterity}\n          <br />\n          <label>Constitution</label> {character.constitution}\n          <br />\n          <label>Intelligence:</label> {character.intelligence}\n          <br />\n          <label>Wisdom</label> {character.wisdom}\n          <br />\n          <label>Charisma:</label> {character.charisma}\n          <br />\n          <br />\n          <Button style={{ backgroundColor: \"rgb(44 90 117)\" }}>\n            <Link\n              to={`/UpdateCharacterForm/${character._id}`}\n              style={{ color: \"white\" }}\n            >\n              EDIT CHARACTER\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CharacterStats;\n","import { useRef } from \"react\";\nimport \"../App.css\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\n\nconst UpdateCharacterForm = (props) => {\n  const updateNameInput = useRef(null);\n  const updatePronounsInput = useRef(null);\n  const updateRaceSelect = useRef(null);\n  const updateCharacterClassSelect = useRef(null);\n  const updateHPSelect = useRef(null);\n  const updateWeaponSelect = useRef(null);\n  const updateAttackSelect = useRef(null);\n  const updateArmorClass = useRef(null);\n  const updateCatchphrasesSelect = useRef(null);\n  const updateBackstory = useRef(null);\n  const strengthInput = useRef(null);\n  const dexterityInput = useRef(null);\n  const constitutionInput = useRef(null);\n  const intelligenceInput = useRef(null);\n  const wisdomInput = useRef(null);\n  const charismaInput = useRef(null);\n  const characterDetailRouteMatch = useRouteMatch(\"/UpdateCharacterForm/:id\");\n  const charId = characterDetailRouteMatch.params.id;\n\n  // use state\n\n  const updateCharacter = async (event) => {\n    event.preventDefault();\n    const name = updateNameInput.current.value;\n    const race = updateRaceSelect.current.value;\n    const characterClass = updateCharacterClassSelect.current.value;\n    const pronouns = updatePronounsInput.current.value;\n    const HP = updateHPSelect.current.value;\n    const weapon = updateWeaponSelect.current.value;\n    const attack = updateAttackSelect.current.value;\n    const armorClass = updateArmorClass.current.value;\n    const catchphrases = updateCatchphrasesSelect.current.value;\n    const backstory = updateBackstory.current.value;\n    const strength = strengthInput.current.value;\n    const dexterity = dexterityInput.current.value;\n    const constitution = constitutionInput.current.value;\n    const intelligence = intelligenceInput.current.value;\n    const wisdom = wisdomInput.current.value;\n    const charisma = charismaInput.current.value;\n    const createdBy = window.localStorage.getItem(\"currentUsername\");\n\n    const body = JSON.stringify({\n      name,\n      race,\n      characterClass,\n      pronouns,\n      HP,\n      weapon,\n      attack,\n      armorClass,\n      catchphrases,\n      backstory,\n      strength,\n      dexterity,\n      constitution,\n      intelligence,\n      wisdom,\n      charisma,\n      createdBy,\n    });\n    console.log(body);\n    // event.currentTarget.reset();\n\n    try {\n      const response = await fetch(\n        `https://dnd-encounters-2021.herokuapp.com/characters/api/${charId}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: body,\n        }\n      );\n      const data = await response.json();\n      console.log(data);\n      props.history.push(\"/characters\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"update-background\">\n        <Link to=\"/Characters\">Go Back</Link>\n        <div className=\"heading-with-form\">\n          <h2 id=\"update-char-h2\">Update Character</h2>\n          <form onSubmit={updateCharacter}>\n            <label>Character Name:</label>\n            <input type=\"text\" name=\"name\" ref={updateNameInput} />\n            <br />\n            <label>Character Pronouns:</label>\n            <input type=\"text\" name=\"pronouns\" ref={updatePronounsInput} />\n            <br />\n            <label>Race:</label>\n            <select className=\"select\" ref={updateRaceSelect}>\n              <option value=\"Human\">Human</option>\n              <option value=\"Half Elf\">Elf</option>\n              <option value=\"Gnome\">Gnome</option>\n              <option value=\"Half Orc\">Half Orc</option>\n              <option value=\"Tiefling\">Tiefling</option>\n              <option value=\"Aasimar\">Aasimar</option>\n              <option value=\"Dragonborn\">Dragonborn</option>\n              <option value=\"Tabaxi\">Tabaxi</option>\n              <option value=\"Centaur\">Centaur</option>\n              <option value=\"Halfling\">Halfling</option>\n              <option value=\"Halfling\">Dwarf</option>\n            </select>\n            <br />\n            <label>Class:</label>\n            <select className=\"select\" ref={updateCharacterClassSelect}>\n              <option value=\"Fighter\">Fighter (Tank)</option>\n              <option value=\"Wizard\">Wizard (DPS)</option>\n              <option value=\"Rogue\">Rogue (stabby stabby)</option>\n              <option value=\"Cleric\">Cleric (Healer)</option>\n              <option value=\"Druid\">Druid</option>\n              <option value=\"Monk\">Monk</option>\n              <option value=\"Paladin\">Paladin</option>\n              <option value=\"Ranger\">Ranger</option>\n              <option value=\"Sorcerer\">Sorcerer</option>\n              <option value=\"Sorcerer\">Warlock</option>\n            </select>\n            <br />\n            <label>HP</label>\n            <select className=\"select\" ref={updateHPSelect}>\n              <option value=\"12\">12</option>\n            </select>\n            <br />\n            <label>Attack:</label>\n            <select className=\"select\" ref={updateAttackSelect}>\n              <option value=\"Sword Slash\">Sword Slash</option>\n              <option value=\"Magic Missile\">Magic Missile</option>\n              <option value=\"Druid\">Shillelagh</option>\n              <option value=\"Monk\">Fury of Blows</option>\n              <option value=\"Eldritch Blast\">Eldritch Blast</option>\n              <option value=\"Acid Splash\">Acid Splash</option>\n            </select>\n            <br />\n            <label>Armor Class</label>\n            <select className=\"select\" ref={updateArmorClass}>\n              <option value=\"15\">15</option>\n            </select>\n            <br />\n            <label>Weapon:</label>\n            <select className=\"select\" ref={updateWeaponSelect}>\n              <option value=\"Greatsword\">Greatsword</option>\n              <option value=\"Wand\">Wand</option>\n              <option value=\"Dagger\">Dagger</option>\n              <option value=\"Longbow\">Longbow</option>\n              <option value=\"Rapier\">Rapier</option>\n              <option value=\"Maul\">Maul</option>\n              <option value=\"Crossbow\">Crossbow</option>\n            </select>\n            <br />\n            <label>Catchphrases:</label>\n            <select className=\"select\" ref={updateCatchphrasesSelect}>\n              <option value=\"Nobody makes me bleed my own blood!\">\n                'Nobody makes me bleed my own blood!'\n              </option>\n              <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">\n                'LEEEEROYYYYY JENKIIIINNNNSSSS!'\n              </option>\n              <option value=\"I attack the darkness!\">\n                'I attack the darkness!'\n              </option>\n              <option value=\"Can't we ever just have a normal field trip?\">\n                'Can't we ever just have a normal field trip?'\n              </option>\n              <option value=\"Screw it, we're basically Gods!\">\n                'Screw it, we're basically Gods!'\n              </option>\n              <option value=\"I’m a lover, not a fighter\">\n                'I’m a lover, not a fighter'\n              </option>\n              <option value=\"Today is a good day to die.\">\n                'Today is a good day to die.'\n              </option>\n              <option value=\"Last name Ever, first name Greatest\">\n                'Last name Ever, first name Greatest'\n              </option>\n              <option value=\"I don't think that's such a good idea, Tommy\">\n                'I don't think that's such a good idea, Tommy'\n              </option>\n            </select>\n            <br />\n            <label>Backstory:</label>\n            <input type=\"textarea\" name=\"backstory\" ref={updateBackstory} />\n            <br />\n            <input type=\"hidden\" name=\"strength\" ref={strengthInput} />\n            <input type=\"hidden\" name=\"dexterity\" ref={dexterityInput} />\n            <input type=\"hidden\" name=\"constitution\" ref={constitutionInput} />\n            <input type=\"hidden\" name=\"intelligence\" ref={intelligenceInput} />\n            <input type=\"hidden\" name=\"wisdom\" ref={wisdomInput} />\n            <input type=\"hidden\" name=\"charisma\" ref={charismaInput} />\n            <input type=\"submit\" value=\"UPDATE CHARACTER\" />\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UpdateCharacterForm;\n","export default __webpack_public_path__ + \"static/media/aasimar.ad47f4e5.png\";","export default __webpack_public_path__ + \"static/media/assassin.6158a192.png\";","export default __webpack_public_path__ + \"static/media/dwarf.0c1fb015.png\";","export default __webpack_public_path__ + \"static/media/elf.202d0a5b.png\";","export default __webpack_public_path__ + \"static/media/fighter.bc219d2f.png\";","export default __webpack_public_path__ + \"static/media/orc.b68d0b10.png\";","export default __webpack_public_path__ + \"static/media/ranger.10ccc962.png\";","export default __webpack_public_path__ + \"static/media/rogue.bb93ecbc.png\";","export default __webpack_public_path__ + \"static/media/sorcerer.e31287b8.png\";","import { useEffect, useRef, useState } from \"react\";\nimport \"../App.css\";\nimport { Button } from \"react-bootstrap\";\nimport aasimar from \"../images/aasimar.png\";\nimport assassin from \"../images/assassin.png\";\nimport dwarf from \"../images/dwarf.png\";\nimport elf from \"../images/elf.png\";\nimport fighter from \"../images/fighter.png\";\nimport orc from \"../images/orc.png\";\nimport ranger from \"../images/ranger.png\";\nimport rogue from \"../images/rogue.png\";\nimport sorcerer from \"../images/sorcerer.png\";\n\nconst CreateCharacterForm = (props) => {\n  const [avatarImage, setAvatar] = useState([]);\n\n  const nameInput = useRef(null);\n  const pronounsInput = useRef(null);\n  const raceSelect = useRef(null);\n  const characterClassSelect = useRef(null);\n  const hpSelect = useRef(null);\n  const attackSelect = useRef(null);\n  const armorClassSelect = useRef(null);\n  const weaponSelect = useRef(null);\n  const catchphrasesSelect = useRef(null);\n  const backstoryTextarea = useRef(null);\n  const strengthInput = useRef(null);\n  const dexterityInput = useRef(null);\n  const constitutionInput = useRef(null);\n  const intelligenceInput = useRef(null);\n  const wisdomInput = useRef(null);\n  const charismaInput = useRef(null);\n\n  const createCharacter = async (event) => {\n    event.preventDefault();\n    const name = nameInput.current.value;\n    const pronouns = pronounsInput.current.value;\n    const race = raceSelect.current.value;\n    const characterClass = characterClassSelect.current.value;\n    const hp = 12;\n    const attack = attackSelect.current.value;\n    const armorClass = 15;\n    const weapon = weaponSelect.current.value;\n    const catchphrases = catchphrasesSelect.current.value;\n    const backstory = backstoryTextarea.current.value;\n    const image = setImagePath(avatarImage);\n    const strength = strengthInput.current.value;\n    const dexterity = dexterityInput.current.value;\n    const constitution = constitutionInput.current.value;\n    const intelligence = intelligenceInput.current.value;\n    const wisdom = wisdomInput.current.value;\n    const charisma = charismaInput.current.value;\n    const createdBy = window.localStorage.getItem(\"currentUsername\");\n\n    function setImagePath(imageName) {\n      switch (imageName) {\n        case \"aasimar\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313372/aasimar_jfgbtr.png\";\n          break;\n\n        case \"dwarf\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313371/dwarf_rh8yqx.png\";\n          break;\n\n        case \"sorcerer\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313372/sorcerer_hookxb.png\";\n          break;\n\n        case \"elf\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313372/elf_enyga3.png\";\n          break;\n\n        case \"rogue\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313372/rogue_hgy6rh.png\";\n          break;\n\n        case \"ranger\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313372/ranger_uynzpr.png\";\n          break;\n\n        case \"assassin\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313371/assassin_xersic.png\";\n          break;\n\n        case \"fighter\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313371/fighter_wfqaxi.png\";\n          break;\n\n        case \"orc\":\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612320641/orc_ha7x63.png\";\n          break;\n\n        default:\n          imageName =\n            \"https://res.cloudinary.com/arolson87/image/upload/v1612313698/david-pumpkins_vtoqpm.png\";\n          break;\n      }\n\n      return imageName;\n    }\n\n    const body = JSON.stringify({\n      name,\n      pronouns,\n      race,\n      characterClass,\n      hp,\n      attack,\n      armorClass,\n      weapon,\n      catchphrases,\n      backstory,\n      image,\n      strength,\n      dexterity,\n      constitution,\n      intelligence,\n      wisdom,\n      charisma,\n      createdBy,\n      characterType: \"PC\",\n    });\n\n    try {\n      const response = await fetch(\n        \"https://dnd-encounters-2021.herokuapp.com/api/characters\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: body,\n        }\n      );\n\n      props.history.push(\"/Characters\");\n    } catch (error) {\n      alert(\"Something went wrong. Please try again.\");\n      console.error(error);\n    }\n  };\n\n  /****************\n   * ROLL  2D6+6 *\n   ****************/\n\n  const rollBaseStats = () => {\n    let rolls = [];\n    for (let i = 0; i < 6; i++) {\n      let result = rollBaseD6();\n      result += rollBaseD6();\n      rolls.push((result += 6));\n    }\n    strengthInput.current.value = rolls[0];\n    dexterityInput.current.value = rolls[1];\n    constitutionInput.current.value = rolls[2];\n    intelligenceInput.current.value = rolls[3];\n    wisdomInput.current.value = rolls[4];\n    charismaInput.current.value = rolls[5];\n    console.log(rolls);\n  };\n\n  function rollBaseD6() {\n    return Math.floor(Math.random() * 6);\n  }\n\n  useEffect(() => {});\n\n  return (\n    <>\n      <div id=\"create-char-background-img\">\n        <br />\n        <h2>Create New Character</h2>\n        <p>\n          Feel free to play around with different characters and stats. If you\n          want more information on rolling a new character,{\" \"}\n          <a\n            href=\"https://www.instructables.com/Creating-a-DD-5e-Character-for-Beginners/\"\n            target=\"_blank\"\n            id=\"click-here\"\n          >\n            click here.\n          </a>\n        </p>\n        <div id=\"create-form\">\n          <form onSubmit={createCharacter} method=\"post\">\n            <label>Character Name:</label>\n            <br />\n            <input type=\"text\" name=\"name\" ref={nameInput} />\n            <br />\n            <label>Pronouns:</label>\n            <br />\n            <input type=\"text\" name=\"pronouns\" ref={pronounsInput} />\n            <br />\n            <label>Race:</label>\n            <br />\n            <select className=\"select\" ref={raceSelect}>\n              <option value=\"Human\">Human</option>\n              <option value=\"Half Elf\">Elf</option>\n              <option value=\"Gnome\">Gnome</option>\n              <option value=\"Half Orc\">Half Orc</option>\n              <option value=\"Tiefling\">Tiefling</option>\n              <option value=\"Aasimar\">Aasimar</option>\n              <option value=\"Dragonborn\">Dragonborn</option>\n              <option value=\"Tabaxi\">Tabaxi</option>\n              <option value=\"Centaur\">Centaur</option>\n              <option value=\"Halfling\">Halfling</option>\n              <option value=\"Dwarf\">Dwarf</option>\n            </select>\n            <br />\n            <label>Class:</label>\n            <br />\n            <select className=\"select\" ref={characterClassSelect}>\n              <option value=\"Fighter\">Fighter (Tank)</option>\n              <option value=\"Wizard\">Wizard (DPS)</option>\n              <option value=\"Rogue\">Rogue (stabby stabby)</option>\n              <option value=\"Cleric\">Cleric (Healer)</option>\n              <option value=\"Druid\">Druid</option>\n              <option value=\"Monk\">Monk</option>\n              <option value=\"Paladin\">Paladin</option>\n              <option value=\"Ranger\">Ranger</option>\n              <option value=\"Sorcerer\">Sorcerer</option>\n              <option value=\"Warlock\">Warlock</option>\n            </select>\n            <br />\n            <label>HP:</label>\n            <br />\n            <select className=\"select\" ref={hpSelect}>\n              <option value=\"12\">12</option>\n            </select>\n            <br />\n            <label>Attack:</label>\n            <br />\n            <select className=\"select\" ref={attackSelect}>\n              <option value=\"Sword Slash\">Sword Slash</option>\n              <option value=\"Magic Missile\">Magic Missile</option>\n              <option value=\"Druid\">Shillelagh</option>\n              <option value=\"Monk\">Fury of Blows</option>\n              <option value=\"Eldritch Blast\">Eldritch Blast</option>\n              <option value=\"Acid Splash\">Acid Splash</option>\n            </select>\n            <br />\n            <label>Armor Class</label>\n            <br />\n            <select className=\"select\" ref={armorClassSelect}>\n              <option value=\"15\">15</option>\n            </select>\n            <br />\n            <label>Weapon:</label>\n            <br />\n            <select className=\"select\" ref={weaponSelect}>\n              <option value=\"Greatsword\">Greatsword</option>\n              <option value=\"Wand\">Wand</option>\n              <option value=\"Dagger\">Dagger</option>\n              <option value=\"Longbow\">Longbow</option>\n              <option value=\"Rapier\">Rapier</option>\n              <option value=\"Maul\">Maul</option>\n              <option value=\"Crossbow\">Crossbow</option>\n            </select>\n            <br />\n            <label>Catchphrases:</label>\n            <br />\n            <select className=\"select\" ref={catchphrasesSelect}>\n              <option value=\"Nobody makes me bleed my own blood!\">\n                'Nobody makes me bleed my own blood!'\n              </option>\n              <option value=\"LEEEEROYYYYY JENKIIIINNNNSSSS!\">\n                'LEEEEROYYYYY JENKIIIINNNNSSSS!'\n              </option>\n              <option value=\"I attack the darkness!\">\n                'I attack the darkness!'\n              </option>\n              <option value=\"Can't we ever just have a normal field trip?\">\n                'Can't we ever just have a normal field trip?'\n              </option>\n              <option value=\"Screw it, we're basically Gods!\">\n                'Screw it, we're basically Gods!'\n              </option>\n              <option value=\"I’m a lover, not a fighter\">\n                'I’m a lover, not a fighter'\n              </option>\n              <option value=\"Today is a good day to die.\">\n                'Today is a good day to die.'\n              </option>\n              <option value=\"Last name Ever, first name Greatest\">\n                'Last name Ever, first name Greatest'\n              </option>\n              <option value=\"I don't think that's such a good idea, Tommy\">\n                'I don't think that's such a good idea, Tommy'\n              </option>\n            </select>\n            <br />\n            <label>Backstory:</label>\n            <br />\n            <textarea\n              name=\"backstory\"\n              cols=\"25\"\n              rows=\"5\"\n              ref={backstoryTextarea}\n            ></textarea>\n\n            <br />\n            <label>Avatar:</label>\n            <br />\n\n            <div>\n              <input\n                type=\"radio\"\n                value=\"aasimar\"\n                name=\"avatars\"\n                className=\"avatar-style\"\n                checked={avatarImage === \"aasimar\"}\n                onChange={(e) => {\n                  setAvatar(\"aasimar\");\n                }}\n              />\n              <img src={aasimar} className=\"avatar\" alt=\"aasimar\" />\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"dwarf\"\n                name=\"avatars\"\n                checked={avatarImage === \"dwarf\"}\n                onClick={(e) => {\n                  setAvatar(\"dwarf\");\n                }}\n              />\n              <img src={dwarf} className=\"avatar\" alt=\"dwarf\" />\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"elf\"\n                name=\"avatars\"\n                checked={avatarImage === \"elf\"}\n                onChange={(e) => {\n                  setAvatar(\"elf\");\n                }}\n              />\n              <img src={elf} className=\"avatar\" alt=\"elf\" />\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"fighter\"\n                name=\"avatars\"\n                checked={avatarImage === \"fighter\"}\n                onChange={(e) => {\n                  setAvatar(\"fighter\");\n                }}\n              />\n              <img src={fighter} className=\"avatar\" alt=\"fighter\" />\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"rogue\"\n                name=\"avatars\"\n                checked={avatarImage === \"rogue\"}\n                onChange={(e) => {\n                  setAvatar(\"rogue\");\n                }}\n              />\n              <img src={rogue} className=\"avatar\" alt=\"rogue\" />\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"orc\"\n                name=\"avatars\"\n                checked={avatarImage === \"orc\"}\n                onChange={(e) => {\n                  setAvatar(\"orc\");\n                }}\n              />\n              <img src={orc} className=\"avatar\" alt=\"orc\" />\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"sorcerer\"\n                name=\"avatars\"\n                checked={avatarImage === \"sorcerer\"}\n                onChange={(e) => {\n                  setAvatar(\"sorcerer\");\n                }}\n              />\n              <img src={sorcerer} className=\"avatar\" alt=\"sorcerer\" />\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"ranger\"\n                name=\"avatars\"\n                checked={avatarImage === \"ranger\"}\n                onChange={(e) => {\n                  setAvatar(\"ranger\");\n                }}\n              />\n              <img src={ranger} className=\"avatar\" alt=\"ranger\" />\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"assassin\"\n                name=\"avatars\"\n                checked={avatarImage === \"assassin\"}\n                onChange={(e) => {\n                  setAvatar(\"assassin\");\n                }}\n              />\n              <img src={assassin} className=\"avatar\" alt=\"assassin\" />\n            </div>\n\n            <br />\n            <label>Strength:</label>\n            <br />\n            <input type=\"text\" name=\"strength\" ref={strengthInput} />\n            <br />\n            <label>Dexterity:</label>\n            <br />\n            <input type=\"text\" name=\"dexterity\" ref={dexterityInput} />\n            <br />\n            <label>Constitution</label>\n            <br />\n            <input type=\"text\" name=\"constitution\" ref={constitutionInput} />\n            <br />\n            <label>Intelligence:</label>\n            <br />\n            <input type=\"text\" name=\"intelligence\" ref={intelligenceInput} />\n            <br />\n            <label>Wisdom:</label>\n            <br />\n            <input type=\"text\" name=\"wisdom\" ref={wisdomInput} />\n            <br />\n            <label>Charisma:</label>\n            <br />\n            <input type=\"text\" name=\"charisma\" ref={charismaInput} />\n            <br />\n            <br />\n            <Button\n              onClick={rollBaseStats}\n              id=\"roll\"\n              style={{ backgroundColor: \"rgb(44 90 117)\" }}\n            >\n              Roll Stats\n            </Button>\n            <br />\n            <input type=\"submit\" value=\"Create Character\" id=\"submit-btn\" />\n          </form>\n        </div>\n      </div>\n      <div></div>\n    </>\n  );\n};\nexport default CreateCharacterForm;\n","export default __webpack_public_path__ + \"static/media/wizardbook.54a04d8b.png\";","import \"../App.css\";\nimport \"react-responsive-modal/styles.css\";\n// import { Modal } from \"react-responsive-modal\";\nimport \"react-responsive-modal/styles.css\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalTitle,\n  Image,\n} from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport wizardbook from \"../images/wizardbook.png\";\nimport ModalHeader from \"react-bootstrap/esm/ModalHeader\";\n\nfunction Tavern() {\n  const [showModal, setShowModal] = useState([false]);\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const [openAccept, setOpenAccept] = useState(true);\n  const onOpenAcceptModal = () => setOpenAccept(true);\n  const onCloseAcceptModal = () => setOpenAccept(false);\n\n  const [openWizChat, setOpenWizChat] = useState(false);\n  const onOpenWizChatModal = () => setOpenWizChat(true);\n  const onCloseWizChatModal = () => setOpenWizChat(false);\n\n  const [openQuestChat, setOpenQuestChat] = useState(false);\n  const onOpenQuestChat = () => setOpenQuestChat(true);\n  const onCloseQuestChat = () => setOpenQuestChat(false);\n\n  useEffect(() => {\n    setShowModal();\n    setOpenWizChat();\n    setOpenQuestChat();\n    setOpenAccept();\n  }, []);\n\n  return (\n    <>\n      <div id=\"tavern-background-image\">\n        <br />\n        <br />\n        <div id=\"tavern-heading\">\n          <h1 id=\"tavern-h1\">Party time!</h1>\n          <p id=\"tavern-p\">\n            Tavern music is playing loudly, the drinks are flowing and you are\n            reminiscing with your adventuring party. Click on a button below to\n            interact with those around you.\n          </p>\n        </div>\n\n        <Button\n          variant=\"primary\"\n          onClick={handleShow}\n          style={{\n            backgroundColor: \"rgb(44 90 117)\",\n            borderColor: \"rgb(44 90 117)\",\n          }}\n        >\n          Say something\n        </Button>\n        <Modal show={showModal} onHide={handleClose}>\n          <ModalHeader>\n            <ModalTitle>Cheers!</ModalTitle>\n          </ModalHeader>\n          <ModalBody>\n            Gnome: 'Oi! Why don't you get me another drink, friend?'\n            <br />\n            Tiefling: 'To adventure! To friendship! To free booze!'\n            <br />\n            Tabaxi: 'Meow!'\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Huzzah!\n            </Button>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              More drinks!\n            </Button>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Let's Sing!\n            </Button>\n          </ModalFooter>\n        </Modal>\n        <br />\n        <br />\n        <Button\n          variant=\"primary\"\n          onClick={onOpenWizChatModal}\n          style={{\n            backgroundColor: \"rgb(44 90 117)\",\n            borderColor: \"rgb(44 90 117)\",\n          }}\n        >\n          Talk to the Wizard\n        </Button>\n        <Modal show={openWizChat} onHide={onCloseWizChatModal}>\n          <ModalHeader>\n            <ModalTitle>\n              You approach an aged wizard sitting at a table playing cards.\n            </ModalTitle>\n          </ModalHeader>\n          <ModalBody>\n            The wizard looks up at you and chuckles. 'So it begins...\n            <br />I knew you would come. In a land of Myth and a time of Legend\n            there lived a group of adventurers who's destinies would sculpt the\n            future of the world...'\n          </ModalBody>\n          <ModalFooter>\n            Your response:\n            <Button variant=\"secondary\" onClick={onOpenQuestChat}>\n              Say what?\n            </Button>\n            <Button variant=\"secondary\" onClick={onOpenQuestChat}>\n              Go on...\n            </Button>\n            <Button variant=\"secondary\" onClick={onOpenQuestChat}>\n              Sounds fake, but okay.\n            </Button>\n          </ModalFooter>\n        </Modal>\n        <Modal show={openQuestChat} onHide={onCloseQuestChat}>\n          <ModalHeader>\n            <ModalTitle>Sit down, friend...</ModalTitle>\n          </ModalHeader>\n          <ModalBody>\n            The old wizard tells you a tale of intrigue and courage, of magic\n            and mystery, of treasure and toil, of monsters and men. Suddenly,\n            you see a glow coming from the tome in his hands.\n            <br />\n            <br />\n            Finally, he says \"Ahhh yes, so it seems the tome finds you worthy of\n            such a quest. Well now, let's see here, where we are to send\n            you...hmm?\" He licks his index finger and turns a page. \"It says:\n            Behold, Adventurers! The quest is rather simple, however the\n            consequences are severe...I require, on the Isle of Sapphire, a\n            small goldfish... For you'll find me in the depths of Xanthar's\n            Lair. Think you're up to the task?\"\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"secondary\" onClick={onOpenAcceptModal}>\n              Will there be treasure?\n            </Button>\n            <Button variant=\"secondary\" onClick={onOpenAcceptModal}>\n              Will there be danger?\n            </Button>\n            <Button variant=\"secondary\" onClick={onOpenAcceptModal}>\n              Will there be booze?\n            </Button>\n          </ModalFooter>\n        </Modal>\n        <Modal show={openAccept} onHide={onCloseAcceptModal}>\n          <ModalHeader>\n            <ModalTitle>The Wizard laughs...</ModalTitle>\n          </ModalHeader>\n          <ModalBody>\n            Yes! All that and MORE!\n            <br />\n            <br />\n            \"Retrieve the item and meet me back in this tavern when you are\n            done. Now get a move on...and good luck, adventurer. You're going to\n            need it. For few who have traveled this path have returned to tell\n            the tale.\"\n            <Image\n              src={wizardbook}\n              id=\"wizard-book-image\"\n              alt=\"wizard-book\"\n            ></Image>\n          </ModalBody>\n          <ModalFooter>\n            <Link to=\"./battle\">\n              <Button variant=\"secondary\">Let's do it!</Button>\n            </Link>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default Tavern;\n","export default __webpack_public_path__ + \"static/media/d20.5439ca43.png\";","export default __webpack_public_path__ + \"static/media/beholder.3a114013.jpeg\";","export default __webpack_public_path__ + \"static/media/d20natone.677e6a09.png\";","/***************\n *   IMPORTS   *\n ***************/\nimport \"../App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport { Card, Button } from \"react-bootstrap\";\nimport beholder from \"../beholder.jpeg\";\nimport d20 from \"../images/d20.png\";\nimport d20natone from \"../images/d20natone.png\";\n\n/**************\n *   BATTLE   *\n **************/\nfunction Battle() {\n  const [playerCharacters, updatePlayerCharactersList] = useState([]);\n  const [open, setOpen] = useState(true);\n  const [openBattle, setOpenBattle] = useState(false);\n  const [openDiceModal, setOpenDiceModal] = useState(false);\n  const [modalContent, setModalContent] = useState([]);\n\n  const onCloseModal = () => setOpen(false);\n  const onOpenBattle = () => setOpenBattle(true);\n  const onCloseBattle = () => setOpenBattle(false);\n  const onOpenDiceRollModal = () => setOpenDiceModal(true);\n  const onCloseDiceRollModal = () => setOpenDiceModal(false);\n\n  let history = useHistory();\n\n  function chooseOneMonster(characters) {\n    const monsters = characters.filter((mon) => mon.characterType !== \"PC\");\n\n    if (monsters.length > 1) {\n      let randomIndex = Math.round(Math.random() * (monsters.length - 1));\n      let monstaaaaa = monsters[randomIndex];\n\n      const battleCrew = characters.filter(\n        (mon) => mon.characterType !== \"NPC\" || mon.name !== monstaaaaa.name\n      );\n\n      return battleCrew;\n    }\n\n    return characters;\n  }\n\n  const fetchPlayerCharacters = async () => {\n    try {\n      const response = await fetch(\n        \"https://dnd-encounters-2021.herokuapp.com/api/characters\"\n      );\n      const charactersData = await response.json();\n\n      updatePlayerCharactersList(chooseOneMonster(charactersData));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  function rollAD20() {\n    let diceRoll = Math.floor(Math.random() * 20) + 1;\n    return diceRoll;\n  }\n\n  function attackClickHandler(event) {\n    const newPlayerCharacters = [...playerCharacters];\n    const monster = newPlayerCharacters.find(\n      (npc) => npc.characterType === \"NPC\"\n    );\n\n    let randomIndex = Math.round(Math.random() * (monster.length - 1));\n    let generatedMonster = monster[randomIndex];\n\n    if (generatedMonster._id !== event.target.value) {\n      const roll = rollAD20();\n\n      if (roll >= generatedMonster.armorClass) {\n        generatedMonster.HP -= 4;\n        alert(`It's a hit! The Beholder takes 4 damage!`);\n\n        if (generatedMonster.HP <= 0) {\n          history.push(\"/YouWin\");\n          alert(\n            `You did it! You looted the monster and retrieved the precious goldfish!`\n          );\n        }\n      } else {\n        alert(`You rolled a ${roll} . You missed!`);\n      }\n\n      const turnOverMonster = newPlayerCharacters.shift();\n      updatePlayerCharactersList([...newPlayerCharacters, turnOverMonster]);\n    } else {\n      const playableCharacters = newPlayerCharacters.filter(\n        (pc) => pc.characterType !== \"NPC\"\n      );\n\n      const mathFunc = Math.floor(Math.random() * playableCharacters.length);\n      const characterAttacked = playableCharacters[mathFunc];\n      const roll = rollAD20();\n\n      if (roll >= characterAttacked.armorClass) {\n        characterAttacked.HP -= 8;\n        alert(characterAttacked.name + ` was attacked and hit for 8 damage!`);\n      } else {\n        alert(`Monster rolled a ${roll} . It's a miss!`);\n      }\n\n      if (characterAttacked.HP <= 0) {\n        alert(`Oh no! ` + characterAttacked.name + ` passed out!`);\n\n        const nowWithNoDeadPlayers = newPlayerCharacters.filter(\n          (player) => player._id !== characterAttacked._id\n        );\n\n        const turnOver = nowWithNoDeadPlayers.shift();\n        updatePlayerCharactersList([...nowWithNoDeadPlayers, turnOver]);\n      } else {\n        const turnOverMon = newPlayerCharacters.shift();\n        updatePlayerCharactersList([...newPlayerCharacters, turnOverMon]);\n      }\n    }\n\n    if (\n      playerCharacters.length === 1 &&\n      playerCharacters[0]._id === monster._id\n    ) {\n      alert(\n        \"Oh no! Congratulations on your TPK! You lose Dungeons and Dragons and now have to create new characters and form a new party. Bummer!\"\n      );\n      history.push(\"/YouLose\");\n    }\n  }\n\n  function rollInitClickHandler(event) {\n    const newPlayerCharacters = [...playerCharacters];\n    const playersInited = newPlayerCharacters.map((player) => {\n      player.initiative = rollAD20();\n      onOpenDiceRollModal();\n\n      return player;\n    });\n\n    let modalMessage = \"\";\n\n    playersInited.map((player) => {\n      if (player.initiative === 20) {\n        modalMessage +=\n          player.name +\n          ` rolled a natural ` +\n          player.initiative +\n          `....OH YEAH.....CRIT!` +\n          \".\";\n      } else if (player.initiative === 1) {\n        modalMessage +=\n          player.name +\n          ` rolled a natural ` +\n          player.initiative +\n          `....Oh boy.....AUTOMATIC FAIL! ` +\n          \".\";\n      } else {\n        modalMessage +=\n          player.name + ` rolled a ` + player.initiative + \"        .      \";\n      }\n    });\n\n    setModalContent(modalMessage);\n\n    updatePlayerCharactersList(\n      playersInited.sort((a, b) => b.initiative - a.initiative)\n    );\n  }\n\n  function shoutClickHandler(event) {\n    alert(\n      playerCharacters\n        .find((char) => char._id === event.target.value)\n        .catchphrases.split(\".\")[0]\n    );\n  }\n\n  useEffect(() => {\n    fetchPlayerCharacters();\n    setModalContent();\n    setOpenDiceModal();\n    setOpenBattle();\n  }, []);\n\n  return (\n    <>\n      <div className=\"battle-background\">\n        <div>\n          <h1>Time for Battle</h1>\n          <img src={d20natone} alt=\"d20natone\" className=\"D20natone-photo\" />\n          <img src={d20} alt=\"d20\" className=\"D20-photo\" />\n          <br />\n          <Modal open={open} onClose={onCloseModal} center>\n            <h2>On your way!</h2>\n            <p>\n              You're traveling through the forest....suddenly...you hear a\n              terrifying sound. The blood drains from your party member's faces\n              as you search for the source.\n            </p>\n            <br />\n            <button onClick={onCloseModal} id=\"tavern-button\">\n              OKAY\n            </button>\n          </Modal>\n\n          <Button\n            onClick={onOpenBattle}\n            style={{\n              backgroundColor: \"#c80004\",\n              borderColor: \"white\",\n            }}\n          >\n            WHAT'S THAT SOUND?\n          </Button>\n          <Modal\n            open={openBattle}\n            onClose={onCloseBattle}\n            center\n            className=\"battle-modal\"\n          >\n            <h2>Oh no!</h2>\n            <p>\n              A monster appears and it's guarding the treasure you so\n              desperately need! It's time to roll for initiative!\n            </p>\n            <br />\n            <button onClick={onCloseBattle} id=\"tavern-button\">\n              FIGHT\n            </button>\n          </Modal>\n        </div>\n        <br />\n        <Button\n          onClick={rollInitClickHandler}\n          style={{\n            backgroundColor: \"#3e236e\",\n            borderColor: \"white\",\n          }}\n        >\n          ROLL INITIATIVE\n        </Button>\n        <Modal\n          open={openDiceModal}\n          onClose={onCloseDiceRollModal}\n          center\n          className=\"battle-modal\"\n        >\n          <h1>Initiative Rolls</h1>\n          <br />\n          <br />\n          <p>{modalContent}</p>\n          <button onClick={onCloseDiceRollModal}>OKAY</button>\n        </Modal>\n        <br />\n        <br />\n        <p id=\"battle-p\">\n          PLAYERS:\n          <br />\n          In order of their initiative rolls\n          <br />\n          Click \"ATTACK\" when you're ready to take your turn or \"SHOUT\" to talk\n          some smack! Good luck!\n        </p>\n        <ul>\n          {playerCharacters.map((player) => {\n            return (\n              <li key={player._id} id=\"battle-character-list\">\n                <Card style={{ width: \"18rem\" }}>\n                  <Card.Img variant=\"top\" src={player.image} />\n                  <Card.Body>\n                    <Card.Title>{player.name}</Card.Title>\n                    <Card.Text>\n                      {player.race} | {player.characterClass} <br />\n                      HP: {player.HP} | Armor Class: {player.armorClass} | INIT:{\" \"}\n                      {player.initiative}\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n                <br />\n                <Button\n                  value={player._id}\n                  onClick={shoutClickHandler}\n                  style={{\n                    backgroundColor: \"#3e236e\",\n                    borderColor: \"white\",\n                  }}\n                >\n                  SHOUT\n                </Button>\n                ||\n                <Button\n                  value={player._id}\n                  onClick={attackClickHandler}\n                  style={{\n                    backgroundColor: \"#c80004\",\n                    borderColor: \"white\",\n                  }}\n                >\n                  ATTACK\n                </Button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Battle;\n","import \"../App.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nfunction Home() {\n  return (\n    <>\n      <div className=\"homepage\">\n        <div id=\"homepage-content\">\n          <h1 id=\"home-heading\"> Welcome to D&D Encounters</h1>\n          <p>\n            Create your characters, form your party and get ready for an\n            adventure!\n          </p>\n          <p>\n            Are you new to tabletop gaming or looking for a way to play from\n            home? This app is a truncated version of the roleplaying classic to\n            get you a unique experience without the complexity of the full game.\n          </p>\n          <Link to=\"/login\">\n            <Button\n              style={{\n                backgroundColor: \"rgb(44 90 117)\",\n                borderColor: \"rgb(44 90 117)\",\n              }}\n            >\n              GET STARTED\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/wizard.7fd16f9f.png\";","import \"../App.css\";\nimport wizard from \"../images/wizard.png\";\nimport { Link } from 'react-router-dom';\n\nfunction YouWin() {\n  return (\n    <>\n      <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n      <div id=\"you-win-page\">\n        <h1 id=\"you-win-h1\">Congratulations!</h1>\n        <img src={wizard} alt=\"wizard\" />\n        <div id=\"you-win-verbiage\">\n          <p>\n            You slayed the Beholder and returned the goldfish to the old Wizard.\n            He greets you warmly with a grin on his face. \"Welcome back,\n            adventurers! It's so nice to see you alive and well. The world is\n            now safer and my precious goldfish has been returned. I'm sure I\n            don't have to tell you that the tale of your exploits will travel\n            far and wide.\"\n          </p>\n          <p>\n            \"Please, take this as a thank you for the wonderful deed you have\n            done. I hope I can count on you in the future for new quests and\n            adventures!\"\n          </p>\n          <h2>You have received 25 gold!</h2>\n          <p>\n            You're well on your way to upgrading your gear and weapons, buying\n            potions, and procuring fine trinkets and jewelry!\n          </p>\n          <p>\n            At that very moment, the tavern maid approaches your table.\n            <br />\n            <br />\n            \"Thanks for your patronage to the Stag and Lion. Here's your bill.\"\n            <br />\n            <br />\n            You look at the bill. It's 25 gold. Evidently, one of your party\n            members bought a celebratory round for everyone in the tavern.\n            <br />\n            <br />\n            Ah, well. At least you're leaving with a smile on your lips, a tale\n            to tell and an thoroughly engrossed audience.\n          </p>\n          <h1 id=\"you-win-h1\">The End</h1>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default YouWin;\n","import \"../App.css\";\nimport { Link } from 'react-router-dom';\n\nfunction YouLose() {\n  return (\n    <>\n    <nav className=\"topnav\">\n        <Link to=\"/\">HOME</Link>\n        <Link to=\"/characters\">CHARACTERS</Link>\n        <Link to=\"/createcharacterform\">CREATE</Link>\n        <Link to=\"/battle\">BATTLE</Link>\n      </nav>\n      <h1>\n        Your party has been defeated. Oh, well. It was fun while it lasted!\n      </h1>\n      <p>Form a new party and start again!</p>\n    </>\n  );\n}\n\nexport default YouLose;\n","import \"../App.css\";\nimport { useRef } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst RegisterForm = (props) => {\n  const usernameInput = useRef(null);\n  const passwordInput = useRef(null);\n  const confirmPasswordInput = useRef(null);\n\n  const register = async (event) => {\n    event.preventDefault();\n    const body = JSON.stringify({\n      username: usernameInput.current.value,\n      password: passwordInput.current.value,\n      confirmPassword: confirmPasswordInput.current.value,\n    });\n    event.currentTarget.reset();\n    try {\n      const response = await fetch(\n        \"https://dnd-encounters-2021.herokuapp.com/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body,\n        }\n      );\n      if (passwordInput !== confirmPasswordInput) {\n        alert(\"Passwords do not match!\");\n      } else {\n        alert(\"Account created!\");\n        props.history.push(\"/Login\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <h2>Register</h2>\n        <p>\n          Please create a unique username and password to create an account. We\n          suggest passwords be at least 8 characters with letters, numbers, and\n          special characters.\n        </p>\n        <Form onSubmit={register} method=\"post\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={usernameInput} />\n          <br />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={passwordInput} />\n          <br />\n          <label>Confirm Password</label>\n          <input\n            type=\"password\"\n            name=\"confirmpassword\"\n            ref={confirmPasswordInput}\n          />\n          <br />\n          <input type=\"submit\" value=\"REGISTER\" id=\"submit-btn\" />\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import \"../App.css\";\nimport { useEffect, useRef } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { GoogleLogout } from \"react-google-login\";\nimport { refreshTokenSetup } from \"./RefreshToken\";\n\nconst LoginForm = (props) => {\n  const nameInput = useRef(null);\n  const passwordInput = useRef(null);\n  const clientId =\n    \"279098454783-6ifmp48rjph5516k7i7hajcsfshh8h2a.apps.googleusercontent.com\";\n\n  const login = async (event) => {\n    try {\n      props.userLogin(event, nameInput.current.value, passwordInput.current.value);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  \n\n  const onSuccess = (res) => {\n    console.log(\"[Login Success] currentUser:\", res.profileObj);\n\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = (res) => {\n    console.log(\"[Login Failed] res:\", res);\n  };\n\n  const onLogoutSuccess = () => {\n    alert(\"Logged Out Successfully\");\n  };\n\n\n\n  useEffect(() => {\n    if (window.localStorage.getItem(\"token\")) {\n      props.setToken(window.localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  return (\n    <>\n      <div>\n        <p>Welcome back, Adventurer! Please login below.</p>\n        <div>\n          <GoogleLogin\n            clientId={clientId}\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy={\"single_host_origin\"}\n            style={{ marginTop: \"100px\" }}\n            isSignedIn={true}\n          />\n        </div>\n        <form onSubmit={login} method=\"post\">\n          <label>Username</label>\n          <input type=\"text\" name=\"username\" ref={nameInput} />\n          <br />\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" ref={passwordInput} />\n          <br />\n          <input type=\"submit\" value=\"LOGIN\" id=\"submit-btn\" />\n        </form>\n      </div>\n      {<div>\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Logout with Google\"\n          onLogoutSuccess={onLogoutSuccess}\n        ></GoogleLogout>\n      </div>}\n    </>\n  );\n};\n\nexport default LoginForm;\n","export const refreshTokenSetup = (res) => {\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n    const refreshToken = async () => {\n        const newAuthRes = await res.reloadAuthResponse();\n        refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n        console.log('newAuthRes:', newAuthRes);\n        console.log('new auth Token', newAuthRes.id_token);\n        setTimeout(refreshToken, refreshTiming);\n    };\n\n    setTimeout(refreshToken, refreshTiming);\n};","/***************\n *   IMPORTS   *\n ***************/\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n  Link,\n  withRouter,\n} from \"react-router-dom\";\nimport AllCharPage from \"./Components/Characters\";\nimport CharacterStats from \"./Components/CharDetails\";\nimport UpdateCharacterForm from \"./Components/UpdateCharacterForm\";\nimport CreateCharacterForm from \"./Components/CreateCharacterForm\";\nimport Tavern from \"./Components/Tavern.js\";\nimport Battle from \"./Components/Battle\";\nimport Home from \"./Components/Home\";\nimport YouWin from \"./Components/YouWin\";\nimport YouLose from \"./Components/YouLose\";\nimport Register from \"./Components/Register\";\nimport Login from \"./Components/Login\";\nimport { useState, useEffect } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\n/***********\n *   APP   *\n ***********/\nfunction App(props) {\n  const [loggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [currentName, setUsername] = useState(null);\n\n  /***************\n   *   LOGOUT   *\n   ***************/\n  const handleLogOut = () => {\n    localStorage.clear();\n    setIsLoggedIn(false);\n    alert(\"You have been logged out.\");\n    props.history.push(\"/Login\");\n  };\n\n  // get user id from server, set to state\n\n  /***************\n   *   LOG IN   *\n   ***************/\n  const userLogin = async (event, username, pass) => {\n    event.preventDefault();\n    const body = JSON.stringify({\n      username: username,\n      password: pass,\n    });\n    try {\n      const response = await fetch(\n        `https://dnd-encounters-2021.herokuapp.com/login`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body,\n        }\n      );\n\n      const data = await response.json();\n      console.log(response);\n\n      window.localStorage.setItem(\"token\", `Bearer ${data.token}`);\n      setToken(`Bearer ${data.token}`);\n      window.localStorage.setItem(\"currentUsername\", username);\n      setUsername(username);\n\n      setIsLoggedIn(true);\n      alert(\"You are logged in. Welcome back!\");\n      props.history.push(\"/Characters\");\n    } catch (error) {\n      setIsLoggedIn(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (window.localStorage.getItem(\"token\")) {\n      setToken(window.localStorage.getItem(\"token\"));\n      setUsername(window.localStorage.getItem(\"currentUsername\"));\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <Navbar\n              bg=\"dark\"\n              variant=\"dark\"\n              expand=\"sm\"\n              style={{ paddingLeft: \"15px\" }}\n            >\n              <Navbar.Brand href=\"/\">D&D Encounters</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                  <Nav.Link href=\"/\"> Home</Nav.Link>\n                  <Nav.Link href=\"/Characters\"> Characters</Nav.Link>\n                  <Nav.Link href=\"/Register\"> Register </Nav.Link>\n                  <Nav.Link href=\"/Login\">Login</Nav.Link>\n                  <Nav.Link onClick={handleLogOut}>Logout</Nav.Link>\n                  <Nav.Link>\n                    {loggedIn\n                      ? \"{You are logged in}\"\n                      : \"{You are not logged in}\"}\n                  </Nav.Link>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/Characters\" exact component={AllCharPage} />\n              <Route path=\"/Characters/:id\" component={CharacterStats} />\n              <Route\n                path=\"/CreateCharacterForm\"\n                exact\n                component={CreateCharacterForm}\n              />\n              <Route\n                path=\"/UpdateCharacterForm/:id\"\n                exact\n                component={UpdateCharacterForm}\n              />\n              <Route path=\"/Tavern\" component={Tavern} />\n              <Route path=\"/Battle\" component={Battle} />\n              <Route path=\"/YouWin\" component={YouWin} />\n              <Route path=\"/YouLose\" component={YouLose} />\n              <Route path=\"/Register\" component={Register} />\n              <Route\n                path=\"/Login\"\n                render={() => (\n                  <Login\n                    userLogin={userLogin}\n                    setToken={setToken}\n                    setIsLoggedIn={setIsLoggedIn}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}